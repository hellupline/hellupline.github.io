<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Welcome to the Index on HellUpLine Stuffs</title><link>https://hellupline.dev/</link><description>Recent content in Welcome to the Index on HellUpLine Stuffs</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://hellupline.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>Creating a New Theme</title><link>https://hellupline.dev/posts/creating-a-new-theme/</link><pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate><guid>https://hellupline.dev/posts/creating-a-new-theme/</guid><description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I'll explain how Hugo uses templates and how you can organize your templates to create a theme. I won't cover using CSS to style your theme.
We'll start with creating a new site with a very basic template.</description></item><item><title>Migrate to Hugo from Jekyll</title><link>https://hellupline.dev/posts/migrate-from-jekyll/</link><pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate><guid>https://hellupline.dev/posts/migrate-from-jekyll/</guid><description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png Additionally, you'll want any files that should reside at the root (such as CNAME) to be moved to static.</description></item><item><title>AWS</title><link>https://hellupline.dev/docs/knowledge/commands/aws/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/knowledge/commands/aws/</guid><description>List Instance and Private IPs, Filter by beanstalk environment aws --profile=default --region=us-east-1 ec2 describe-instances --filter &amp;quot;Name=tag:elasticbeanstalk:environment-name,Values=my-app&amp;quot; | \ jq --raw-output ' .Reservations[].Instances[] | [.InstanceId, .PrivateIpAddress] | @csv' List Elastic Ips aws --profile=default --region=us-east-1 ec2 describe-addresses \ --public-ips \ --filter &amp;quot;Name=public-ip,Values=[18.217.65.251]&amp;quot; | jq --raw-output ' .Addresses[] | [.PublicIp] | @csv'</description></item><item><title>blurlock</title><link>https://hellupline.dev/docs/scripts/utils/blurlock/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/scripts/utils/blurlock/</guid><description> Download #!/bin/sh # Usage: # $ blurlock # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist SCREENSHOT=$(mktemp --suffix=.png) BLUR=$(mktemp --suffix=.png) # take screenshot gm import -window root ${SCREENSHOT} # blur it gm convert ${SCREENSHOT} -blur 0x5 ${BLUR} rm ${SCREENSHOT} # lock the screen i3lock -i ${BLUR} # sleep 1 adds a small delay to prevent possible race conditions with suspend sleep 1 exit 0</description></item><item><title>cached</title><link>https://hellupline.dev/docs/scripts/utils/cached/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/scripts/utils/cached/</guid><description> Download #!/bin/sh # Usage: # $ cached &amp;#34;command&amp;#34; &amp;#34;cache-file&amp;#34; # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist die () { echo &amp;gt;&amp;amp;2 &amp;#34;$@&amp;#34; exit 1 } [ &amp;#34;$#&amp;#34; -eq 2 ] || die &amp;#34;2 argument required, $#provided&amp;#34; COMMAND=&amp;#34;${1}&amp;#34; FILENAME=&amp;#34;${2}&amp;#34; if [ -f &amp;#34;${FILENAME}&amp;#34; ]; then cat &amp;#34;${FILENAME}&amp;#34; else sh -c &amp;#34;${COMMAND}&amp;#34; | tee &amp;#34;${FILENAME}&amp;#34; fi</description></item><item><title>cached-proxy.conf</title><link>https://hellupline.dev/docs/cloud/nginx/cached-proxy.conf/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/cloud/nginx/cached-proxy.conf/</guid><description>Download proxy_cache_path /data/nginx/cache levels=1:2 keys_zone=mycache:10m purger=on; proxy_cache_key &amp;#34;$scheme$request_method$host$request_uri&amp;#34;; geo $purge_allowed { 192.168.0.0/24 1; 127.0.0.1 1; default 0; } map $request_method $purge_method { PURGE $purge_allowed; default 0; } upstream my-app-01 { least_conn; server my-app-01-1.example.com weight=5; server my-app-01-2.example.com; server 192.0.0.1 backup; } upstream my-app-02 { ip_hash; server my-app-02-1.example.com weight=5; server my-app-02-2.example.com; server my-app-02-3.example.com down; server 192.0.0.1 backup; } server { server_name _; listen [::]:80 default_server ipv6only=on; listen 80 default_server; access_log /var/log/nginx/access.</description></item><item><title>clipboard-watch</title><link>https://hellupline.dev/docs/scripts/utils/clipboard-watch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/scripts/utils/clipboard-watch/</guid><description> Download #!/bin/sh # Usage: # show-certs &amp;#34;hellupline.dev&amp;#34; # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist LAST=&amp;#34;&amp;#34; while :; do CURRENT=$(xclip -selection primary -out) if [ &amp;#34;${CURRENT}&amp;#34; != &amp;#34;${LAST}&amp;#34; ]; then notify-send -- &amp;#34;Added ${CURRENT}&amp;#34; LAST=&amp;#34;${CURRENT}&amp;#34; echo &amp;#34;${CURRENT}&amp;#34; fi done</description></item><item><title>colorbars</title><link>https://hellupline.dev/docs/scripts/toys/colorbars/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/scripts/toys/colorbars/</guid><description> Download #!/bin/sh # # colorbars - smpte color bars in sh # http://git.io/colorbars echo for y in $(seq 0 13); do printf %s &amp;#39; &amp;#39; for color in 7 3 6 2 5 1 4; do tput setab ${color} printf %s &amp;#39; &amp;#39; done tput sgr0 echo done for y in 0 1; do printf %s &amp;#39; &amp;#39; for color in 4 0 5 0 6 0 7; do tput setab ${color} printf %s &amp;#39; &amp;#39; done tput sgr0 echo done for y in $(seq 0 4); do printf %s &amp;#39; &amp;#39; for color in 4 4 4 4 4 7 7 7 7 7 5 5 5 5 5 0 0 0 0 0 0 0 0 0 0 0 0 0; do tput setab ${color} printf %s &amp;#39; &amp;#39; done tput sgr0 echo done echo</description></item><item><title>colors</title><link>https://hellupline.dev/docs/scripts/toys/colors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/scripts/toys/colors/</guid><description> Download #!/bin/bash xdef=&amp;#34;$HOME/.Xdefaults&amp;#34; colors=( $( sed -re &amp;#39;/^!/d; /^$/d; /^#/d; s/(\*color)([0-9]):/\10\2:/g;&amp;#39; $xdef | grep &amp;#39;color[01][0-9]:&amp;#39; | sort | sed &amp;#39;s/^.*: *//g&amp;#39; ) ) echo -e &amp;#34;\e[1;37m Black Red Green Yellow Blue Magenta Cyan White ──────────────────────────────────────────────────────────────────────\e[0m&amp;#34; for i in {0..7}; do echo -en &amp;#34;\e[$((30+$i))m ${colors[i]}\e[0m&amp;#34;; done echo for i in {8..15}; do echo -en &amp;#34;\e[1;$((22+$i))m ${colors[i]}\e[0m&amp;#34;; done echo -e &amp;#34;\n&amp;#34;</description></item><item><title>configmap.yaml</title><link>https://hellupline.dev/docs/cloud/kubernetes/configmap.yaml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/cloud/kubernetes/configmap.yaml/</guid><description> Download --- apiVersion: v1 kind: ConfigMap metadata: labels: {app: my-app} name: my-app-config namespace: my-namespace data: CONFIG_ENV: my-config-env-value CONFIG_FILE: | { &amp;#34;key_01&amp;#34;: &amp;#34;value_02&amp;#34;, &amp;#34;key_02&amp;#34;: &amp;#34;value_02&amp;#34;, }</description></item><item><title>cronjob.yaml</title><link>https://hellupline.dev/docs/cloud/kubernetes/cronjob.yaml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/cloud/kubernetes/cronjob.yaml/</guid><description> Download --- apiVersion: batch/v1beta1 kind: CronJob metadata: labels: {app: my-cronjob} name: my-cronjob namespace: my-namespace spec: schedule: &amp;#34;* * * * *&amp;#34; concurrencyPolicy: Forbid jobTemplate: spec: template: metadata: {labels: {app: my-cronjob}} spec: restartPolicy: Never containers: - name: my-cronjob image: alpine imagePullPolicy: Always command: [&amp;#34;echo&amp;#34;, &amp;#34;hello&amp;#34;, &amp;#34;nurse&amp;#34;]</description></item><item><title>daemonset.yaml</title><link>https://hellupline.dev/docs/cloud/kubernetes/daemonset.yaml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/cloud/kubernetes/daemonset.yaml/</guid><description> Download --- apiVersion: apps/v1 kind: DaemonSet metadata: labels: {app: my-app} name: my-app namespace: my-namespace spec: selector: {matchLabels: {app: my-app}} template: metadata: {labels: {app: my-app}} spec: containers: - name: my-app image: nginx</description></item><item><title>deployment.yaml</title><link>https://hellupline.dev/docs/cloud/kubernetes/deployment.yaml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/cloud/kubernetes/deployment.yaml/</guid><description> Download --- apiVersion: apps/v1 kind: Deployment metadata: labels: {app: my-app} name: my-app namespace: my-namespace spec: replicas: 3 minReadySeconds: 30 strategy: type: RollingUpdate rollingUpdate: maxUnavailable: 0 maxSurge: 1 selector: {matchLabels: {app: my-app}} template: metadata: {labels: {app: my-app}} spec: containers: - name: my-app image: nginx</description></item><item><title>dna</title><link>https://hellupline.dev/docs/scripts/toys/dna/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/scripts/toys/dna/</guid><description> Download #!/bin/bash # # ANSI color scheme script by pfh # # Initializing mod by lolilolicon from Archlinux # f=3 b=4 for j in f b; do for i in {0..7}; do printf -v $j$i %b &amp;#34;\e[${!j}${i}m&amp;#34; done done bld=$&amp;#39;\e[1m&amp;#39; rst=$&amp;#39;\e[0m&amp;#39; inv=$&amp;#39;\e[7m&amp;#39; cat &amp;lt;&amp;lt; EOF ${f1} █-----${bld}█ ${rst}${f2} █-----${bld}█${rst} ${f3} █-----${bld}█${rst} ${f4} █-----${bld}█${rst} ${f5} █-----${bld}█${rst} ${f6} █-----${bld}█${rst} ${f1} █---${bld}█${rst} ${f2} █---${bld}█${rst} ${f3} █---${bld}█${rst} ${f4} █---${bld}█${rst} ${f5} █---${bld}█${rst} ${f6} █---${bld}█${rst} ${f1} █-${bld}█${rst} ${f2} █-${bld}█${rst} ${f3} █-${bld}█${rst} ${f4} █-${bld}█${rst} ${f5} █-${bld}█${rst} ${f6} █-${bld}█${rst} ${f1} █${rst} ${f2} █${rst} ${f3} █${rst} ${f4} █${rst} ${f5} █${rst} ${f6} █${rst} ${f1}${bld} █-${rst}${f1}█${rst} ${f2}${bld} █_${rst}${f2}█${rst} ${f3}${bld} █-${rst}${f3}█${rst} ${f4}${bld} █-${rst}${f4}█${rst} ${f5}${bld} █-${rst}${f5}█${rst} ${f6}${bld} █-${rst}${f6}█${rst} ${f1}${bld} █---${rst}${f1}█${rst} ${f2}${bld} █---${rst}${f2}█${rst} ${f3}${bld} █---${rst}${f3}█${rst} ${f4}${bld} █---${rst}${f4}█${rst} ${f5}${bld} █---${rst}${f5}█${rst} ${f6}${bld} █---${rst}${f6}█${rst} ${f1}${bld} █-----${rst}${f1}█${rst} ${f2}${bld} █-----${rst}${f2}█${rst} ${f3}${bld} █-----${rst}${f3}█${rst} ${f4}${bld} █-----${rst}${f4}█${rst} ${f5}${bld} █-----${rst}${f5}█${rst} ${f6}${bld} █-----${rst}${f6}█${rst} ${f1}${bld} █---${rst}${f1}█${rst} ${f2}${bld} █---${rst}${f2}█${rst} ${f3}${bld} █---${rst}${f3}█${rst} ${f4}${bld} █---${rst}${f4}█${rst} ${f5}${bld} █---${rst}${f5}█${rst} ${f6}${bld} █---${rst}${f6}█${rst} ${f1}${bld} █-${rst}${f1}█${rst} ${f2}${bld} █-${rst}${f2}█${rst} ${f3}${bld} █-${rst}${f3}█${rst} ${f4}${bld} █-${rst}${f4}█${rst} ${f5}${bld} █-${rst}${f5}█${rst} ${f6}${bld} █-${rst}${f6}█${rst} ${f1}${bld} █${rst} ${f2}${bld} █${rst} ${f3}${bld}█${rst} ${f4}${bld} █${rst} ${f5}${bld} █${rst} ${f6}${bld} █${rst} ${f1} █-${bld}█${rst} ${f2} █-${bld}█${rst} ${f3} █-${bld}█${rst} ${f4} █-${bld}█${rst} ${f5} █-${bld}█${rst} ${f6} █-${bld}█${rst} ${f1} █---${bld}█${rst} ${f2} █---${bld}█${rst} ${f3} █---${bld}█${rst} ${f4} █---${bld}█${rst} ${f5} █---${bld}█${rst} ${f6} █---${bld}█${rst} ${f1} █-----${bld}█ ${rst}${f2} █-----${bld}█${rst} ${f3} █-----${bld}█${rst} ${f4} █-----${bld}█${rst} ${f5} █-----${bld}█${rst} ${f6} █-----${bld}█${rst} ${f1} █---${bld}█${rst} ${f2} █---${bld}█${rst} ${f3} █---${bld}█${rst} ${f4} █---${bld}█${rst} ${f5} █---${bld}█${rst} ${f6} █---${bld}█${rst} ${f1} █-${bld}█${rst} ${f2} █-${bld}█${rst} ${f3} █-${bld}█${rst} ${f4} █-${bld}█${rst} ${f5} █-${bld}█${rst} ${f6} █-${bld}█${rst} ${f1} █${rst} ${f2}█${rst} ${f3} █${rst} ${f4} █${rst} ${f5} █${rst} ${f6} █${rst} ${f1}${bld} █-${rst}${f1}█${rst} ${f2}${bld} █_${rst}${f2}█${rst} ${f3}${bld} █-${rst}${f3}█${rst} ${f4}${bld} █-${rst}${f4}█${rst} ${f5}${bld} █-${rst}${f5}█${rst} ${f6}${bld} █-${rst}${f6}█${rst} ${f1}${bld} █---${rst}${f1}█${rst} ${f2}${bld} █---${rst}${f2}█${rst} ${f3}${bld} █---${rst}${f3}█${rst} ${f4}${bld} █---${rst}${f4}█${rst} ${f5}${bld} █---${rst}${f5}█${rst} ${f6}${bld} █---${rst}${f6}█${rst} ${f1}${bld} █-----${rst}${f1}█${rst} ${f2}${bld} █-----${rst}${f2}█${rst} ${f3}${bld} █-----${rst}${f3}█${rst} ${f4}${bld} █-----${rst}${f4}█${rst} ${f5}${bld} █-----${rst}${f5}█${rst} ${f6}${bld} █-----${rst}${f6}█${rst} ${f1}${bld} █---${rst}${f1}█${rst} ${f2}${bld} █---${rst}${f2}█${rst} ${f3}${bld} █---${rst}${f3}█${rst} ${f4}${bld} █---${rst}${f4}█${rst} ${f5}${bld} █---${rst}${f5}█${rst} ${f6}${bld} █---${rst}${f6}█${rst} ${f1}${bld} █-${rst}${f1}█${rst} ${f2}${bld} █-${rst}${f2}█${rst} ${f3}${bld} █-${rst}${f3}█${rst} ${f4}${bld} █-${rst}${f4}█${rst} ${f5}${bld} █-${rst}${f5}█${rst} ${f6}${bld} █-${rst}${f6}█${rst} ${f1}${bld} █${rst} ${f2}${bld} █${rst} ${f3}${bld} █${rst} ${f4}${bld} █${rst} ${f5}${bld} █${rst} ${f6}${bld} █${rst} ${f1} █-${bld}█${rst} ${f2} █-${bld}█${rst} ${f3} █-${bld}█${rst} ${f4} █-${bld}█${rst} ${f5} █-${bld}█${rst} ${f6} █-${bld}█${rst} ${f1} █---${bld}█${rst} ${f2} █---${bld}█${rst} ${f3} █---${bld}█${rst} ${f4} █---${bld}█${rst} ${f5} █---${bld}█${rst} ${f6} █---${bld}█${rst} ${f1} █-----${bld}█ ${rst}${f2} █-----${bld}█${rst} ${f3} █-----${bld}█${rst} ${f4} █-----${bld}█${rst} ${f5} █-----${bld}█${rst} ${f6} █-----${bld}█${rst} EOF</description></item><item><title>echoserver.go</title><link>https://hellupline.dev/docs/scripts/golang/echoserver.go/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/scripts/golang/echoserver.go/</guid><description>Download package main import ( &amp;#34;fmt&amp;#34; &amp;#34;io&amp;#34; &amp;#34;log&amp;#34; &amp;#34;net/http&amp;#34; &amp;#34;os&amp;#34; ) func main() { // curl -SsLD- -X POST -H &amp;#39;Content-Type: text/plain&amp;#39; -d $&amp;#39;hello\n&amp;#39; &amp;#39;http://localhost:8080/hello?a=1&amp;amp;a=2&amp;#39; // curl -SsLD- -X POST -F b=3 &amp;#39;http://localhost:8080/hello?a=1&amp;amp;a=2&amp;#39; http.HandleFunc(&amp;#34;/&amp;#34;, func(w http.ResponseWriter, r *http.Request) { writer := io.MultiWriter(os.Stdout, w) fmt.Print(&amp;#34;\033[2J\033[H&amp;#34;) fmt.Fprintln(writer, &amp;#34;url:\n````&amp;#34;) fmt.Fprintf(writer, &amp;#34;\t%+v\n&amp;#34;, r.URL) fmt.Fprintln(writer, &amp;#34;```\n\nheaders:\n```&amp;#34;) for k, v := range r.Header { fmt.Fprintln(writer, &amp;#34;\t&amp;#34;, k, v) } fmt.Fprintln(writer, &amp;#34;```\n\nquerystring:\n````&amp;#34;) for k, v := range r.</description></item><item><title>food</title><link>https://hellupline.dev/docs/scripts/toys/food/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/scripts/toys/food/</guid><description>Download #!/bin/sh # food: {ascii/ansi} art food in your terminal # # ████ ██ # ░██░ ░██ # ██████ ██████ ██████ ░██ # ░░░██░ ██░░░░██ ██░░░░██ ██████ # ░██ ░██ ░██░██ ░██ ██░░░██ # ░██ ░██ ░██░██ ░██░██ ░██ # ░██ ░░██████ ░░██████ ░░██████ # ░░ ░░░░░░ ░░░░░░ ░░░░░░ # # ▓▓▓▓▓▓▓▓▓▓ # ░▓ author ▓ xero &amp;lt;x@xero.nu&amp;gt; # ░▓ code ▓ http://code.xero.nu/dotfiles # ░▓ mirror ▓ http://git.io/.files # ░▓▓▓▓▓▓▓▓▓▓ # ░░░░░░░░░░ usage() { printf &amp;#34;usage: `basename $0` \n\ [--burger burger] curl -L git.</description></item><item><title>ftpython</title><link>https://hellupline.dev/docs/scripts/utils/ftpython/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/scripts/utils/ftpython/</guid><description>Download #!/usr/bin/env python3 # FLASK_APP=ftpython flask run \ # --reload --no-debugger --eager-loading --with-threads \ # --host=127.0.0.1 --port=8080 # python3 -m pip install --user flask # python3 ftpython # from OpenSSL import SSL import os from flask import Flask, flash, request, redirect, url_for from werkzeug.middleware.shared_data import SharedDataMiddleware from werkzeug.utils import secure_filename UPLOAD_FOLDER = os.getcwd() ALLOWED_EXTENSIONS = {&amp;#34;txt&amp;#34;, &amp;#34;pdf&amp;#34;, &amp;#34;png&amp;#34;, &amp;#34;jpg&amp;#34;, &amp;#34;jpeg&amp;#34;, &amp;#34;gif&amp;#34;} FORM_TEMPLATE = &amp;#34;&amp;#34;&amp;#34;&amp;lt;!doctype html&amp;gt;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;Upload new File&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;Upload new File&amp;lt;/h1&amp;gt;&amp;lt;form method=post enctype=multipart/form-data&amp;gt;&amp;lt;input type=file name=file&amp;gt;&amp;lt;input type=submit value=Upload&amp;gt;&amp;lt;/form&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;#34;&amp;#34;&amp;#34; # context = SSL.</description></item><item><title>Gallery</title><link>https://hellupline.dev/gallery/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/gallery/</guid><description/></item><item><title>Gallery</title><link>https://hellupline.dev/todo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/todo/</guid><description> Knowledge Commands git graphicsmagick ffmpeg jq cloud cloudformation kubernetes nginx + config example</description></item><item><title>ghosts</title><link>https://hellupline.dev/docs/scripts/toys/ghosts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/scripts/toys/ghosts/</guid><description> Download #!/bin/bash # # ANSI color scheme script by pfh # # Initializing mod by lolilolicon from Archlinux # f=3 b=4 for j in f b; do for i in {0..7}; do printf -v $j$i %b &amp;#34;\e[${!j}${i}m&amp;#34; done done bld=$&amp;#39;\e[1m&amp;#39; rst=$&amp;#39;\e[0m&amp;#39; inv=$&amp;#39;\e[7m&amp;#39; cat &amp;lt;&amp;lt; EOF $f1 ▄▄▄ $f2 ▄▄▄ $f3 ▄▄▄ $f4 ▄▄▄ $f5 ▄▄▄ $f6 ▄▄▄ $f1 ▀█▀██ ▄ $f2 ▀█▀██ ▄ $f3 ▀█▀██ ▄ $f4 ▀█▀██ ▄ $f5 ▀█▀██ ▄ $f6 ▀█▀██ ▄ $f1 ▀▄██████▀ $f2 ▀▄██████▀ $f3 ▀▄██████▀ $f4 ▀▄██████▀ $f5 ▀▄██████▀ $f6 ▀▄██████▀ $f1 ▀█████ $f2 ▀█████ $f3 ▀█████ $f4 ▀█████ $f5 ▀█████ $f6 ▀█████ $f1 ▀▀▀▀▄ $f2 ▀▀▀▀▄ $f3 ▀▀▀▀▄ $f4 ▀▀▀▀▄ $f5 ▀▀▀▀▄ $f6 ▀▀▀▀▄ $bld $f1 ▄▄▄ $f2 ▄▄▄ $f3 ▄▄▄ $f4 ▄▄▄ $f5 ▄▄▄ $f6 ▄▄▄ $f1 ▀█▀██ ▄ $f2 ▀█▀██ ▄ $f3 ▀█▀██ ▄ $f4 ▀█▀██ ▄ $f5 ▀█▀██ ▄ $f6 ▀█▀██ ▄ $f1 ▀▄██████▀ $f2 ▀▄██████▀ $f3 ▀▄██████▀ $f4 ▀▄██████▀ $f5 ▀▄██████▀ $f6 ▀▄██████▀ $f1 ▀█████ $f2 ▀█████ $f3 ▀█████ $f4 ▀█████ $f5 ▀█████ $f6 ▀█████ $f1 ▀▀▀▀▄ $f2 ▀▀▀▀▄ $f3 ▀▀▀▀▄ $f4 ▀▀▀▀▄ $f5 ▀▀▀▀▄ $f6 ▀▀▀▀▄ $rst EOF</description></item><item><title>git-cleanup</title><link>https://hellupline.dev/docs/scripts/utils/git-cleanup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/scripts/utils/git-cleanup/</guid><description> Download #!/bin/sh # Usage: # $ git-cleanup # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist git checkout master git pull git remote prune origin git branch --merged | grep --extended-regexp --invert-match &amp;#34;(^\*|master|dev)&amp;#34; | xargs git branch --delete</description></item><item><title>hpa.yaml</title><link>https://hellupline.dev/docs/cloud/kubernetes/hpa.yaml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/cloud/kubernetes/hpa.yaml/</guid><description> Download --- apiVersion: autoscaling/v2beta2 kind: HorizontalPodAutoscaler metadata: labels: {app: my-app} name: my-app namespace: my-namespace spec: scaleTargetRef: {apiVersion: apps/v1, kind: Deployment, name: my-app} minReplicas: 2 maxReplicas: 10 metrics: - type: Resource resource: name: cpu target: {type: Utilization, averageUtilization: 50} - type: Object object: describedObject: {apiVersion: networking.k8s.io/v1beta1, kind: Ingress, name: my-app} metric: {name: requests-per-second} target: {kind: Value, value: 60} - type: Pods pods: metric: {name: packets-per-second} target: {type: AverageValue, averageValue: 1k}</description></item><item><title>http-to-https.conf</title><link>https://hellupline.dev/docs/cloud/nginx/http-to-https.conf/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/cloud/nginx/http-to-https.conf/</guid><description>Download # application server { server_name my-app.com; listen [::]:443 ssl http2 default_server ipv6only=on; listen 443 ssl http2 default_server; ssl_certificate /etc/letsencrypt/live/my-app.com/fullchain.pem; ssl_certificate_key /etc/letsencrypt/live/my-app.com/privkey.pem; access_log /var/log/nginx/access.log main; return 200 &amp;#34;hello world&amp;#34;; } # www-to-naked server { server_name www.my-app.com; listen [::]:443 ssl http2 default_server ipv6only=on; listen 443 ssl http2 default_server; ssl_certificate /etc/letsencrypt/live/my-app.com/fullchain.pem; ssl_certificate_key /etc/letsencrypt/live/my-app.com/privkey.pem; access_log /var/log/nginx/access.log main; return 301 https://my-app.com$request_uri; } # https only website server { server_name my-app.com www.my-app.com; listen [::]:80 default_server ipv6only=on; listen 80 default_server; access_log /var/log/nginx/access.</description></item><item><title>ingress.yaml</title><link>https://hellupline.dev/docs/cloud/kubernetes/ingress.yaml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/cloud/kubernetes/ingress.yaml/</guid><description>Download --- apiVersion: extensions/v1beta1 kind: Ingress metadata: labels: {app: my-app} name: my-app namespace: production spec: tls: - secretName: my-domain-com-tls hosts: - my-domain.com rules: - host: my-domain.com http: paths: - {backend: {serviceName: my-other-app, servicePort: 80}, path: /my-other-app} - {backend: {serviceName: my-app, servicePort: 80}} # handle other domains, but without tls - http: paths: - {backend: {serviceName: my-other-app, servicePort: 80}, path: /my-other-app} - {backend: {serviceName: my-app, servicePort: 80}} --- apiVersion: v1 kind: Secret metadata: annotations: kubernetes.</description></item><item><title>Install Guide Lazy Mode</title><link>https://hellupline.dev/docs/archlinux/install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/archlinux/install/</guid><description>ArchLinux Install Guide Lazy Mode Disks Partitions /boot/efi/ -&amp;gt; fat32 - 500mb / -&amp;gt; ext4 - 40gb swap -&amp;gt; swap - 8gb /home -&amp;gt; ext4 - space left Configuration ### Disk Partitions `sfdisk --label gpt --list-types` PARTITIONS=&amp;#39; label: gpt size=500M, type=C12A7328-F81F-11D2-BA4B-00A0C93EC93B, name=&amp;#34;EFI System&amp;#34;, bootable size= 40G, type=44479540-F297-41B2-9AF7-D131D5F0458A, name=&amp;#34;Linux x86-64 root (/)&amp;#34; size= 8G, type=0657FD6D-A4AB-43C4-84E5-0933C84B4F4F, name=&amp;#34;Linux swap&amp;#34; type=933AC7E1-2EB4-4F13-B844-0E14E2AEF915, name=&amp;#34;Linux /home&amp;#34; &amp;#39; ### Install Config KEYMAP=&amp;#34;br-abnt2&amp;#34; MIRROR=&amp;#34;BR&amp;#34; ### System Configuration TIMEZONE=&amp;#34;America/Sao_Paulo&amp;#34; LOCALE=&amp;#34;pt_BR.</description></item><item><title>invaders</title><link>https://hellupline.dev/docs/scripts/toys/invaders/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/scripts/toys/invaders/</guid><description>Download #!/bin/sh # ANSI Color -- use these variables to easily have different color # and format output. Make sure to output the reset sequence after # colors (f = foreground, b = background), and use the &amp;#39;off&amp;#39; # feature for anything you turn on. initializeANSI() { esc=&amp;#34;&amp;#34; blackf=&amp;#34;${esc}[30m&amp;#34;; redf=&amp;#34;${esc}[31m&amp;#34;; greenf=&amp;#34;${esc}[32m&amp;#34; yellowf=&amp;#34;${esc}[33m&amp;#34; bluef=&amp;#34;${esc}[34m&amp;#34;; purplef=&amp;#34;${esc}[35m&amp;#34; cyanf=&amp;#34;${esc}[36m&amp;#34;; whitef=&amp;#34;${esc}[37m&amp;#34; blackb=&amp;#34;${esc}[40m&amp;#34;; redb=&amp;#34;${esc}[41m&amp;#34;; greenb=&amp;#34;${esc}[42m&amp;#34; yellowb=&amp;#34;${esc}[43m&amp;#34; blueb=&amp;#34;${esc}[44m&amp;#34;; purpleb=&amp;#34;${esc}[45m&amp;#34; cyanb=&amp;#34;${esc}[46m&amp;#34;; whiteb=&amp;#34;${esc}[47m&amp;#34; boldon=&amp;#34;${esc}[1m&amp;#34;; boldoff=&amp;#34;${esc}[22m&amp;#34; italicson=&amp;#34;${esc}[3m&amp;#34;; italicsoff=&amp;#34;${esc}[23m&amp;#34; ulon=&amp;#34;${esc}[4m&amp;#34;; uloff=&amp;#34;${esc}[24m&amp;#34; invon=&amp;#34;${esc}[7m&amp;#34;; invoff=&amp;#34;${esc}[27m&amp;#34; reset=&amp;#34;${esc}[0m&amp;#34; } # note in this first use that switching colors doesn&amp;#39;t require a reset # first - the new color overrides the old one.</description></item><item><title>job.yaml</title><link>https://hellupline.dev/docs/cloud/kubernetes/job.yaml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/cloud/kubernetes/job.yaml/</guid><description> Download --- apiVersion: batch/v1 kind: Job metadata: labels: {app: my-job} name: my-job namespace: my-namespace spec: template: metadata: {labels: {app: my-job}} spec: restartPolicy: Never containers: - name: my-job image: alpine args: [&amp;#34;echo&amp;#34;, &amp;#34;hello nurse&amp;#34;]</description></item><item><title>kubectl-context-list</title><link>https://hellupline.dev/docs/scripts/kubernetes/kubectl-context-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/scripts/kubernetes/kubectl-context-list/</guid><description> Download #!/bin/sh # Usage: # $ kubectl context list # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist kubectl config get-contexts -o name</description></item><item><title>kubectl-context-set</title><link>https://hellupline.dev/docs/scripts/kubernetes/kubectl-context-set/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/scripts/kubernetes/kubectl-context-set/</guid><description> Download #!/bin/sh # Usage: # $ kubectl context set &amp;#34;my-context&amp;#34; # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist die () { echo &amp;gt;&amp;amp;2 &amp;#34;$@&amp;#34; exit 1 } [ &amp;#34;$#&amp;#34; -eq 1 ] || die &amp;#34;1 argument required, $#provided&amp;#34; NAME=&amp;#34;${1}&amp;#34; kubectl config use-context &amp;#34;${NAME}&amp;#34;</description></item><item><title>kubectl-ingress-health</title><link>https://hellupline.dev/docs/scripts/kubernetes/kubectl-ingress-health/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/scripts/kubernetes/kubectl-ingress-health/</guid><description> Download #!/bin/sh # Usage: # $ kubectl ingress health &amp;#34;my-ingress&amp;#34; # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist die () { echo &amp;gt;&amp;amp;2 &amp;#34;$@&amp;#34; exit 1 } [ &amp;#34;$#&amp;#34; -eq 1 ] || die &amp;#34;No argument supplied&amp;#34; NAME=&amp;#34;${1}&amp;#34; kubectl get --output json ingresses &amp;#34;${NAME}&amp;#34; | jq &amp;#39;.metadata.annotations.&amp;#34;ingress.kubernetes.io/backends&amp;#34; | fromjson&amp;#39;</description></item><item><title>kubectl-namespace-list</title><link>https://hellupline.dev/docs/scripts/kubernetes/kubectl-namespace-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/scripts/kubernetes/kubectl-namespace-list/</guid><description> Download #!/bin/sh # Usage: # $ kubectl namespace set &amp;#34;my-namespace&amp;#34; # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist kubectl get namespaces</description></item><item><title>kubectl-namespace-set</title><link>https://hellupline.dev/docs/scripts/kubernetes/kubectl-namespace-set/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/scripts/kubernetes/kubectl-namespace-set/</guid><description> Download #!/bin/sh # Usage: # $ kubectl namespace set &amp;#34;my-namespace&amp;#34; # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist die () { echo &amp;gt;&amp;amp;2 &amp;#34;$@&amp;#34; exit 1 } [ &amp;#34;$#&amp;#34; -eq 1 ] || die &amp;#34;1 argument required, $#provided&amp;#34; NAME=&amp;#34;${1}&amp;#34; kubectl config set-context &amp;#34;$(kubectl config current-context)&amp;#34; --namespace=&amp;#34;${NAME}&amp;#34;</description></item><item><title>kubectl-pods-failed</title><link>https://hellupline.dev/docs/scripts/kubernetes/kubectl-pods-failed/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/scripts/kubernetes/kubectl-pods-failed/</guid><description> Download #!/bin/sh # Usage: # $ kubectl pods failed # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist kubectl get --all-namespaces pods --field-selector=&amp;#39;status.phase=Failed&amp;#39;</description></item><item><title>kubectl-shell</title><link>https://hellupline.dev/docs/scripts/kubernetes/kubectl-shell/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/scripts/kubernetes/kubectl-shell/</guid><description> Download #!/bin/sh # Usage: # $ kubectl shell # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist kubectl run --rm -it shell --image=busybox --restart=Never</description></item><item><title>Kubernetes</title><link>https://hellupline.dev/docs/knowledge/applications/kubernetes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/knowledge/applications/kubernetes/</guid><description>Kubernetes Plugins Dashboard Repository
Metrics Server Repository
Local Path Provisioner Repository
Proxied Dashboard
# Dashboard kubectl apply --filename https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-beta3/aio/deploy/recommended.yaml # Metrics Server kubectl apply \ --filename https://raw.githubusercontent.com/kubernetes-incubator/metrics-server/v0.3.3/deploy/1.8%2B/aggregated-metrics-reader.yaml \ --filename https://raw.githubusercontent.com/kubernetes-incubator/metrics-server/v0.3.3/deploy/1.8%2B/auth-delegator.yaml \ --filename https://raw.githubusercontent.com/kubernetes-incubator/metrics-server/v0.3.3/deploy/1.8%2B/auth-reader.yaml \ --filename https://raw.githubusercontent.com/kubernetes-incubator/metrics-server/v0.3.3/deploy/1.8%2B/metrics-apiservice.yaml \ --filename https://raw.githubusercontent.com/kubernetes-incubator/metrics-server/v0.3.3/deploy/1.8%2B/metrics-server-deployment.yaml \ --filename https://raw.githubusercontent.com/kubernetes-incubator/metrics-server/v0.3.3/deploy/1.8%2B/metrics-server-service.yaml \ --filename https://raw.githubusercontent.com/kubernetes-incubator/metrics-server/v0.3.3/deploy/1.8%2B/resource-reader.yaml kubectl get apiservice v1beta1.metrics.k8s.io --output json | jq &amp;#39;.status.conditions[]&amp;#39; # Local Path Provisioner kubectl apply --filename https://raw.githubusercontent.com/rancher/local-path-provisioner/v0.0.9/deploy/local-path-storage.yaml # ServiceAccount Token kubectl --namespace kube-system get --output json secrets &amp;#34;$(kubectl --namespace kube-system get --output json serviceaccounts default | jq --raw-output &amp;#39;.</description></item><item><title>lets-encrypt-cloudflare</title><link>https://hellupline.dev/docs/scripts/utils/lets-encrypt-cloudflare/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/scripts/utils/lets-encrypt-cloudflare/</guid><description>Download #!/bin/bash # Usage: # lets-encrypt-cloudflare &amp;#34;root@hellupline.dev&amp;#34; &amp;#34;CLOUDFLARE_API_KEY&amp;#34; &amp;#34;hellupline.dev&amp;#34; # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist die () { echo &amp;gt;&amp;amp;2 &amp;#34;$@&amp;#34; exit 1 } [ &amp;#34;$#&amp;#34; -eq 3 ] || die &amp;#34;3 argument required, $#provided&amp;#34; EMAIL=&amp;#34;${1}&amp;#34; CLOUDFLARE_API_KEY=&amp;#34;${2}&amp;#34; DOMAIN=&amp;#34;${3}&amp;#34; echo &amp;#34;dns_cloudflare_email=${EMAIL}\ndns_cloudflare_api_key=${CLOUDFLARE_API_KEY}&amp;#34; &amp;gt; dns-cloudflare.ini chmod 400 dns-cloudflare.ini docker run --rm -it --name certbot \ --volume &amp;#34;${PWD}/etc-letsencrypt:/etc/letsencrypt&amp;#34; \ --volume &amp;#34;${PWD}/var-lib-letsencrypt:/var/lib/letsencrypt&amp;#34; \ --volume &amp;#34;${PWD}/dns-cloudflare.</description></item><item><title>lets-encrypt-cname</title><link>https://hellupline.dev/docs/scripts/utils/lets-encrypt-cname/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/scripts/utils/lets-encrypt-cname/</guid><description> Download #!/bin/bash # Usage: # lets-encrypt-cname &amp;#34;root@hellupline.dev&amp;#34; &amp;#34;hellupline.dev&amp;#34; # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist die () { echo &amp;gt;&amp;amp;2 &amp;#34;$@&amp;#34; exit 1 } [ &amp;#34;$#&amp;#34; -eq 2 ] || die &amp;#34;2 argument required, $#provided&amp;#34; EMAIL=&amp;#34;${1}&amp;#34; DOMAIN=&amp;#34;${2}&amp;#34; docker run --rm -it --name certbot \ --volume &amp;#34;${PWD}/etc-letsencrypt:/etc/letsencrypt&amp;#34; \ --volume &amp;#34;${PWD}/var-lib-letsencrypt:/var/lib/letsencrypt&amp;#34; \ certbot/certbot \ certonly --dry-run \ --manual-public-ip-logging-ok --agree-tos --email=&amp;#34;${EMAIL}&amp;#34; \ --manual \ --preferred-challenges=dns \ --domains=&amp;#34;${DOMAIN}&amp;#34;</description></item><item><title>Linux</title><link>https://hellupline.dev/docs/knowledge/commands/linux/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/knowledge/commands/linux/</guid><description>Notifications notify-send --urgency=critical --app-name=hello-nurse TITLE &amp;#34;BODY&amp;#34; Clipboard xclip -out -selection Clipboard &amp;gt; output.txt xclip -in -selection Clipboard &amp;lt; input.txt</description></item><item><title>make-certificate</title><link>https://hellupline.dev/docs/scripts/utils/make-certificate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/scripts/utils/make-certificate/</guid><description> Download #!/bin/bash # Usage: # make-certificate &amp;#34;hellupline.dev&amp;#34; # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist DOMAIN=${1:-localhost} mkdir -p tls-certs openssl req -nodes -x509 -sha256 -days 3650 \ -newkey rsa:4096 \ -keyout tls-certs/service.key \ -out tls-certs/service.pem \ -addext &amp;#34;subjectAltName = DNS:${DOMAIN},IP:::1,IP:127.0.0.1&amp;#34; \ -subj &amp;#34;/O=${DOMAIN}/CN=${DOMAIN}&amp;#34;</description></item><item><title>make-self-cacert</title><link>https://hellupline.dev/docs/scripts/utils/make-self-cacert/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/scripts/utils/make-self-cacert/</guid><description>Download #!/bin/bash # Usage: # make-self-cacert &amp;#34;hellupline.dev&amp;#34; # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist DOMAIN=${1:-localhost} mkdir -p tls-certs # create rootca certs openssl genrsa -out tls-certs/rootca.key 4096 openssl req -x509 -new -sha256 -days 3650 \ -key tls-certs/rootca.key -out tls-certs/rootca.cert \ -subj &amp;#34;/O=${DOMAIN}/CN=${DOMAIN}&amp;#34; # create application certs openssl genrsa -out tls-certs/service.</description></item><item><title>metroid</title><link>https://hellupline.dev/docs/scripts/toys/metroid/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/scripts/toys/metroid/</guid><description> Download #!/bin/sh # # metroid: a metroid ascii banner generator # MMXVI xero (http://xero.nu) usage() { printf &amp;#34;usage: `basename $0` \n\ [-m --mini mini] \n\ [-s --super super] \n\ [-t --text text] \n\ [-n --normal normal] \n\ [-h --help help]\n&amp;#34; } text() { printf &amp;#34;\n .___.\n / @ \ \n \ @ @ /\n {&amp;#39;^&amp;#39;}\n\n&amp;#34; } mini() { cat &amp;lt;&amp;lt; METROID [38;5;16m▄[m[38;5;16m▄[m[48;5;16m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16m [m[38;5;16m▄[m[38;5;16m▄[m [38;5;16m▄[m[48;5;16m [m[48;5;77;38;5;16m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;196;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;77;38;5;16m▀[m[48;5;16m [m[38;5;16m▄[m [38;5;16m▄[m[48;5;16m [m[48;5;77;38;5;16m▀[m[48;5;16;38;5;77m▀[m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;196m▀[m[48;5;196;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;77m▀[m[48;5;77;38;5;16m▀[m[48;5;16m [m[38;5;16m▄[m [48;5;16m [m[48;5;77;38;5;16m▀[m[48;5;16;38;5;77m▀[m[48;5;16m [m[48;5;16m [m[48;5;223;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196m [m[48;5;196m [m[48;5;196m [m[48;5;196m [m[48;5;196m [m[48;5;196m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;77m▀[m[48;5;77;38;5;16m▀[m[48;5;16m [m [38;5;16m▄[m[48;5;16m [m[48;5;77;38;5;16m▀[m[48;5;16;38;5;77m▀[m[48;5;16m [m[48;5;223;38;5;16m▀[m[48;5;223m [m[48;5;16;38;5;223m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;16m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;77m▀[m[48;5;77;38;5;16m▀[m[48;5;16m [m[38;5;16m▄[m [38;5;16m▄[m[48;5;16m [m[48;5;77m [m[48;5;16m [m[48;5;16m [m[48;5;223m [m[48;5;16;38;5;223m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;77m [m[48;5;16m [m[38;5;16m▄[m [48;5;16m [m[48;5;77m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;16m▀[m[48;5;223;38;5;196m▀[m[48;5;223;38;5;196m▀[m[48;5;223;38;5;196m▀[m[48;5;196;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;77m [m[48;5;16m [m [48;5;16m [m[48;5;77m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196m [m[48;5;196m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16;38;5;196m▀[m[48;5;77m [m[48;5;16m [m[38;5;16m▄[m [48;5;16m [m[48;5;77m [m[48;5;196;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196m [m[48;5;196m [m[48;5;196m [m[48;5;196m [m[48;5;16m [m[48;5;196;38;5;16m▀[m[48;5;223;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16;38;5;196m▀[m[48;5;196;38;5;223m▀[m[48;5;196;38;5;223m▀[m[48;5;196;38;5;223m▀[m[48;5;16;38;5;196m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;223;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;16m▀[m[48;5;196m [m[48;5;196m [m[48;5;16;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;77m [m[48;5;16m [m [48;5;16m [m[48;5;77m [m[48;5;16m [m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196m [m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;223;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;223;38;5;196m▀[m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;196m [m[48;5;16m [m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;77m [m[48;5;16m [m [48;5;16m [m[48;5;77m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;196m▀[m[48;5;196;38;5;223m▀[m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;196;38;5;223m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;223m▀[m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;196;38;5;223m▀[m[48;5;16;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77m [m[48;5;16m [m [48;5;16m [m[48;5;77m [m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;77m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77m [m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;77m [m[48;5;16m [m [38;5;16m▀[m[48;5;16;38;5;77m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;196m [m[48;5;196m [m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;77m [m[48;5;77m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77m [m[48;5;77m [m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196m [m[48;5;196m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16;38;5;77m▀[m[38;5;16m▀[m [38;5;16m▀[m[38;5;16m▀[m[48;5;16m [m[48;5;223m [m[48;5;196m [m[48;5;196m [m[48;5;196m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;77m [m[48;5;77m [m[48;5;77m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77m [m[48;5;77m [m[48;5;77m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196m [m[48;5;196m [m[48;5;196m [m[48;5;223m [m[48;5;16m [m[38;5;16m▀[m[38;5;16m▀[m [48;5;16m [m[48;5;16;38;5;223m▀[m[48;5;223;38;5;196m▀[m[48;5;196m [m[48;5;16m [m[48;5;16m [m [48;5;16m [m[48;5;223m [m[48;5;223;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;77m▀[m[48;5;77m [m[48;5;77m [m[48;5;77m [m[48;5;16;38;5;77m▀[m[48;5;16m [m[48;5;16m [m[48;5;223;38;5;16m▀[m[48;5;223m [m[48;5;16m [m [48;5;16m [m[48;5;16m [m[48;5;196m [m[48;5;223;38;5;196m▀[m[48;5;16;38;5;223m▀[m[48;5;16m [m [38;5;16m▀[m[48;5;16m [m[48;5;16;38;5;223m▀[m[48;5;223m [m[48;5;16m [m [48;5;16m [m[48;5;223m [m[48;5;16m [m[48;5;16m [m [38;5;16m▀[m[38;5;16m▀[m[38;5;16m▀[m[38;5;16m▀[m[38;5;16m▀[m [48;5;16m [m[48;5;16m [m[48;5;223m [m[48;5;16m [m [48;5;16m [m[48;5;223m [m[48;5;16;38;5;223m▀[m[48;5;16m [m[38;5;16m▀[m [38;5;16m▀[m[38;5;16m▀[m[38;5;16m▀[m [38;5;16m▀[m[48;5;16m [m[48;5;16;38;5;223m▀[m[48;5;16m [m [48;5;16m [m[48;5;16;38;5;223m▀[m[48;5;16m [m[38;5;16m▀[m [38;5;16m▀[m[38;5;16m▀[m[38;5;16m▀[m METROID } super() { cat &amp;lt;&amp;lt; METROID [38;5;28m▄[m[38;5;64m▄[m[38;5;106m▄[m[48;5;112;38;5;22m▀[m[48;5;113;38;5;22m▀[m[48;5;107;38;5;22m▀[m[48;5;107;38;5;22m▀[m[48;5;107;38;5;22m▀[m[48;5;107;38;5;22m▀[m[48;5;113;38;5;22m▀[m[48;5;112;38;5;22m▀[m[38;5;106m▄[m[38;5;64m▄[m[38;5;28m▄[m [38;5;22m▄[m[38;5;70m▄[m[48;5;150;38;5;28m▀[m[48;5;106;38;5;107m▀[m[48;5;28;38;5;113m▀[m[48;5;16;38;5;107m▀[m[48;5;22;38;5;70m▀[m[48;5;70;38;5;64m▀[m[48;5;113;38;5;28m▀[m[48;5;113;38;5;28m▀[m[48;5;149;38;5;28m▀[m[48;5;149;38;5;28m▀[m[48;5;113;38;5;28m▀[m[48;5;113;38;5;28m▀[m[48;5;70;38;5;64m▀[m[48;5;22;38;5;70m▀[m[48;5;16;38;5;107m▀[m[48;5;28;38;5;113m▀[m[48;5;106;38;5;107m▀[m[48;5;150;38;5;28m▀[m[38;5;70m▄[m[38;5;22m▄[m [38;5;22m▄[m[48;5;113;38;5;22m▀[m[48;5;148;38;5;113m▀[m[48;5;70;38;5;148m▀[m[48;5;22;38;5;70m▀[m[48;5;101;38;5;64m▀[m[48;5;16;38;5;22m▀[m[48;5;16;38;5;22m▀[m[48;5;16;38;5;22m▀[m[48;5;16;38;5;22m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;22m▀[m[48;5;16;38;5;22m▀[m[48;5;16;38;5;22m▀[m[48;5;16;38;5;22m▀[m[48;5;101;38;5;64m▀[m[48;5;22;38;5;70m▀[m[48;5;70;38;5;148m▀[m[48;5;148;38;5;113m▀[m[48;5;113;38;5;22m▀[m[38;5;22m▄[m [48;5;64;38;5;22m▀[m[48;5;150;38;5;107m▀[m[48;5;70;38;5;150m▀[m[48;5;28;38;5;70m▀[m[48;5;22m [m[48;5;16;38;5;22m▀[m[48;5;52;38;5;22m▀[m[48;5;52;38;5;16m▀[m[48;5;52;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;197;38;5;88m▀[m[48;5;197;38;5;88m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;52;38;5;16m▀[m[48;5;52;38;5;16m▀[m[48;5;52;38;5;22m▀[m[48;5;16;38;5;22m▀[m[48;5;22m [m[48;5;28;38;5;70m▀[m[48;5;70;38;5;150m▀[m[48;5;150;38;5;107m▀[m[48;5;64;38;5;22m▀[m [48;5;28;38;5;22m▀[m[48;5;148;38;5;113m▀[m[48;5;34;38;5;106m▀[m[48;5;22;38;5;28m▀[m[48;5;16;38;5;22m▀[m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;52m▀[m[48;5;88;38;5;160m▀[m[48;5;88;38;5;160m▀[m[48;5;88;38;5;52m▀[m[48;5;52;38;5;16m▀[m[48;5;16m [m[48;5;124;38;5;52m▀[m[48;5;124m [m[48;5;124m [m[48;5;124;38;5;52m▀[m[48;5;16m [m[48;5;52;38;5;16m▀[m[48;5;88;38;5;52m▀[m[48;5;88;38;5;160m▀[m[48;5;88;38;5;160m▀[m[48;5;16;38;5;52m▀[m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;22m▀[m[48;5;22;38;5;28m▀[m[48;5;34;38;5;106m▀[m[48;5;148;38;5;113m▀[m[48;5;28;38;5;22m▀[m [48;5;22m [m[48;5;113;38;5;107m▀[m[48;5;149m [m[48;5;107;38;5;28m▀[m[48;5;64;38;5;22m▀[m[48;5;22;38;5;16m▀[m[48;5;22;38;5;16m▀[m[48;5;22;38;5;16m▀[m[48;5;16m [m[48;5;16;38;5;52m▀[m[48;5;16;38;5;52m▀[m[48;5;16;38;5;52m▀[m[48;5;52m [m[48;5;52;38;5;88m▀[m[48;5;52;38;5;124m▀[m[48;5;124;38;5;168m▀[m[48;5;124;38;5;168m▀[m[48;5;52;38;5;124m▀[m[48;5;52;38;5;88m▀[m[48;5;52m [m[48;5;16;38;5;52m▀[m[48;5;16;38;5;52m▀[m[48;5;16;38;5;52m▀[m[48;5;16m [m[48;5;22;38;5;16m▀[m[48;5;22;38;5;16m▀[m[48;5;22;38;5;16m▀[m[48;5;64;38;5;22m▀[m[48;5;107;38;5;28m▀[m[48;5;149m [m[48;5;113;38;5;107m▀[m[48;5;22m [m [48;5;70;38;5;28m▀[m[48;5;149;38;5;148m▀[m[48;5;34;38;5;70m▀[m[48;5;28;38;5;71m▀[m[48;5;64;38;5;22m▀[m[48;5;16;38;5;22m▀[m[48;5;16m [m[48;5;16m [m[48;5;88;38;5;16m▀[m[48;5;160;38;5;16m▀[m[48;5;88;38;5;16m▀[m[48;5;52;38;5;16m▀[m[48;5;52m [m[48;5;52;38;5;124m▀[m[48;5;52;38;5;88m▀[m[48;5;124;38;5;88m▀[m[48;5;124;38;5;88m▀[m[48;5;52;38;5;88m▀[m[48;5;52;38;5;124m▀[m[48;5;52m [m[48;5;52;38;5;16m▀[m[48;5;88;38;5;16m▀[m[48;5;160;38;5;16m▀[m[48;5;88;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;22m▀[m[48;5;64;38;5;22m▀[m[48;5;28;38;5;71m▀[m[48;5;34;38;5;70m▀[m[48;5;149;38;5;148m▀[m[48;5;70;38;5;28m▀[m [48;5;22;38;5;70m▀[m[48;5;149m [m[48;5;28m [m[48;5;22;38;5;16m▀[m[48;5;16;38;5;22m▀[m[48;5;22;38;5;64m▀[m[48;5;124;38;5;16m▀[m[48;5;88;38;5;52m▀[m[48;5;124;38;5;160m▀[m[48;5;88;38;5;197m▀[m[48;5;52;38;5;124m▀[m[48;5;160;38;5;88m▀[m[48;5;124;38;5;160m▀[m[48;5;52m [m[48;5;16;38;5;52m▀[m[48;5;16;38;5;52m▀[m[48;5;16;38;5;52m▀[m[48;5;16;38;5;52m▀[m[48;5;52m [m[48;5;124;38;5;160m▀[m[48;5;160;38;5;88m▀[m[48;5;52;38;5;124m▀[m[48;5;88;38;5;197m▀[m[48;5;124;38;5;160m▀[m[48;5;88;38;5;52m▀[m[48;5;124;38;5;16m▀[m[48;5;22;38;5;64m▀[m[48;5;16;38;5;22m▀[m[48;5;22;38;5;16m▀[m[48;5;28m [m[48;5;149m [m[48;5;22;38;5;70m▀[m [48;5;16;38;5;22m▀[m[48;5;113;38;5;149m▀[m[48;5;112;38;5;70m▀[m[48;5;22m [m[48;5;22;38;5;16m▀[m[48;5;22;38;5;16m▀[m[48;5;16;38;5;88m▀[m[48;5;22;38;5;52m▀[m[48;5;28;38;5;88m▀[m[48;5;28;38;5;16m▀[m[48;5;28;38;5;52m▀[m[48;5;22;38;5;124m▀[m[48;5;16;38;5;52m▀[m[48;5;16;38;5;52m▀[m[48;5;52;38;5;16m▀[m[48;5;124m [m[48;5;124m [m[48;5;52;38;5;16m▀[m[48;5;16;38;5;52m▀[m[48;5;16;38;5;52m▀[m[48;5;22;38;5;124m▀[m[48;5;28;38;5;52m▀[m[48;5;28;38;5;16m▀[m[48;5;28;38;5;88m▀[m[48;5;22;38;5;52m▀[m[48;5;16;38;5;88m▀[m[48;5;22;38;5;16m▀[m[48;5;22;38;5;16m▀[m[48;5;22m [m[48;5;112;38;5;70m▀[m[48;5;113;38;5;149m▀[m[48;5;16;38;5;22m▀[m [48;5;28;38;5;70m▀[m[48;5;150;38;5;149m▀[m[48;5;112;38;5;34m▀[m[48;5;70;38;5;28m▀[m[48;5;149;38;5;28m▀[m[48;5;112;38;5;107m▀[m[48;5;64;38;5;149m▀[m[48;5;28;38;5;150m▀[m[48;5;64;38;5;149m▀[m[48;5;28;38;5;150m▀[m[48;5;106;38;5;112m▀[m[48;5;112;38;5;28m▀[m[48;5;70;38;5;22m▀[m[48;5;22;38;5;88m▀[m[48;5;22;38;5;52m▀[m[48;5;22;38;5;52m▀[m[48;5;22;38;5;88m▀[m[48;5;70;38;5;22m▀[m[48;5;112;38;5;28m▀[m[48;5;106;38;5;112m▀[m[48;5;28;38;5;150m▀[m[48;5;64;38;5;149m▀[m[48;5;28;38;5;150m▀[m[48;5;64;38;5;149m▀[m[48;5;112;38;5;107m▀[m[48;5;149;38;5;28m▀[m[48;5;70;38;5;28m▀[m[48;5;112;38;5;34m▀[m[48;5;150;38;5;149m▀[m[48;5;28;38;5;70m▀[m [48;5;22;38;5;70m▀[m[48;5;70;38;5;150m▀[m[48;5;22;38;5;149m▀[m[48;5;16;38;5;70m▀[m[48;5;52;38;5;22m▀[m[48;5;94;38;5;101m▀[m[48;5;94;38;5;101m▀[m[48;5;143;38;5;94m▀[m[48;5;137;38;5;94m▀[m[48;5;52;38;5;22m▀[m[48;5;22;38;5;70m▀[m[48;5;70;38;5;148m▀[m[48;5;112;38;5;70m▀[m[48;5;106;38;5;28m▀[m[48;5;106;38;5;28m▀[m[48;5;112;38;5;70m▀[m[48;5;70;38;5;148m▀[m[48;5;22;38;5;70m▀[m[48;5;52;38;5;22m▀[m[48;5;137;38;5;94m▀[m[48;5;143;38;5;94m▀[m[48;5;94;38;5;101m▀[m[48;5;94;38;5;101m▀[m[48;5;52;38;5;22m▀[m[48;5;16;38;5;70m▀[m[48;5;22;38;5;149m▀[m[48;5;70;38;5;150m▀[m[48;5;22;38;5;70m▀[m [48;5;16m [m[48;5;94;38;5;16m▀[m[48;5;187;38;5;94m▀[m[48;5;223;38;5;137m▀[m[48;5;94;38;5;52m▀[m[48;5;52m [m[48;5;16;38;5;52m▀[m[48;5;52;38;5;94m▀[m[48;5;180;38;5;94m▀[m[48;5;187;38;5;101m▀[m[48;5;52m [m[48;5;16;38;5;22m▀[m[38;5;113m▀[m[38;5;113m▀[m[48;5;16;38;5;22m▀[m[48;5;52m [m[48;5;187;38;5;101m▀[m[48;5;180;38;5;94m▀[m[48;5;52;38;5;94m▀[m[48;5;16;38;5;52m▀[m[48;5;52m [m[48;5;94;38;5;52m▀[m[48;5;223;38;5;137m▀[m[48;5;187;38;5;94m▀[m[48;5;94;38;5;16m▀[m[48;5;16m [m [48;5;94;38;5;52m▀[m[48;5;186;38;5;144m▀[m[48;5;223;38;5;230m▀[m[48;5;101;38;5;180m▀[m[48;5;16;38;5;52m▀[m[38;5;52m▀[m [48;5;94m [m[48;5;180;38;5;186m▀[m[48;5;52;38;5;101m▀[m[38;5;52m▀[m [38;5;52m▀[m[48;5;52;38;5;101m▀[m[48;5;180;38;5;186m▀[m[48;5;94m [m [38;5;52m▀[m[48;5;16;38;5;52m▀[m[48;5;101;38;5;180m▀[m[48;5;223;38;5;230m▀[m[48;5;186;38;5;144m▀[m[48;5;94;38;5;52m▀[m [48;5;58;38;5;94m▀[m[48;5;180;38;5;186m▀[m[48;5;180;38;5;222m▀[m[48;5;52m [m [38;5;52m▀[m[48;5;52;38;5;101m▀[m[48;5;52m [m [48;5;52m [m[48;5;52;38;5;101m▀[m[38;5;52m▀[m [48;5;52m [m[48;5;180;38;5;222m▀[m[48;5;180;38;5;186m▀[m[48;5;58;38;5;94m▀[m [38;5;52m▀[m[48;5;94;38;5;143m▀[m[48;5;143;38;5;180m▀[m[48;5;58;38;5;52m▀[m [48;5;58;38;5;52m▀[m[48;5;143;38;5;180m▀[m[48;5;94;38;5;143m▀[m[38;5;52m▀[m [38;5;94m▀[m[48;5;52m [m[48;5;52;38;5;16m▀[m [48;5;52;38;5;16m▀[m[48;5;52m [m[38;5;94m▀[m METROID } normal() { cat &amp;lt;&amp;lt; METROID [48;5;16m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16m [m [48;5;16m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16m [m [48;5;16m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16m [m [48;5;16m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16m [m [48;5;16m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16m [m[48;5;16m [m[48;5;223;38;5;16m▀[m[48;5;223;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16m [m [48;5;16m [m[48;5;77m [m[48;5;77m [m[48;5;16m [m[48;5;16m [m[48;5;223;38;5;16m▀[m[48;5;223;38;5;16m▀[m[48;5;223m [m[48;5;223m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16m [m [48;5;16m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;223;38;5;16m▀[m[48;5;223;38;5;16m▀[m[48;5;223m [m[48;5;223m [m[48;5;16;38;5;223m▀[m[48;5;16;38;5;223m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196m [m[48;5;196m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;77m [m[48;5;77m [m[48;5;16m [m [48;5;16m [m[48;5;77m [m[48;5;77m [m[48;5;16m [m[48;5;16m [m[48;5;223m [m[48;5;223m [m[48;5;16;38;5;223m▀[m[48;5;16;38;5;223m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196m [m[48;5;196m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16m [m [48;5;16m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;223m▀[m[48;5;16;38;5;223m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;223;38;5;196m▀[m[48;5;223;38;5;196m▀[m[48;5;223;38;5;196m▀[m[48;5;223;38;5;196m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196m [m[48;5;196m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;77m [m[48;5;77m [m[48;5;16m [m [48;5;16m [m[48;5;77m [m[48;5;77m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;223;38;5;196m▀[m[48;5;223;38;5;196m▀[m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;223;38;5;196m▀[m[48;5;223;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;77m [m[48;5;77m [m[48;5;16m [m [48;5;16m [m[48;5;77m [m[48;5;77m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;223m▀[m[48;5;196;38;5;223m▀[m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;196;38;5;223m▀[m[48;5;196;38;5;223m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196m [m[48;5;196m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16m [m [48;5;16m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;223;38;5;16m▀[m[48;5;223;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;196;38;5;223m▀[m[48;5;196;38;5;223m▀[m[48;5;196;38;5;223m▀[m[48;5;196;38;5;223m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;223;38;5;16m▀[m[48;5;223;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;77m [m[48;5;77m [m[48;5;16m [m [48;5;16m [m[48;5;77m [m[48;5;77m [m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;223;38;5;196m▀[m[48;5;223;38;5;196m▀[m[48;5;223m [m[48;5;223m [m[48;5;223;38;5;196m▀[m[48;5;223;38;5;196m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;223;38;5;196m▀[m[48;5;223;38;5;196m▀[m[48;5;223m [m[48;5;223m [m[48;5;223;38;5;196m▀[m[48;5;223;38;5;196m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;77m [m[48;5;77m [m[48;5;16m [m [48;5;16m [m[48;5;77m [m[48;5;77m [m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196m [m[48;5;196m [m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;223;38;5;196m▀[m[48;5;223;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;223;38;5;196m▀[m[48;5;223;38;5;196m▀[m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;196m [m[48;5;196m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;77m [m[48;5;77m [m[48;5;16m [m [48;5;16m [m[48;5;77m [m[48;5;77m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;196;38;5;223m▀[m[48;5;196;38;5;223m▀[m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;196;38;5;223m▀[m[48;5;196;38;5;223m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;223m▀[m[48;5;196;38;5;223m▀[m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;196;38;5;223m▀[m[48;5;196;38;5;223m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77m [m[48;5;77m [m[48;5;16m [m [48;5;16m [m[48;5;77m [m[48;5;77m [m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;196;38;5;223m▀[m[48;5;196;38;5;223m▀[m[48;5;196;38;5;223m▀[m[48;5;196;38;5;223m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;196;38;5;223m▀[m[48;5;196;38;5;223m▀[m[48;5;196;38;5;223m▀[m[48;5;196;38;5;223m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;77m [m[48;5;77m [m[48;5;16m [m [48;5;16m [m[48;5;77m [m[48;5;77m [m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;77m [m[48;5;77m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77m [m[48;5;77m [m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;77m [m[48;5;77m [m[48;5;16m [m [48;5;16m [m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;196m [m[48;5;196m [m[48;5;196m [m[48;5;196m [m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;77m [m[48;5;77m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77m [m[48;5;77m [m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196m [m[48;5;196m [m[48;5;196m [m[48;5;196m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16m [m [48;5;16m [m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;223;38;5;196m▀[m[48;5;223;38;5;196m▀[m[48;5;196m [m[48;5;196m [m[48;5;196m [m[48;5;196m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;77m [m[48;5;77m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77m [m[48;5;77m [m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196m [m[48;5;196m [m[48;5;196m [m[48;5;196m [m[48;5;223;38;5;196m▀[m[48;5;223;38;5;196m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16m [m [48;5;16m [m[48;5;223m [m[48;5;223m [m[48;5;196m [m[48;5;196m [m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16m [m[38;5;16m▀[m[38;5;16m▀[m[48;5;16m [m[48;5;223;38;5;16m▀[m[48;5;223;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;77m [m[48;5;77m [m[48;5;77m [m[48;5;77m [m[48;5;77m [m[48;5;77m [m[48;5;77m [m[48;5;77m [m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16m [m[48;5;16m [m[48;5;223;38;5;16m▀[m[48;5;223;38;5;16m▀[m[48;5;16m [m[38;5;16m▀[m[38;5;16m▀[m[48;5;16m [m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;196m [m[48;5;196m [m[48;5;223m [m[48;5;223m [m[48;5;16m [m [48;5;16m [m[48;5;16;38;5;223m▀[m[48;5;16;38;5;223m▀[m[48;5;223;38;5;196m▀[m[48;5;223;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m [48;5;16m [m[48;5;223m [m[48;5;223m [m[48;5;223;38;5;16m▀[m[48;5;223;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;77m [m[48;5;77m [m[48;5;77m [m[48;5;77m [m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16m [m[48;5;16m [m[48;5;223;38;5;16m▀[m[48;5;223;38;5;16m▀[m[48;5;223m [m[48;5;223m [m[48;5;16m [m [48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;223;38;5;196m▀[m[48;5;223;38;5;196m▀[m[48;5;16;38;5;223m▀[m[48;5;16;38;5;223m▀[m[48;5;16m [m [48;5;16m [m[48;5;16;38;5;223m▀[m[48;5;16;38;5;223m▀[m[48;5;223;38;5;16m▀[m[48;5;223;38;5;16m▀[m[48;5;16m [m [48;5;16m [m[48;5;223m [m[48;5;223m [m[48;5;16;38;5;223m▀[m[48;5;16;38;5;223m▀[m[48;5;16m [m [48;5;16m [m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16m [m [48;5;16m [m[48;5;16;38;5;223m▀[m[48;5;16;38;5;223m▀[m[48;5;223m [m[48;5;223m [m[48;5;16m [m [48;5;16m [m[48;5;223;38;5;16m▀[m[48;5;223;38;5;16m▀[m[48;5;16;38;5;223m▀[m[48;5;16;38;5;223m▀[m[48;5;16m [m [48;5;16m [m[48;5;16;38;5;223m▀[m[48;5;16;38;5;223m▀[m[48;5;16m [m [48;5;16m [m[48;5;16;38;5;223m▀[m[48;5;16;38;5;223m▀[m[48;5;223;38;5;16m▀[m[48;5;223;38;5;16m▀[m[48;5;16m [m [48;5;16m [m[48;5;223;38;5;16m▀[m[48;5;223;38;5;16m▀[m[48;5;16;38;5;223m▀[m[48;5;16;38;5;223m▀[m[48;5;16m [m [48;5;16m [m[48;5;16;38;5;223m▀[m[48;5;16;38;5;223m▀[m[48;5;16m [m [48;5;16m [m[48;5;16;38;5;223m▀[m[48;5;16;38;5;223m▀[m[48;5;16m [m [48;5;16m [m[48;5;16;38;5;223m▀[m[48;5;16;38;5;223m▀[m[48;5;16m [m METROID } case &amp;#34;$1&amp;#34; in *-m|--mini|mini*) mini ;; *-s|--super|super*) super ;; *-n|--normal|normal) normal ;; *-t|--text|text) text ;; *) text usage ;; esac</description></item><item><title>Mysql</title><link>https://hellupline.dev/docs/knowledge/applications/mysql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/knowledge/applications/mysql/</guid><description>Create user CREATE USER &amp;#39;user&amp;#39;@&amp;#39;%&amp;#39; IDENTIFIED BY &amp;#39;PASSWORD&amp;#39;; GRANT SELECT on DATABASE.* TO &amp;#39;user&amp;#39;@&amp;#39;%&amp;#39;; Inspect User Permissions SHOW GRANTS FOR &amp;#39;user&amp;#39;@&amp;#39;%&amp;#39;; Allow Kill process on RDS GRANT EXECUTE ON PROCEDURE `mysql`.`rds_kill_query` TO `operator`@`%`; GRANT EXECUTE ON PROCEDURE `mysql`.`rds_kill` TO `operator`@`%`; GRANT SELECT ON TABLE `information_schema`.`PROCESSLIST` TO `operator`@`%`;</description></item><item><title>namespace.yaml</title><link>https://hellupline.dev/docs/cloud/kubernetes/namespace.yaml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/cloud/kubernetes/namespace.yaml/</guid><description> Download --- apiVersion: v1 kind: Namespace metadata: name: my-namespace labels: name: my-namespace</description></item><item><title>Network</title><link>https://hellupline.dev/docs/knowledge/commands/network/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/knowledge/commands/network/</guid><description>Curl Debug Requests curl \ --silent --show-error \ --fail --fail-early \ --compress --location \ --create-dirs \ --dump-header - --output - \ --write-out &amp;#39; time_namelookup: %{time_namelookup} time_connect: %{time_connect} time_appconnect: %{time_appconnect} time_pretransfer: %{time_pretransfer} time_redirect: %{time_redirect} time_starttransfer: %{time_starttransfer} ---------- time_total: %{time_total} &amp;#39; \ --request GET --url https://example.com IP Address curl https://ifconfig.co/ QR Code echo &amp;#34;my text&amp;#34; | curl --form &amp;#39;data=&amp;lt;-&amp;#39; https://qrenco.de/ Weather curl https://wttr.in/curitiba Netcat Listen do Port netcat -vvv -l -p 8000 -s localhost Connect to Server netcat -vvv localhost 8000 Port Tunnel netcat -vvv -L &amp;#34;localhost:8001&amp;#34; -p 8000 -s localhost</description></item><item><title>Nginx</title><link>https://hellupline.dev/docs/knowledge/applications/docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/knowledge/applications/docker/</guid><description>Run Container docker container run --rm --interactive --tty --name=stuff \ --volume=&amp;#34;${PWD}:/data&amp;#34; \ --network=&amp;#34;my_net&amp;#34; \ --publish=&amp;#34;8080:80&amp;#34; \ --env=&amp;#34;CONFIG_VALUE=my-app&amp;#34; \ --env-file=&amp;#34;prod.env&amp;#34; \ --workdir=&amp;#34;/data&amp;#34; \ alpine Build docker build --tag my_registry/my_app:my_version --file ./Dockerfile ./ docker push my_registry/my_app:my_version docker tag my_registry/my_app:my_version my_registry/my_app:latest docker push my_registry/my_app:latest Multi-Stage Dockerfile FROMgolang:1.13 as buildWORKDIR/appCOPY ./ ./RUN go build -o my_appFROMalpine:latestRUN apk --no-cache add ca-certificatesWORKDIR/appCOPY --from=builder /app/my_app ./CMD [&amp;#34;./my_app&amp;#34;]Volumes docker volume create my_volume docker volume ls docker volume rm my_volume Network docker network create my_net docker network ls docker network rm my_net Running containers docker container ls docker container logs my_container docker container exec -it my_container my_command docker container attach my_container System docker system events docker system info docker system prune --volumes --all Login to AWS ECR $(aws ecr get-login --no-include-email)</description></item><item><title>Nginx</title><link>https://hellupline.dev/docs/knowledge/applications/nginx/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/knowledge/applications/nginx/</guid><description>Run a simple static site with nginx and docker docker run --rm -it --name=static-site \ --volume &amp;#34;${PWD}/public:/usr/share/nginx/html&amp;#34; \ --publish 8080:80 \ --workdir /usr/share/nginx/html \ nginx Run with configuration files docker run --rm -it --name=static-site \ --volume &amp;#34;${PWD}/conf.d:/etc/nginx/conf.d/&amp;#34; \ --volume &amp;#34;${PWD}/public:/usr/share/nginx/html&amp;#34; \ --publish 8080:80 \ --workdir /usr/share/nginx/html \ nginx</description></item><item><title>osx</title><link>https://hellupline.dev/docs/knowledge/commands/osx/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/knowledge/commands/osx/</guid><description>HomeBrew Install HomeBrew /usr/bin/ruby -e &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;#34; Install Packages HOMEBREW_NO_AUTO_UPDATE=1 brew install ... HOMEBREW_NO_AUTO_UPDATE=1 brew cask install ... Notifications osascript -e &amp;#39;display notification &amp;#34;Body&amp;#34; with title &amp;#34;Title&amp;#34;&amp;#39; Text to voice say &amp;#34;Hello World&amp;#34; Clipboard pbpaste &amp;gt; output.txt pbcopy &amp;lt; input.txt</description></item><item><title>pacman-colors</title><link>https://hellupline.dev/docs/scripts/toys/pacman-colors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/scripts/toys/pacman-colors/</guid><description> Download #!/bin/bash # # ANSI color scheme script featuring PACMAN # by pfh # # Initializing procedure by lolilolicon # f=3 b=4 for j in f b; do for i in {0..7}; do printf -v $j$i %b &amp;#34;\e[${!j}${i}m&amp;#34; done done bld=$&amp;#39;\e[1m&amp;#39; rst=$&amp;#39;\e[0m&amp;#39; inv=$&amp;#39;\e[7m&amp;#39; cat &amp;lt;&amp;lt; EOF $rst $f3 ▄███████▄ $f1 ▄██████▄ $f2 ▄██████▄ $f4 ▄██████▄ $f5 ▄██████▄ $f6 ▄██████▄ $f3▄█████████▀▀ $f1▄$f7█▀█$f1██$f7█▀█$f1██▄ $f2▄█$f7███$f2██$f7███$f2█▄ $f4▄█$f7███$f4██$f7███$f4█▄ $f5▄█$f7███$f5██$f7███$f5█▄ $f6▄██$f7█▀█$f6██$f7█▀█$f6▄ $f3███████▀ $f7▄▄ ▄▄ ▄▄ $f1█$f7▄▄█$f1██$f7▄▄█$f1███ $f2██$f7█ █$f2██$f7█ █$f2██ $f4██$f7█ █$f4██$f7█ █$f4██ $f5██$f7█ █$f5██$f7█ █$f5██ $f6███$f7█▄▄$f6██$f7█▄▄$f6█ $f3███████▄ $f7▀▀ ▀▀ ▀▀ $f1████████████ $f2████████████ $f4████████████ $f5████████████ $f6████████████ $f3▀█████████▄▄ $f1██▀██▀▀██▀██ $f2██▀██▀▀██▀██ $f4██▀██▀▀██▀██ $f5██▀██▀▀██▀██ $f6██▀██▀▀██▀██ $f3 ▀███████▀ $f1▀ ▀ ▀ ▀ $f2▀ ▀ ▀ ▀ $f4▀ ▀ ▀ ▀ $f5▀ ▀ ▀ ▀ $f6▀ ▀ ▀ ▀ $bld $f3 ▄███████▄ $f1 ▄██████▄ $f2 ▄██████▄ $f4 ▄██████▄ $f5 ▄██████▄ $f6 ▄██████▄ $f3▄█████████▀▀ $f1▄$f7█▀█$f1██$f7█▀█$f1██▄ $f2▄█$f7█ █$f2██$f7█ █$f2█▄ $f4▄█$f7█ █$f4██$f7█ █$f4█▄ $f5▄█$f7█ █$f5██$f7█ █$f5█▄ $f6▄██$f7█▀█$f6██$f7█▀█$f6▄ $f3███████▀ $f7▄▄ ▄▄ ▄▄ $f1█$f7▄▄█$f1██$f7▄▄█$f1███ $f2██$f7███$f2██$f7███$f2██ $f4██$f7███$f4██$f7███$f4██ $f5██$f7███$f5██$f7███$f5██ $f6███$f7█▄▄$f6██$f7█▄▄$f6█ $f3███████▄ $f7▀▀ ▀▀ ▀▀ $f1████████████ $f2████████████ $f4████████████ $f5████████████ $f6████████████ $f3▀█████████▄▄ $f1██▀██▀▀██▀██ $f2██▀██▀▀██▀██ $f4██▀██▀▀██▀██ $f5██▀██▀▀██▀██ $f6██▀██▀▀██▀██ $f3 ▀███████▀ $f1▀ ▀ ▀ ▀ $f2▀ ▀ ▀ ▀ $f4▀ ▀ ▀ ▀ $f5▀ ▀ ▀ ▀ $f6▀ ▀ ▀ ▀ $rst EOF</description></item><item><title>pipes</title><link>https://hellupline.dev/docs/scripts/toys/pipes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/scripts/toys/pipes/</guid><description>Download #!/usr/bin/env bash # pipes.sh: Animated pipes terminal screensaver. # # This modified version is maintained at: # # https://github.com/livibetter/pipes.sh # options: # s = straight [5-15] # f = rate [20-100] # t = style [0-5] # r = ttl VERSION=0.1.0 M=32768 p=1 f=75 s=13 r=2000 t=0 w=$(tput cols) h=$(tput lines) # ab -&amp;gt; idx = a*4 + b # 0: up, 1: right, 2: down, 3: left # 00 means going up , then going up -&amp;gt; ┃ # 12 means going right, then going down -&amp;gt; ┓ sets=( &amp;#34;┃┏ ┓┛━┓ ┗┃┛┗ ┏━&amp;#34; &amp;#34;│╭ ╮╯─╮ ╰│╯╰ ╭─&amp;#34; &amp;#34;│┌ ┐┘─┐ └│┘└ ┌─&amp;#34; &amp;#34;║╔ ╗╝═╗ ╚║╝╚ ╔═&amp;#34; &amp;#34;|+ ++-+ +|++ +-&amp;#34; &amp;#34;|/ \/-\ \|/\ /-&amp;#34; ) v=() RNDSTART=0 NOCOLOR=0 OPTIND=1 while getopts &amp;#34;p:t:f:s:r:RChv&amp;#34; arg; do case $arg in p) ((p=(OPTARG&amp;gt;0)?</description></item><item><title>pipesx</title><link>https://hellupline.dev/docs/scripts/toys/pipesx/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/scripts/toys/pipesx/</guid><description>Download #!/bin/bash # Animated pipes.sh terminal screensaver at an angle. # Copyright (C) 2013, 2014 by Yu-Jie Lin # # Permission is hereby granted, free of charge, to any person obtaining a copy # of this software and associated documentation files (the &amp;#34;Software&amp;#34;), to deal # in the Software without restriction, including without limitation the rights # to use, copy, modify, merge, publish, distribute, sublicense, and/or sell # copies of the Software, and to permit persons to whom the Software is # furnished to do so, subject to the following conditions: # # The above copyright notice and this permission notice shall be included in # all copies or substantial portions of the Software.</description></item><item><title>play-old</title><link>https://hellupline.dev/docs/scripts/utils/play-old/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/scripts/utils/play-old/</guid><description> Download #!/bin/sh # Usage: # $ play-random ./ # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist find &amp;#34;${@}&amp;#34; -type f \ -regextype posix-egrep \ -regex &amp;#39;.*\.(avi|mkv|mp4|wmv|flv|webm)$&amp;#39; \ -printf &amp;#39;%T@ %p\n&amp;#39; \ | sort -k1nr \ | cut -d&amp;#39; &amp;#39; -f2- \ | xargs -d&amp;#39;\n&amp;#39; mpv -quiet</description></item><item><title>play-random</title><link>https://hellupline.dev/docs/scripts/utils/play-random/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/scripts/utils/play-random/</guid><description> Download #!/bin/sh # Usage: # $ play-random ./ # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist find &amp;#34;${@}&amp;#34; -type f \ -regextype posix-egrep \ -regex &amp;#39;.*\.(avi|mkv|mp4|wmv|flv|webm)$&amp;#39; \ -printf &amp;#39;%T@ %p\n&amp;#39; \ | sort -R \ | cut -d&amp;#39; &amp;#39; -f2- \ | xargs -d&amp;#39;\n&amp;#39; mpv -quiet</description></item><item><title>pod.yaml</title><link>https://hellupline.dev/docs/cloud/kubernetes/pod.yaml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/cloud/kubernetes/pod.yaml/</guid><description>Download --- apiVersion: v1 kind: Pod metadata: labels: {app: my-app} name: my-app namespace: my-namespace spec: affinity: # repel same pods in node podAntiAffinity: preferredDuringSchedulingIgnoredDuringExecution: - topologyKey: kubernetes.io/hostname labelSelector: matchExpressions: - {key: app, operator: In, values: [my-app]} # attract cache pods podAffinity: preferredDuringSchedulingIgnoredDuringExecution: - topologyKey: kubernetes.io/hostname labelSelector: matchExpressions: - {key: app, operator: In, values: [my-app-cache]} # resist node taint tags tolerations: - {key: role, operator: Equal, value: worker, effect: NoSchedule} - {key: role, operator: Equal, value: worker, effect: NoExecute} restartPolicy: Always containers: - name: my-app imagePullPolicy: Always image: nginx cmd: [&amp;#34;sh&amp;#34;, &amp;#34;-c&amp;#34;] args: [&amp;#34;echo&amp;#34;, &amp;#34;123&amp;#34;] # pod environment lifecycle: postStart: {exec: {command: [&amp;#34;/bin/sh&amp;#34;, &amp;#34;-c&amp;#34;, &amp;#34;touch /tmp/hello&amp;#34;]}} preStop: {exec: {command: [&amp;#34;/bin/sh&amp;#34;, &amp;#34;-c&amp;#34;, &amp;#34;echo Hello from the preSop handler &amp;gt; /tmp/hello&amp;#34;]}} volumeMounts: - {name: secret-files, mountPath: &amp;#34;/my-app/secret/&amp;#34;, readOnly: true} - {name: config-files, mountPath: &amp;#34;/my-app/config/&amp;#34;, readOnly: true} - {name: volume-files, mountPath: &amp;#34;/my-app/volume/&amp;#34;, readOnly: false} - {name: cached-files, mountPath: &amp;#34;/my-app/cached/&amp;#34;, readOnly: false} ports: - {name: http, containerPort: 80, hostPort: 80} resources: requests: {memory: &amp;#34;32Mi&amp;#34;, cpu: &amp;#34;50m&amp;#34;} limits: {memory: &amp;#34;256Mi&amp;#34;, cpu: &amp;#34;200m&amp;#34;} envFrom: - secretRef: {name: my-app-secret} - configMapRef: {name: my-app-config} env: - {name: SECRET_ENV, valueFrom: {secretKeyRef: {name: my-app-secret, key: SECRET_ENV}}} - {name: CONFIG_ENV, valueFrom: {configMapKeyRef: {name: my-app-config, key: CONFIG_ENV}}} - {name: ENV_NAME, value: &amp;#34;ENV_VALUE&amp;#34;} - {name: POD_NAMESPACE, valueFrom: {fieldRef: {fieldPath: metadata.</description></item><item><title>Postgresql</title><link>https://hellupline.dev/docs/knowledge/applications/postgresql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/knowledge/applications/postgresql/</guid><description>Show where a user has permissions SELECT a.schemaname, a.tablename, b.usename, HAS_TABLE_PRIVILEGE(b.usename, a.schemaname || &amp;#39;.&amp;#39; || a.tablename, &amp;#39;select&amp;#39;) as select, HAS_TABLE_PRIVILEGE(b.usename, a.schemaname || &amp;#39;.&amp;#39; || a.tablename, &amp;#39;insert&amp;#39;) as insert, HAS_TABLE_PRIVILEGE(b.usename, a.schemaname || &amp;#39;.&amp;#39; || a.tablename, &amp;#39;update&amp;#39;) as update, HAS_TABLE_PRIVILEGE(b.usename, a.schemaname || &amp;#39;.&amp;#39; || a.tablename, &amp;#39;delete&amp;#39;) as delete, HAS_TABLE_PRIVILEGE(b.usename, a.schemaname || &amp;#39;.&amp;#39; || a.tablename, &amp;#39;references&amp;#39;) as references FROM pg_tables a, pg_user b WHERE a.schemaname = &amp;#39;example_schema&amp;#39;; Show objects ownership SELECT nsp.nspname as object_schema, cls.</description></item><item><title>private-registry-credentials.yaml</title><link>https://hellupline.dev/docs/cloud/kubernetes/private-registry-credentials.yaml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/cloud/kubernetes/private-registry-credentials.yaml/</guid><description> Download --- apiVersion: v1 kind: Secret metadata: name: gitlab-registry-secrets namespace: my-namespace type: kubernetes.io/dockerconfigjson stringData: .dockerconfigjson: &amp;#39;{&amp;#34;auths&amp;#34;:{&amp;#34;https://registry.gitlab.com&amp;#34;:{&amp;#34;username&amp;#34;:&amp;#34;&amp;#34;,&amp;#34;password&amp;#34;:&amp;#34;&amp;#34;}}}&amp;#39; --- apiVersion: v1 kind: ServiceAccount metadata: name: default namespace: my-namespace imagePullSecrets: - name: gitlab-registry-secrets</description></item><item><title>rain</title><link>https://hellupline.dev/docs/scripts/toys/rain/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/scripts/toys/rain/</guid><description>Download #!/bin/bash RAINS=(&amp;#34;|&amp;#34; &amp;#34;│&amp;#34; &amp;#34;┃&amp;#34; &amp;#34;┆&amp;#34; &amp;#34;┇&amp;#34; &amp;#34;┊&amp;#34; &amp;#34;┋&amp;#34; &amp;#34;╽&amp;#34; &amp;#34;╿&amp;#34;) COLORS=(&amp;#34;\e[37m&amp;#34; &amp;#34;\e[37;1m&amp;#34;) # More from 256 color mode for i in {244..255}; do COLORS=(&amp;#34;${COLORS[@]}&amp;#34; &amp;#34;\e[38;5;${i}m&amp;#34;) done NRAINS=${#RAINS[@]} NCOLORS=${#COLORS[@]} NUM_RAIN_METADATA=5 sigwinch() { TERM_WIDTH=$(tput cols) TERM_HEIGHT=$(tput lines) STEP_DURATION=0.025 ((MAX_RAINS = TERM_WIDTH * TERM_HEIGHT / 4)) ((MAX_RAIN_LENGTH = TERM_HEIGHT &amp;lt; 10 ? 1 : TERM_HEIGHT / 10)) # In percentage ((NEW_RAIN_ODD = TERM_HEIGHT &amp;gt; 50 ? 100 : TERM_HEIGHT * 2)) ((NEW_RAIN_ODD = NEW_RAIN_ODD * 75 / 100)) ((FALLING_ODD = TERM_HEIGHT &amp;gt; 25 ?</description></item><item><title>rbac-aggregated-maintenance.yaml</title><link>https://hellupline.dev/docs/cloud/kubernetes/rbac-aggregated-maintenance.yaml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/cloud/kubernetes/rbac-aggregated-maintenance.yaml/</guid><description>Download --- apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRole metadata: name: deployment--maintenance aggregationRule: clusterRoleSelectors: - matchLabels: deployment.rbac.example.com/aggregate-to-create: &amp;#34;true&amp;#34; deployment.rbac.example.com/aggregate-to-read: &amp;#34;true&amp;#34; deployment.rbac.example.com/aggregate-to-update: &amp;#34;true&amp;#34; rules: [] # Rules are automatically filled in by the controller manager. --- apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRole metadata: name: deployment--create labels: deployment.rbac.example.com/aggregate-to-create: &amp;#34;true&amp;#34; # These rules will be added to the &amp;#34;monitoring&amp;#34; role. rules: - apiGroups: [&amp;#34;&amp;#34;] resources: [&amp;#34;services&amp;#34;, &amp;#34;endpoints&amp;#34;, &amp;#34;pods&amp;#34;] verbs: [&amp;#34;create&amp;#34;] - apiGroups: [&amp;#34;apps&amp;#34;, &amp;#34;extensions&amp;#34;] resources: [&amp;#34;deployments&amp;#34;] verbs: [&amp;#34;create&amp;#34;] --- apiVersion: rbac.</description></item><item><title>rbac-cluster-full-access.yaml</title><link>https://hellupline.dev/docs/cloud/kubernetes/rbac-cluster-full-access.yaml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/cloud/kubernetes/rbac-cluster-full-access.yaml/</guid><description> Download --- kind: ClusterRole apiVersion: rbac.authorization.k8s.io/v1beta1 metadata: name: my-cluster-role--full-access rules: - apiGroups: [&amp;#34;&amp;#34;, &amp;#34;extensions&amp;#34;, &amp;#34;apps&amp;#34;, &amp;#34;batch&amp;#34;] resources: [&amp;#34;*&amp;#34;] verbs: [&amp;#34;*&amp;#34;] --- apiVersion: v1 kind: ServiceAccount metadata: name: my-service-account namespace: my-namespace --- kind: ClusterRoleBinding apiVersion: rbac.authorization.k8s.io/v1beta1 metadata: name: my-cluster-role-binding--full-access roleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: my-cluster-role--full-access subjects: - apiGroup: rbac.authorization.k8s.io kind: ServiceAccount name: my-service-account namespace: my-namespace - apiGroup: rbac.authorization.k8s.io kind: User name: my-user - apiGroup: rbac.authorization.k8s.io kind: Group name: my-group</description></item><item><title>rbac-cluster-read-only.yaml</title><link>https://hellupline.dev/docs/cloud/kubernetes/rbac-cluster-read-only.yaml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/cloud/kubernetes/rbac-cluster-read-only.yaml/</guid><description> Download --- kind: ClusterRole apiVersion: rbac.authorization.k8s.io/v1beta1 metadata: name: my-cluster-role--read-only rules: - apiGroups: [&amp;#34;&amp;#34;, &amp;#34;extensions&amp;#34;, &amp;#34;apps&amp;#34;, &amp;#34;batch&amp;#34;] resources: [&amp;#34;*&amp;#34;] verbs: [&amp;#34;get&amp;#34;, &amp;#34;list&amp;#34;, &amp;#34;watch&amp;#34;] --- apiVersion: v1 kind: ServiceAccount metadata: name: my-service-account namespace: my-namespace --- kind: ClusterRoleBinding apiVersion: rbac.authorization.k8s.io/v1beta1 metadata: name: my-cluster-role-binding--read-only roleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: my-cluster-role--read-only subjects: - apiGroup: rbac.authorization.k8s.io kind: ServiceAccount name: my-service-account namespace: my-namespace - apiGroup: rbac.authorization.k8s.io kind: User name: my-user - apiGroup: rbac.authorization.k8s.io kind: Group name: my-group</description></item><item><title>rbac-namespace-full-access.yaml</title><link>https://hellupline.dev/docs/cloud/kubernetes/rbac-namespace-full-access.yaml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/cloud/kubernetes/rbac-namespace-full-access.yaml/</guid><description>Download --- kind: Role apiVersion: rbac.authorization.k8s.io/v1beta1 metadata: name: my-namespace-role--full-access namespace: my-namespace rules: - apiGroups: [&amp;#34;&amp;#34;, &amp;#34;extensions&amp;#34;, &amp;#34;apps&amp;#34;, &amp;#34;batch&amp;#34;] resources: [&amp;#34;*&amp;#34;] verbs: [&amp;#34;*&amp;#34;] --- apiVersion: v1 kind: ServiceAccount metadata: name: my-service-account namespace: my-namespace --- kind: RoleBinding apiVersion: rbac.authorization.k8s.io/v1beta1 metadata: name: my-namespace-role-binding--full-access namespace: my-namespace roleRef: apiGroup: rbac.authorization.k8s.io kind: Role name: my-namespace-role--full-access subjects: - apiGroup: rbac.authorization.k8s.io kind: ServiceAccount name: my-service-account namespace: my-namespace - apiGroup: rbac.authorization.k8s.io kind: User name: my-user - apiGroup: rbac.</description></item><item><title>rbac-namespace-read-only.yaml</title><link>https://hellupline.dev/docs/cloud/kubernetes/rbac-namespace-read-only.yaml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/cloud/kubernetes/rbac-namespace-read-only.yaml/</guid><description>Download --- kind: Role apiVersion: rbac.authorization.k8s.io/v1beta1 metadata: name: my-namespace-role--read-only namespace: my-namespace rules: - apiGroups: [&amp;#34;&amp;#34;, &amp;#34;extensions&amp;#34;, &amp;#34;apps&amp;#34;, &amp;#34;batch&amp;#34;] resources: [&amp;#34;*&amp;#34;] verbs: [&amp;#34;get&amp;#34;, &amp;#34;list&amp;#34;, &amp;#34;watch&amp;#34;] --- apiVersion: v1 kind: ServiceAccount metadata: name: my-service-account namespace: my-namespace --- kind: RoleBinding apiVersion: rbac.authorization.k8s.io/v1beta1 metadata: name: my-namespace-role-binding--read-only namespace: my-namespace roleRef: apiGroup: rbac.authorization.k8s.io kind: Role name: my-namespace-role--read-only subjects: - apiGroup: rbac.authorization.k8s.io kind: ServiceAccount name: my-service-account namespace: my-namespace - apiGroup: rbac.authorization.k8s.io kind: User name: my-user - apiGroup: rbac.</description></item><item><title>redirect.conf</title><link>https://hellupline.dev/docs/cloud/nginx/redirect.conf/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/cloud/nginx/redirect.conf/</guid><description> Download map $request_uri $new_uri { /my-app/ &amp;#34;https://my-app.com&amp;#34;; /my-app &amp;#34;https://my-app.com&amp;#34;; default &amp;#34;https://github.com/hellupline&amp;#34;; } server { server_name _; listen [::]:80 default_server ipv6only=on; listen 80 default_server; access_log /var/log/nginx/access.log main; return 301 $new_uri; }</description></item><item><title>ryu</title><link>https://hellupline.dev/docs/scripts/toys/ryu/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/scripts/toys/ryu/</guid><description>Download #!/bin/bash # s y n t a x . s a m u r a i # p r e s e n t s # # ███████ ██ ██ ██ ██ # ░██░░░░██ ░░██ ██ ░██ ░██ # ░██ ░██ ░░████ ░██ ░██ # ░███████ ░░██ ░██ ░██ # ░██░░░██ ░██ ░██ ░██ # ░██ ░░██ ░██ ░██ ░██ # ░██ ░░██ ░██ ░░███████ # ░░ ░░ ░░ ░░░░░░░ # # ansi art of ryu hayabusa from ninja gaiden # # ▓▓▓▓▓▓▓▓▓▓ # ░▓ author ▓ xero &amp;lt;x@xero.</description></item><item><title>screenshot</title><link>https://hellupline.dev/docs/scripts/utils/screenshot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/scripts/utils/screenshot/</guid><description>Download #!/bin/sh # Usage: # $ screenshot [selection|window|all] [&amp;#34;~/pictures/screenshots&amp;#34;] # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist UTCNOW=$(date &amp;#39;+%Y-%m-%dT%T%z&amp;#39;) TYPE=&amp;#34;${1:-selection}&amp;#34; DIRECTORY=&amp;#34;${2:-${HOME}/pictures/screenshots/}&amp;#34; FILENAME=&amp;#34;${DIRECTORY}/${UTCNOW}.png&amp;#34; case &amp;#34;${TYPE}&amp;#34; in &amp;#34;selection&amp;#34;) maim --highlight --color=1.0,1.0,1.0,0.5 --hidecursor \ --select &amp;#34;${FILENAME}&amp;#34; ;; &amp;#34;window&amp;#34;) maim --highlight --color=&amp;#39;1.0,1.0,1.0,0.5&amp;#39; --hidecursor \ --window &amp;#34;$(xdotool getactivewindow)&amp;#34; &amp;#34;${FILENAME}&amp;#34; ;; &amp;#34;all&amp;#34;) maim --highlight --color=1.</description></item><item><title>secret.yaml</title><link>https://hellupline.dev/docs/cloud/kubernetes/secret.yaml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/cloud/kubernetes/secret.yaml/</guid><description> Download --- apiVersion: v1 kind: Secret metadata: labels: {app: my-app} name: my-app-secret namespace: my-namespace type: Opaque stringData: SECRET_ENV: my-secret-env-value SECRET_FILE: | { &amp;#34;key_01&amp;#34;: &amp;#34;value_02&amp;#34;, &amp;#34;key_02&amp;#34;: &amp;#34;value_02&amp;#34;, }</description></item><item><title>service-dns.yaml</title><link>https://hellupline.dev/docs/cloud/kubernetes/service-dns.yaml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/cloud/kubernetes/service-dns.yaml/</guid><description> Download --- apiVersion: v1 kind: Service metadata: labels: {app: my-app} name: my-app-service namespace: my-namespace spec: type: ExternalName externalName: my.database.example.com</description></item><item><title>service-endpoint.yaml</title><link>https://hellupline.dev/docs/cloud/kubernetes/service-endpoint.yaml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/cloud/kubernetes/service-endpoint.yaml/</guid><description> Download --- apiVersion: v1 kind: Service metadata: labels: {app: my-app} name: my-app-service namespace: my-namespace spec: ports: - {name: http, protocol: TCP, port: 80, targetPort: 80} --- apiVersion: v1 kind: Endpoints metadata: labels: {app: my-app} name: my-app-service namespace: my-namespace subsets: - addresses: - ip: 192.0.2.42 ports: - port: 9376</description></item><item><title>service.yaml</title><link>https://hellupline.dev/docs/cloud/kubernetes/service.yaml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/cloud/kubernetes/service.yaml/</guid><description> Download --- apiVersion: v1 kind: Service metadata: labels: {app: my-app} name: my-app-service namespace: my-namespace spec: type: ClusterIP externalTrafficPolicy: Local selector: {app: my-app} ports: - {name: http, protocol: TCP, port: 80, targetPort: 80}</description></item><item><title>show-certs</title><link>https://hellupline.dev/docs/scripts/utils/show-certs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/scripts/utils/show-certs/</guid><description> Download #!/bin/sh # Usage: # show-certs &amp;#34;hellupline.dev&amp;#34; # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist die () { echo &amp;gt;&amp;amp;2 &amp;#34;$@&amp;#34; exit 1 } [ &amp;#34;$#&amp;#34; -eq 1 ] || die &amp;#34;1 argument required, $#provided&amp;#34; DOMAIN=&amp;#34;${1}&amp;#34; echo | openssl s_client -servername ${DOMAIN} -connect ${DOMAIN}:443 -showcerts | openssl x509 -text</description></item><item><title>simple-https</title><link>https://hellupline.dev/docs/scripts/utils/simple-https/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/scripts/utils/simple-https/</guid><description> Download #! /usr/bin/env python3 from http.server import HTTPServer, SimpleHTTPRequestHandler from functools import partial from ssl import wrap_socket CERT_FILE = &amp;#34;tls-certs/service.pem&amp;#34; DIRECTORY = &amp;#34;./&amp;#34; handler = partial(SimpleHTTPRequestHandler, directory=DIRECTORY) httpd = HTTPServer((&amp;#34;localhost&amp;#34;, 4443), handler) httpd.socket = wrap_socket(httpd.socket, certfile=CERT_FILE, server_side=True) httpd.serve_forever()</description></item><item><title>skull</title><link>https://hellupline.dev/docs/scripts/toys/skull/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/scripts/toys/skull/</guid><description>Download #!/bin/bash f=3 b=4 for j in f b; do for i in {0..7}; do printf -v $j$i %b &amp;#34;\e[${!j}${i}m&amp;#34; done done bld=$&amp;#39;\e[1m&amp;#39; rst=$&amp;#39;\e[0m&amp;#39; inv=$&amp;#39;\e[7m&amp;#39; cat &amp;lt;&amp;lt; EOF $f4 ...----.... $f4 ..-:&amp;#34;&amp;#39;&amp;#39; &amp;#39;&amp;#39;&amp;#34;-.. $f4 .-&amp;#39; &amp;#39;-. $f4 .&amp;#39; . . &amp;#39;. $f4 .&amp;#39; . . . . .&amp;#39;&amp;#39;. $f4 .&amp;#39; . . . . . . . ..:. $f4 .&amp;#39; . . . . . . .. .</description></item><item><title>slendy</title><link>https://hellupline.dev/docs/scripts/toys/slendy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/scripts/toys/slendy/</guid><description> Download #!/bin/sh initializeANSI() { esc=&amp;#34;&amp;#34; blackf=&amp;#34;${esc}[30m&amp;#34;; redf=&amp;#34;${esc}[31m&amp;#34;; greenf=&amp;#34;${esc}[32m&amp;#34; yellowf=&amp;#34;${esc}[33m&amp;#34; bluef=&amp;#34;${esc}[34m&amp;#34;; purplef=&amp;#34;${esc}[35m&amp;#34; cyanf=&amp;#34;${esc}[36m&amp;#34;; whitef=&amp;#34;${esc}[37m&amp;#34; blackb=&amp;#34;${esc}[40m&amp;#34;; redb=&amp;#34;${esc}[41m&amp;#34;; greenb=&amp;#34;${esc}[42m&amp;#34; yellowb=&amp;#34;${esc}[43m&amp;#34; blueb=&amp;#34;${esc}[44m&amp;#34;; purpleb=&amp;#34;${esc}[45m&amp;#34; cyanb=&amp;#34;${esc}[46m&amp;#34;; whiteb=&amp;#34;${esc}[47m&amp;#34; boldon=&amp;#34;${esc}[1m&amp;#34;; boldoff=&amp;#34;${esc}[22m&amp;#34; italicson=&amp;#34;${esc}[3m&amp;#34;; italicsoff=&amp;#34;${esc}[23m&amp;#34; ulon=&amp;#34;${esc}[4m&amp;#34;; uloff=&amp;#34;${esc}[24m&amp;#34; invon=&amp;#34;${esc}[7m&amp;#34;; invoff=&amp;#34;${esc}[27m&amp;#34; reset=&amp;#34;${esc}[0m&amp;#34; } initializeANSI cat &amp;lt;&amp;lt; EOF ${reset}${blackf}| | | | |${reset} ${redf}█ █${reset} ${blackf}|${reset} ${greenf}█ █${reset} ${blackf}|${reset} ${yellowf}█ █${reset} ${blackf}|${reset} ${bluef}█ █${reset} ${blackf}|${reset} ${purplef}█ █${reset} ${blackf}|${reset} ${cyanf}█ █${reset} ${redf}███████${reset} ${blackf}|${reset} ${greenf}███████${reset} ${blackf}|${reset} ${yellowf}███████${reset} ${blackf}|${reset} ${bluef}███████${reset} ${blackf}|${reset} ${purplef}███████${reset} ${blackf}|${reset} ${cyanf}███████${reset} ${redf}███${boldon}${redb}██${reset}${redf}█${boldon}${redb}██${reset}${redf}███${reset} ${blackf}|${reset} ${greenf}███${boldon}${greenb}██${reset}${greenf}█${boldon}${greenb}██${reset}${greenf}███${reset} ${blackf}|${reset} ${yellowf}███${boldon}${yellowb}██${reset}${yellowf}█${boldon}${yellowb}██${reset}${yellowf}███${reset} ${blackf}|${reset} ${bluef}███${boldon}${blueb}██${reset}${bluef}█${boldon}${blueb}██${reset}${bluef}███${reset} ${blackf}|${reset} ${purplef}███${boldon}${purpleb}██${reset}${purplef}█${boldon}${purpleb}██${reset}${purplef}███${reset} ${blackf}|${reset} ${cyanf}███${boldon}${cyanb}██${reset}${cyanf}█${boldon}${cyanb}██${reset}${cyanf}███${reset} ${redf}████${boldon}${redb}█${reset}${redf}████${reset} ${blackf}|${reset} ${greenf}████${boldon}${greenb}█${reset}${greenf}████${reset} ${blackf}|${reset} ${yellowf}████${boldon}${yellowb}█${reset}${yellowf}████${reset} ${blackf}|${reset} ${bluef}████${boldon}${blueb}█${reset}${bluef}████${reset} ${blackf}|${reset} ${purplef}████${boldon}${purpleb}█${reset}${purplef}████${reset} ${blackf}|${reset} ${cyanf}████${boldon}${cyanb}█${reset}${cyanf}████${reset} ${redf}█ █ ${boldon}█${reset} ${redf}█ █${reset} ${blackf}|${reset} ${greenf}█ █ ${boldon}█${reset} ${greenf}█ █${reset} ${blackf}|${reset} ${yellowf}█ █ ${boldon}█${reset} ${yellowf}█ █${reset} ${blackf}|${reset} ${bluef}█ █ ${boldon}█${reset} ${bluef}█ █${reset} ${blackf}|${reset} ${purplef}█ █ ${boldon}█${reset} ${purplef}█ █${reset} ${blackf}|${reset} ${cyanf}█ █ ${boldon}█${reset} ${cyanf}█ █${reset} ${redf}█ █${reset} ${blackf}|${reset} ${greenf}█ █${reset} ${blackf}|${reset} ${yellowf}█ █${reset} ${blackf}|${reset} ${bluef}█ █${reset} ${blackf}|${reset} ${purplef}█ █${reset} ${blackf}|${reset} ${cyanf}█ █${reset} ${blackf}| | | | |${reset} EOF</description></item><item><title>spotifyctl</title><link>https://hellupline.dev/docs/scripts/utils/spotifyctl/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/scripts/utils/spotifyctl/</guid><description>Download #!/bin/sh # Usage: # $ spotifyctl # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist die () { echo &amp;gt;&amp;amp;2 &amp;#34;$@&amp;#34; exit 1 } [ &amp;#34;$#&amp;#34; -eq 1 ] || die &amp;#34;1 argument required, $#provided&amp;#34; COMMAND=&amp;#34;${1}&amp;#34; [ &amp;#34;$(pidof spotify)&amp;#34; != &amp;#34;&amp;#34; ] || die &amp;#34;Spotify not running!&amp;#34; case &amp;#34;${COMMAND}&amp;#34; in &amp;#34;play&amp;#34;|&amp;#34;pause&amp;#34;|&amp;#34;playpause&amp;#34;) dbus-send --print-reply --dest=org.</description></item><item><title>statefulset.yaml</title><link>https://hellupline.dev/docs/cloud/kubernetes/statefulset.yaml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/cloud/kubernetes/statefulset.yaml/</guid><description> Download --- apiVersion: apps/v1 kind: StatefulSet metadata: labels: {app: my-app} name: my-app namespace: my-namespace spec: selector: {matchLabels: {app: my-app}} replicas: 3 serviceName: my-app template: metadata: {labels: {app: my-app}} spec: containers: - name: my-app image: nginx volumeMounts: - {name: my-app-data, mountPath: &amp;#34;/usr/share/nginx/html&amp;#34;} volumeClaimTemplates: - metadata: {name: my-app-data} spec: selector: {matchLabels: {app: my-app}} resources: {requests: {storage: 1Gi}} accessModes: [ReadWriteOnce]</description></item><item><title>static-site.conf</title><link>https://hellupline.dev/docs/cloud/nginx/static-site.conf/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/cloud/nginx/static-site.conf/</guid><description> Download server { server_name _; listen [::]:80 default_server ipv6only=on; listen 80 default_server; access_log /var/log/nginx/access.log main; sendfile on; sendfile_max_chunk 1m; tcp_nopush on; gzip on; gzip_min_length 1; gzip_types application/xml text/plain; root /usr/share/nginx/html; location / { try_files $uri $uri/ $uri.html =404; index index.html index.htm; } location /public/ { autoindex on; } error_page 404 /404.html; location = /404.html { internal; } error_page 500 502 503 504 /50x.html; location = /50x.html { internal; } }</description></item><item><title>tabular</title><link>https://hellupline.dev/docs/scripts/utils/tabular/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/scripts/utils/tabular/</guid><description> Download #!/bin/sh # Usage: # $ cat data.tsv | tabular &amp;#34;|&amp;#34; # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist SEPARATOR=&amp;#34;${1:-|}&amp;#34; column -t -s &amp;#34;${SEP}&amp;#34; | less</description></item><item><title>utcnow</title><link>https://hellupline.dev/docs/scripts/utils/utcnow/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/scripts/utils/utcnow/</guid><description> Download #!/bin/sh # Usage: # $ utcnow # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist date &amp;#39;+%Y-%m-%dT%T%z&amp;#39;</description></item><item><title>Utils</title><link>https://hellupline.dev/docs/knowledge/commands/utils/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/knowledge/commands/utils/</guid><description>Prettify JSON python -m json.tool Simple SMTP Debug Server sudo python -m smtpd -n -c DebuggingServer localhost:25 Simple HTTP Server python -m http.server Rsync rsync --verbose --human-readable --progress --stats --partial --archive \ --exclude &amp;#39;stuff/_data&amp;#39; \ -- &amp;#39;SOURCE_OBJECT_1&amp;#39; &amp;#39;SOURCE_OBJECT_2&amp;#39; &amp;#39;SOURCE_OBJECT_3&amp;#39; &amp;#39;TARGET&amp;#39; Random Password openssl rand -base64 33 Date # RFC-3339 date --date=&amp;#39;1991-01-22 19:00:00 +300&amp;#39; date --rfc-3339=seconds # Timestamp date --date=&amp;#39;@664581600&amp;#39; date &amp;#39;+%s&amp;#39; # Relative date --date=&amp;#34;next Friday&amp;#34; date --date=&amp;#34;2 days ago&amp;#34; Download audio from video youtube-dl \ --audio-format mp3 \ --audio-quality 320k \ --extract-audio Stream desktop to address ffmpeg -f x11grab -s 1600x900 -framerate 15 -i :0.</description></item><item><title>volume-cloud.yaml</title><link>https://hellupline.dev/docs/cloud/kubernetes/volume-cloud.yaml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/cloud/kubernetes/volume-cloud.yaml/</guid><description> Download --- apiVersion: v1 kind: PersistentVolumeClaim metadata: name: my-pvc spec: resources: requests: {storage: 3Gi} accessModes: [ReadWriteOnce]</description></item><item><title>volume-local-disk.yaml</title><link>https://hellupline.dev/docs/cloud/kubernetes/volume-local-disk.yaml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/cloud/kubernetes/volume-local-disk.yaml/</guid><description> Download --- apiVersion: v1 kind: PersistentVolume metadata: labels: {app: my-app} name: my-pv namespace: my-namespace spec: storageClassName: manual hostPath: {path: &amp;#34;/opt/volumes/my-pv&amp;#34;} capacity: {storage: 10Gi} accessModes: [ReadWriteOnce] --- apiVersion: v1 kind: PersistentVolumeClaim metadata: labels: {app: my-app} name: my-pvc namespace: my-namespace spec: storageClassName: manual selector: {matchLabels: {type: my-app}} resources: requests: {storage: 10Gi} accessModes: [ReadWriteOnce]</description></item><item><title>wallpapers</title><link>https://hellupline.dev/docs/scripts/utils/wallpapers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/docs/scripts/utils/wallpapers/</guid><description> Download #!/bin/sh # Usage: # $ wallpapers # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist SOURCES=( ~/wallpapers/artstation ~/wallpapers/meh.ro ) SLEEP=&amp;#34;60&amp;#34; while true; do feh --recursive --randomize --bg-max --no-fehbg \ ${SOURCES[@]} sleep &amp;#34;${SLEEP}&amp;#34; done</description></item><item><title>(Hu)go Template Primer</title><link>https://hellupline.dev/posts/goisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://hellupline.dev/posts/goisforlovers/</guid><description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description></item><item><title>Getting Started with Hugo</title><link>https://hellupline.dev/posts/hugoisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://hellupline.dev/posts/hugoisforlovers/</guid><description>Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313 Corresponding pseudo commands:</description></item></channel></rss>
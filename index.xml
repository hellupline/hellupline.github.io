<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Welcome to the Index on HellUpLine Haematite Stuffs</title><link>https://hellupline.dev/</link><description>Recent content in Welcome to the Index on HellUpLine Haematite Stuffs</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://hellupline.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>echoserver.go</title><link>https://hellupline.dev/scripts/golang/echoserver.go/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/golang/echoserver.go/</guid><description>Download package main import ( &amp;#34;fmt&amp;#34; &amp;#34;io&amp;#34; &amp;#34;log&amp;#34; &amp;#34;net/http&amp;#34; &amp;#34;os&amp;#34; ) func main() { // curl -SsLD- -X POST -H &amp;#39;Content-Type: text/plain&amp;#39; -d $&amp;#39;hello\n&amp;#39; &amp;#39;http://localhost:8080/hello?a=1&amp;amp;a=2&amp;#39; // curl -SsLD- -X POST -F b=3 &amp;#39;http://localhost:8080/hello?a=1&amp;amp;a=2&amp;#39; http.HandleFunc(&amp;#34;/&amp;#34;, func(w http.ResponseWriter, r *http.Request) { writer := io.MultiWriter(os.Stdout, w) fmt.Print(&amp;#34;\033[2J\033[H&amp;#34;) fmt.Fprintln(writer, &amp;#34;url:\n````&amp;#34;) fmt.Fprintf(writer, &amp;#34;\t%+v\n&amp;#34;, r.URL) fmt.Fprintln(writer, &amp;#34;```\n\nheaders:\n```&amp;#34;) for k, v := range r.Header { fmt.Fprintln(writer, &amp;#34;\t&amp;#34;, k, v) } fmt.Fprintln(writer, &amp;#34;```\n\nquerystring:\n````&amp;#34;) for k, v := range r.</description></item><item><title>kubectl-context-list</title><link>https://hellupline.dev/scripts/kubernetes/kubectl-context-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/kubernetes/kubectl-context-list/</guid><description> Download #!/bin/sh # Usage: # $ kubectl context list # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist kubectl config get-contexts -o name</description></item><item><title>metroid</title><link>https://hellupline.dev/scripts/toys/metroid/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/toys/metroid/</guid><description> Download #!/bin/sh # # metroid: a metroid ascii banner generator # MMXVI xero (http://xero.nu) usage() { printf &amp;#34;usage: `basename $0` \n\ [-m --mini mini] \n\ [-s --super super] \n\ [-t --text text] \n\ [-n --normal normal] \n\ [-h --help help]\n&amp;#34; } text() { printf &amp;#34;\n .___.\n / @ \ \n \ @ @ /\n {&amp;#39;^&amp;#39;}\n\n&amp;#34; } mini() { cat &amp;lt;&amp;lt; METROID [38;5;16m▄[m[38;5;16m▄[m[48;5;16m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16m [m[38;5;16m▄[m[38;5;16m▄[m [38;5;16m▄[m[48;5;16m [m[48;5;77;38;5;16m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;196;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;77;38;5;16m▀[m[48;5;16m [m[38;5;16m▄[m [38;5;16m▄[m[48;5;16m [m[48;5;77;38;5;16m▀[m[48;5;16;38;5;77m▀[m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;196m▀[m[48;5;196;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;77m▀[m[48;5;77;38;5;16m▀[m[48;5;16m [m[38;5;16m▄[m [48;5;16m [m[48;5;77;38;5;16m▀[m[48;5;16;38;5;77m▀[m[48;5;16m [m[48;5;16m [m[48;5;223;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196m [m[48;5;196m [m[48;5;196m [m[48;5;196m [m[48;5;196m [m[48;5;196m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;77m▀[m[48;5;77;38;5;16m▀[m[48;5;16m [m [38;5;16m▄[m[48;5;16m [m[48;5;77;38;5;16m▀[m[48;5;16;38;5;77m▀[m[48;5;16m [m[48;5;223;38;5;16m▀[m[48;5;223m [m[48;5;16;38;5;223m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;16m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;77m▀[m[48;5;77;38;5;16m▀[m[48;5;16m [m[38;5;16m▄[m [38;5;16m▄[m[48;5;16m [m[48;5;77m [m[48;5;16m [m[48;5;16m [m[48;5;223m [m[48;5;16;38;5;223m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;77m [m[48;5;16m [m[38;5;16m▄[m [48;5;16m [m[48;5;77m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;16m▀[m[48;5;223;38;5;196m▀[m[48;5;223;38;5;196m▀[m[48;5;223;38;5;196m▀[m[48;5;196;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;77m [m[48;5;16m [m [48;5;16m [m[48;5;77m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196m [m[48;5;196m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16;38;5;196m▀[m[48;5;77m [m[48;5;16m [m[38;5;16m▄[m [48;5;16m [m[48;5;77m [m[48;5;196;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196m [m[48;5;196m [m[48;5;196m [m[48;5;196m [m[48;5;16m [m[48;5;196;38;5;16m▀[m[48;5;223;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16;38;5;196m▀[m[48;5;196;38;5;223m▀[m[48;5;196;38;5;223m▀[m[48;5;196;38;5;223m▀[m[48;5;16;38;5;196m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;223;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;16m▀[m[48;5;196m [m[48;5;196m [m[48;5;16;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;77m [m[48;5;16m [m [48;5;16m [m[48;5;77m [m[48;5;16m [m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196m [m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;223;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;223;38;5;196m▀[m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;196m [m[48;5;16m [m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;77m [m[48;5;16m [m [48;5;16m [m[48;5;77m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;196m▀[m[48;5;196;38;5;223m▀[m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;196;38;5;223m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;223m▀[m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;196;38;5;223m▀[m[48;5;16;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77m [m[48;5;16m [m [48;5;16m [m[48;5;77m [m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;77m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77m [m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;77m [m[48;5;16m [m [38;5;16m▀[m[48;5;16;38;5;77m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;196m [m[48;5;196m [m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;77m [m[48;5;77m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77m [m[48;5;77m [m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196m [m[48;5;196m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16;38;5;77m▀[m[38;5;16m▀[m [38;5;16m▀[m[38;5;16m▀[m[48;5;16m [m[48;5;223m [m[48;5;196m [m[48;5;196m [m[48;5;196m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;77m [m[48;5;77m [m[48;5;77m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77m [m[48;5;77m [m[48;5;77m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196m [m[48;5;196m [m[48;5;196m [m[48;5;223m [m[48;5;16m [m[38;5;16m▀[m[38;5;16m▀[m [48;5;16m [m[48;5;16;38;5;223m▀[m[48;5;223;38;5;196m▀[m[48;5;196m [m[48;5;16m [m[48;5;16m [m [48;5;16m [m[48;5;223m [m[48;5;223;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;77m▀[m[48;5;77m [m[48;5;77m [m[48;5;77m [m[48;5;16;38;5;77m▀[m[48;5;16m [m[48;5;16m [m[48;5;223;38;5;16m▀[m[48;5;223m [m[48;5;16m [m [48;5;16m [m[48;5;16m [m[48;5;196m [m[48;5;223;38;5;196m▀[m[48;5;16;38;5;223m▀[m[48;5;16m [m [38;5;16m▀[m[48;5;16m [m[48;5;16;38;5;223m▀[m[48;5;223m [m[48;5;16m [m [48;5;16m [m[48;5;223m [m[48;5;16m [m[48;5;16m [m [38;5;16m▀[m[38;5;16m▀[m[38;5;16m▀[m[38;5;16m▀[m[38;5;16m▀[m [48;5;16m [m[48;5;16m [m[48;5;223m [m[48;5;16m [m [48;5;16m [m[48;5;223m [m[48;5;16;38;5;223m▀[m[48;5;16m [m[38;5;16m▀[m [38;5;16m▀[m[38;5;16m▀[m[38;5;16m▀[m [38;5;16m▀[m[48;5;16m [m[48;5;16;38;5;223m▀[m[48;5;16m [m [48;5;16m [m[48;5;16;38;5;223m▀[m[48;5;16m [m[38;5;16m▀[m [38;5;16m▀[m[38;5;16m▀[m[38;5;16m▀[m METROID } super() { cat &amp;lt;&amp;lt; METROID [38;5;28m▄[m[38;5;64m▄[m[38;5;106m▄[m[48;5;112;38;5;22m▀[m[48;5;113;38;5;22m▀[m[48;5;107;38;5;22m▀[m[48;5;107;38;5;22m▀[m[48;5;107;38;5;22m▀[m[48;5;107;38;5;22m▀[m[48;5;113;38;5;22m▀[m[48;5;112;38;5;22m▀[m[38;5;106m▄[m[38;5;64m▄[m[38;5;28m▄[m [38;5;22m▄[m[38;5;70m▄[m[48;5;150;38;5;28m▀[m[48;5;106;38;5;107m▀[m[48;5;28;38;5;113m▀[m[48;5;16;38;5;107m▀[m[48;5;22;38;5;70m▀[m[48;5;70;38;5;64m▀[m[48;5;113;38;5;28m▀[m[48;5;113;38;5;28m▀[m[48;5;149;38;5;28m▀[m[48;5;149;38;5;28m▀[m[48;5;113;38;5;28m▀[m[48;5;113;38;5;28m▀[m[48;5;70;38;5;64m▀[m[48;5;22;38;5;70m▀[m[48;5;16;38;5;107m▀[m[48;5;28;38;5;113m▀[m[48;5;106;38;5;107m▀[m[48;5;150;38;5;28m▀[m[38;5;70m▄[m[38;5;22m▄[m [38;5;22m▄[m[48;5;113;38;5;22m▀[m[48;5;148;38;5;113m▀[m[48;5;70;38;5;148m▀[m[48;5;22;38;5;70m▀[m[48;5;101;38;5;64m▀[m[48;5;16;38;5;22m▀[m[48;5;16;38;5;22m▀[m[48;5;16;38;5;22m▀[m[48;5;16;38;5;22m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;22m▀[m[48;5;16;38;5;22m▀[m[48;5;16;38;5;22m▀[m[48;5;16;38;5;22m▀[m[48;5;101;38;5;64m▀[m[48;5;22;38;5;70m▀[m[48;5;70;38;5;148m▀[m[48;5;148;38;5;113m▀[m[48;5;113;38;5;22m▀[m[38;5;22m▄[m [48;5;64;38;5;22m▀[m[48;5;150;38;5;107m▀[m[48;5;70;38;5;150m▀[m[48;5;28;38;5;70m▀[m[48;5;22m [m[48;5;16;38;5;22m▀[m[48;5;52;38;5;22m▀[m[48;5;52;38;5;16m▀[m[48;5;52;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;197;38;5;88m▀[m[48;5;197;38;5;88m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;52;38;5;16m▀[m[48;5;52;38;5;16m▀[m[48;5;52;38;5;22m▀[m[48;5;16;38;5;22m▀[m[48;5;22m [m[48;5;28;38;5;70m▀[m[48;5;70;38;5;150m▀[m[48;5;150;38;5;107m▀[m[48;5;64;38;5;22m▀[m [48;5;28;38;5;22m▀[m[48;5;148;38;5;113m▀[m[48;5;34;38;5;106m▀[m[48;5;22;38;5;28m▀[m[48;5;16;38;5;22m▀[m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;52m▀[m[48;5;88;38;5;160m▀[m[48;5;88;38;5;160m▀[m[48;5;88;38;5;52m▀[m[48;5;52;38;5;16m▀[m[48;5;16m [m[48;5;124;38;5;52m▀[m[48;5;124m [m[48;5;124m [m[48;5;124;38;5;52m▀[m[48;5;16m [m[48;5;52;38;5;16m▀[m[48;5;88;38;5;52m▀[m[48;5;88;38;5;160m▀[m[48;5;88;38;5;160m▀[m[48;5;16;38;5;52m▀[m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;22m▀[m[48;5;22;38;5;28m▀[m[48;5;34;38;5;106m▀[m[48;5;148;38;5;113m▀[m[48;5;28;38;5;22m▀[m [48;5;22m [m[48;5;113;38;5;107m▀[m[48;5;149m [m[48;5;107;38;5;28m▀[m[48;5;64;38;5;22m▀[m[48;5;22;38;5;16m▀[m[48;5;22;38;5;16m▀[m[48;5;22;38;5;16m▀[m[48;5;16m [m[48;5;16;38;5;52m▀[m[48;5;16;38;5;52m▀[m[48;5;16;38;5;52m▀[m[48;5;52m [m[48;5;52;38;5;88m▀[m[48;5;52;38;5;124m▀[m[48;5;124;38;5;168m▀[m[48;5;124;38;5;168m▀[m[48;5;52;38;5;124m▀[m[48;5;52;38;5;88m▀[m[48;5;52m [m[48;5;16;38;5;52m▀[m[48;5;16;38;5;52m▀[m[48;5;16;38;5;52m▀[m[48;5;16m [m[48;5;22;38;5;16m▀[m[48;5;22;38;5;16m▀[m[48;5;22;38;5;16m▀[m[48;5;64;38;5;22m▀[m[48;5;107;38;5;28m▀[m[48;5;149m [m[48;5;113;38;5;107m▀[m[48;5;22m [m [48;5;70;38;5;28m▀[m[48;5;149;38;5;148m▀[m[48;5;34;38;5;70m▀[m[48;5;28;38;5;71m▀[m[48;5;64;38;5;22m▀[m[48;5;16;38;5;22m▀[m[48;5;16m [m[48;5;16m [m[48;5;88;38;5;16m▀[m[48;5;160;38;5;16m▀[m[48;5;88;38;5;16m▀[m[48;5;52;38;5;16m▀[m[48;5;52m [m[48;5;52;38;5;124m▀[m[48;5;52;38;5;88m▀[m[48;5;124;38;5;88m▀[m[48;5;124;38;5;88m▀[m[48;5;52;38;5;88m▀[m[48;5;52;38;5;124m▀[m[48;5;52m [m[48;5;52;38;5;16m▀[m[48;5;88;38;5;16m▀[m[48;5;160;38;5;16m▀[m[48;5;88;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;22m▀[m[48;5;64;38;5;22m▀[m[48;5;28;38;5;71m▀[m[48;5;34;38;5;70m▀[m[48;5;149;38;5;148m▀[m[48;5;70;38;5;28m▀[m [48;5;22;38;5;70m▀[m[48;5;149m [m[48;5;28m [m[48;5;22;38;5;16m▀[m[48;5;16;38;5;22m▀[m[48;5;22;38;5;64m▀[m[48;5;124;38;5;16m▀[m[48;5;88;38;5;52m▀[m[48;5;124;38;5;160m▀[m[48;5;88;38;5;197m▀[m[48;5;52;38;5;124m▀[m[48;5;160;38;5;88m▀[m[48;5;124;38;5;160m▀[m[48;5;52m [m[48;5;16;38;5;52m▀[m[48;5;16;38;5;52m▀[m[48;5;16;38;5;52m▀[m[48;5;16;38;5;52m▀[m[48;5;52m [m[48;5;124;38;5;160m▀[m[48;5;160;38;5;88m▀[m[48;5;52;38;5;124m▀[m[48;5;88;38;5;197m▀[m[48;5;124;38;5;160m▀[m[48;5;88;38;5;52m▀[m[48;5;124;38;5;16m▀[m[48;5;22;38;5;64m▀[m[48;5;16;38;5;22m▀[m[48;5;22;38;5;16m▀[m[48;5;28m [m[48;5;149m [m[48;5;22;38;5;70m▀[m [48;5;16;38;5;22m▀[m[48;5;113;38;5;149m▀[m[48;5;112;38;5;70m▀[m[48;5;22m [m[48;5;22;38;5;16m▀[m[48;5;22;38;5;16m▀[m[48;5;16;38;5;88m▀[m[48;5;22;38;5;52m▀[m[48;5;28;38;5;88m▀[m[48;5;28;38;5;16m▀[m[48;5;28;38;5;52m▀[m[48;5;22;38;5;124m▀[m[48;5;16;38;5;52m▀[m[48;5;16;38;5;52m▀[m[48;5;52;38;5;16m▀[m[48;5;124m [m[48;5;124m [m[48;5;52;38;5;16m▀[m[48;5;16;38;5;52m▀[m[48;5;16;38;5;52m▀[m[48;5;22;38;5;124m▀[m[48;5;28;38;5;52m▀[m[48;5;28;38;5;16m▀[m[48;5;28;38;5;88m▀[m[48;5;22;38;5;52m▀[m[48;5;16;38;5;88m▀[m[48;5;22;38;5;16m▀[m[48;5;22;38;5;16m▀[m[48;5;22m [m[48;5;112;38;5;70m▀[m[48;5;113;38;5;149m▀[m[48;5;16;38;5;22m▀[m [48;5;28;38;5;70m▀[m[48;5;150;38;5;149m▀[m[48;5;112;38;5;34m▀[m[48;5;70;38;5;28m▀[m[48;5;149;38;5;28m▀[m[48;5;112;38;5;107m▀[m[48;5;64;38;5;149m▀[m[48;5;28;38;5;150m▀[m[48;5;64;38;5;149m▀[m[48;5;28;38;5;150m▀[m[48;5;106;38;5;112m▀[m[48;5;112;38;5;28m▀[m[48;5;70;38;5;22m▀[m[48;5;22;38;5;88m▀[m[48;5;22;38;5;52m▀[m[48;5;22;38;5;52m▀[m[48;5;22;38;5;88m▀[m[48;5;70;38;5;22m▀[m[48;5;112;38;5;28m▀[m[48;5;106;38;5;112m▀[m[48;5;28;38;5;150m▀[m[48;5;64;38;5;149m▀[m[48;5;28;38;5;150m▀[m[48;5;64;38;5;149m▀[m[48;5;112;38;5;107m▀[m[48;5;149;38;5;28m▀[m[48;5;70;38;5;28m▀[m[48;5;112;38;5;34m▀[m[48;5;150;38;5;149m▀[m[48;5;28;38;5;70m▀[m [48;5;22;38;5;70m▀[m[48;5;70;38;5;150m▀[m[48;5;22;38;5;149m▀[m[48;5;16;38;5;70m▀[m[48;5;52;38;5;22m▀[m[48;5;94;38;5;101m▀[m[48;5;94;38;5;101m▀[m[48;5;143;38;5;94m▀[m[48;5;137;38;5;94m▀[m[48;5;52;38;5;22m▀[m[48;5;22;38;5;70m▀[m[48;5;70;38;5;148m▀[m[48;5;112;38;5;70m▀[m[48;5;106;38;5;28m▀[m[48;5;106;38;5;28m▀[m[48;5;112;38;5;70m▀[m[48;5;70;38;5;148m▀[m[48;5;22;38;5;70m▀[m[48;5;52;38;5;22m▀[m[48;5;137;38;5;94m▀[m[48;5;143;38;5;94m▀[m[48;5;94;38;5;101m▀[m[48;5;94;38;5;101m▀[m[48;5;52;38;5;22m▀[m[48;5;16;38;5;70m▀[m[48;5;22;38;5;149m▀[m[48;5;70;38;5;150m▀[m[48;5;22;38;5;70m▀[m [48;5;16m [m[48;5;94;38;5;16m▀[m[48;5;187;38;5;94m▀[m[48;5;223;38;5;137m▀[m[48;5;94;38;5;52m▀[m[48;5;52m [m[48;5;16;38;5;52m▀[m[48;5;52;38;5;94m▀[m[48;5;180;38;5;94m▀[m[48;5;187;38;5;101m▀[m[48;5;52m [m[48;5;16;38;5;22m▀[m[38;5;113m▀[m[38;5;113m▀[m[48;5;16;38;5;22m▀[m[48;5;52m [m[48;5;187;38;5;101m▀[m[48;5;180;38;5;94m▀[m[48;5;52;38;5;94m▀[m[48;5;16;38;5;52m▀[m[48;5;52m [m[48;5;94;38;5;52m▀[m[48;5;223;38;5;137m▀[m[48;5;187;38;5;94m▀[m[48;5;94;38;5;16m▀[m[48;5;16m [m [48;5;94;38;5;52m▀[m[48;5;186;38;5;144m▀[m[48;5;223;38;5;230m▀[m[48;5;101;38;5;180m▀[m[48;5;16;38;5;52m▀[m[38;5;52m▀[m [48;5;94m [m[48;5;180;38;5;186m▀[m[48;5;52;38;5;101m▀[m[38;5;52m▀[m [38;5;52m▀[m[48;5;52;38;5;101m▀[m[48;5;180;38;5;186m▀[m[48;5;94m [m [38;5;52m▀[m[48;5;16;38;5;52m▀[m[48;5;101;38;5;180m▀[m[48;5;223;38;5;230m▀[m[48;5;186;38;5;144m▀[m[48;5;94;38;5;52m▀[m [48;5;58;38;5;94m▀[m[48;5;180;38;5;186m▀[m[48;5;180;38;5;222m▀[m[48;5;52m [m [38;5;52m▀[m[48;5;52;38;5;101m▀[m[48;5;52m [m [48;5;52m [m[48;5;52;38;5;101m▀[m[38;5;52m▀[m [48;5;52m [m[48;5;180;38;5;222m▀[m[48;5;180;38;5;186m▀[m[48;5;58;38;5;94m▀[m [38;5;52m▀[m[48;5;94;38;5;143m▀[m[48;5;143;38;5;180m▀[m[48;5;58;38;5;52m▀[m [48;5;58;38;5;52m▀[m[48;5;143;38;5;180m▀[m[48;5;94;38;5;143m▀[m[38;5;52m▀[m [38;5;94m▀[m[48;5;52m [m[48;5;52;38;5;16m▀[m [48;5;52;38;5;16m▀[m[48;5;52m [m[38;5;94m▀[m METROID } normal() { cat &amp;lt;&amp;lt; METROID [48;5;16m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16m [m [48;5;16m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16m [m [48;5;16m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16m [m [48;5;16m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16m [m [48;5;16m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16m [m[48;5;16m [m[48;5;223;38;5;16m▀[m[48;5;223;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16m [m [48;5;16m [m[48;5;77m [m[48;5;77m [m[48;5;16m [m[48;5;16m [m[48;5;223;38;5;16m▀[m[48;5;223;38;5;16m▀[m[48;5;223m [m[48;5;223m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16m [m [48;5;16m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;223;38;5;16m▀[m[48;5;223;38;5;16m▀[m[48;5;223m [m[48;5;223m [m[48;5;16;38;5;223m▀[m[48;5;16;38;5;223m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196m [m[48;5;196m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;77m [m[48;5;77m [m[48;5;16m [m [48;5;16m [m[48;5;77m [m[48;5;77m [m[48;5;16m [m[48;5;16m [m[48;5;223m [m[48;5;223m [m[48;5;16;38;5;223m▀[m[48;5;16;38;5;223m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196m [m[48;5;196m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16m [m [48;5;16m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;223m▀[m[48;5;16;38;5;223m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;223;38;5;196m▀[m[48;5;223;38;5;196m▀[m[48;5;223;38;5;196m▀[m[48;5;223;38;5;196m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196m [m[48;5;196m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;77m [m[48;5;77m [m[48;5;16m [m [48;5;16m [m[48;5;77m [m[48;5;77m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;223;38;5;196m▀[m[48;5;223;38;5;196m▀[m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;223;38;5;196m▀[m[48;5;223;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;77m [m[48;5;77m [m[48;5;16m [m [48;5;16m [m[48;5;77m [m[48;5;77m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;223m▀[m[48;5;196;38;5;223m▀[m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;196;38;5;223m▀[m[48;5;196;38;5;223m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196m [m[48;5;196m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16m [m [48;5;16m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;223;38;5;16m▀[m[48;5;223;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;196;38;5;223m▀[m[48;5;196;38;5;223m▀[m[48;5;196;38;5;223m▀[m[48;5;196;38;5;223m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;223;38;5;16m▀[m[48;5;223;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;77m [m[48;5;77m [m[48;5;16m [m [48;5;16m [m[48;5;77m [m[48;5;77m [m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;223;38;5;196m▀[m[48;5;223;38;5;196m▀[m[48;5;223m [m[48;5;223m [m[48;5;223;38;5;196m▀[m[48;5;223;38;5;196m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;223;38;5;196m▀[m[48;5;223;38;5;196m▀[m[48;5;223m [m[48;5;223m [m[48;5;223;38;5;196m▀[m[48;5;223;38;5;196m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;77m [m[48;5;77m [m[48;5;16m [m [48;5;16m [m[48;5;77m [m[48;5;77m [m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196m [m[48;5;196m [m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;223;38;5;196m▀[m[48;5;223;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;223;38;5;196m▀[m[48;5;223;38;5;196m▀[m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;196m [m[48;5;196m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;77m [m[48;5;77m [m[48;5;16m [m [48;5;16m [m[48;5;77m [m[48;5;77m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;196;38;5;223m▀[m[48;5;196;38;5;223m▀[m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;196;38;5;223m▀[m[48;5;196;38;5;223m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;223m▀[m[48;5;196;38;5;223m▀[m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;223m [m[48;5;196;38;5;223m▀[m[48;5;196;38;5;223m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77m [m[48;5;77m [m[48;5;16m [m [48;5;16m [m[48;5;77m [m[48;5;77m [m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;196;38;5;223m▀[m[48;5;196;38;5;223m▀[m[48;5;196;38;5;223m▀[m[48;5;196;38;5;223m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;196;38;5;223m▀[m[48;5;196;38;5;223m▀[m[48;5;196;38;5;223m▀[m[48;5;196;38;5;223m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;77m [m[48;5;77m [m[48;5;16m [m [48;5;16m [m[48;5;77m [m[48;5;77m [m[48;5;16m [m[48;5;16m [m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;77m [m[48;5;77m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77m [m[48;5;77m [m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;77m [m[48;5;77m [m[48;5;16m [m [48;5;16m [m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;196m [m[48;5;196m [m[48;5;196m [m[48;5;196m [m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;77m [m[48;5;77m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77m [m[48;5;77m [m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;196;38;5;16m▀[m[48;5;196;38;5;16m▀[m[48;5;196m [m[48;5;196m [m[48;5;196m [m[48;5;196m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16m [m [48;5;16m [m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;223;38;5;196m▀[m[48;5;223;38;5;196m▀[m[48;5;196m [m[48;5;196m [m[48;5;196m [m[48;5;196m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;77m [m[48;5;77m [m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77;38;5;16m▀[m[48;5;77m [m[48;5;77m [m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;196m [m[48;5;196m [m[48;5;196m [m[48;5;196m [m[48;5;223;38;5;196m▀[m[48;5;223;38;5;196m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16m [m [48;5;16m [m[48;5;223m [m[48;5;223m [m[48;5;196m [m[48;5;196m [m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;16m [m[38;5;16m▀[m[38;5;16m▀[m[48;5;16m [m[48;5;223;38;5;16m▀[m[48;5;223;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;77m [m[48;5;77m [m[48;5;77m [m[48;5;77m [m[48;5;77m [m[48;5;77m [m[48;5;77m [m[48;5;77m [m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16m [m[48;5;16m [m[48;5;223;38;5;16m▀[m[48;5;223;38;5;16m▀[m[48;5;16m [m[38;5;16m▀[m[38;5;16m▀[m[48;5;16m [m[48;5;16;38;5;196m▀[m[48;5;16;38;5;196m▀[m[48;5;196m [m[48;5;196m [m[48;5;223m [m[48;5;223m [m[48;5;16m [m [48;5;16m [m[48;5;16;38;5;223m▀[m[48;5;16;38;5;223m▀[m[48;5;223;38;5;196m▀[m[48;5;223;38;5;196m▀[m[48;5;16m [m[48;5;16m [m[48;5;16m [m [48;5;16m [m[48;5;223m [m[48;5;223m [m[48;5;223;38;5;16m▀[m[48;5;223;38;5;16m▀[m[48;5;16m [m[48;5;16m [m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;77m [m[48;5;77m [m[48;5;77m [m[48;5;77m [m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16m [m[48;5;16m [m[48;5;223;38;5;16m▀[m[48;5;223;38;5;16m▀[m[48;5;223m [m[48;5;223m [m[48;5;16m [m [48;5;16m [m[48;5;16m [m[48;5;16m [m[48;5;223;38;5;196m▀[m[48;5;223;38;5;196m▀[m[48;5;16;38;5;223m▀[m[48;5;16;38;5;223m▀[m[48;5;16m [m [48;5;16m [m[48;5;16;38;5;223m▀[m[48;5;16;38;5;223m▀[m[48;5;223;38;5;16m▀[m[48;5;223;38;5;16m▀[m[48;5;16m [m [48;5;16m [m[48;5;223m [m[48;5;223m [m[48;5;16;38;5;223m▀[m[48;5;16;38;5;223m▀[m[48;5;16m [m [48;5;16m [m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16;38;5;77m▀[m[48;5;16m [m [48;5;16m [m[48;5;16;38;5;223m▀[m[48;5;16;38;5;223m▀[m[48;5;223m [m[48;5;223m [m[48;5;16m [m [48;5;16m [m[48;5;223;38;5;16m▀[m[48;5;223;38;5;16m▀[m[48;5;16;38;5;223m▀[m[48;5;16;38;5;223m▀[m[48;5;16m [m [48;5;16m [m[48;5;16;38;5;223m▀[m[48;5;16;38;5;223m▀[m[48;5;16m [m [48;5;16m [m[48;5;16;38;5;223m▀[m[48;5;16;38;5;223m▀[m[48;5;223;38;5;16m▀[m[48;5;223;38;5;16m▀[m[48;5;16m [m [48;5;16m [m[48;5;223;38;5;16m▀[m[48;5;223;38;5;16m▀[m[48;5;16;38;5;223m▀[m[48;5;16;38;5;223m▀[m[48;5;16m [m [48;5;16m [m[48;5;16;38;5;223m▀[m[48;5;16;38;5;223m▀[m[48;5;16m [m [48;5;16m [m[48;5;16;38;5;223m▀[m[48;5;16;38;5;223m▀[m[48;5;16m [m [48;5;16m [m[48;5;16;38;5;223m▀[m[48;5;16;38;5;223m▀[m[48;5;16m [m METROID } case &amp;#34;$1&amp;#34; in *-m|--mini|mini*) mini ;; *-s|--super|super*) super ;; *-n|--normal|normal) normal ;; *-t|--text|text) text ;; *) text usage ;; esac</description></item><item><title>sysadmin</title><link>https://hellupline.dev/cheatsheet/commands/sysadmin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/cheatsheet/commands/sysadmin/</guid><description>system stats install: sysstat net-tools iotop iftop htop
process stats pidstat -p PID # pidstat -p ALL pidstat -p PID INTERVAL pidstat -p PID INTERVAL QUANTITY pidstat -C NAME # by name # custom stats pidstat -p PID -r # memory pidstat -p PID -u # cpu pidstat -p PID -d # io # formatting pidstat -p PID -t # tree pidstat -p PID -h # horizontal ( for export ) network stats netstat --tcp --udp --listening --program --numeric # netstat -tulpn monitoring tui iotop iftop htop routing table netstat --route --numeric # netstat -rn services manage systemctl enable --now SERVICE # chkconfig SERVICE on systemctl disable --now SERVICE # chkconfig SERVICE off systemctl is-enabled SERVICE # chkconfig SERVICE systemctl daemon-reload # chkconfig SERVICE --add systemctl start SERVICE # service SERVICE start systemctl stop SERVICE # service SERVICE stop systemctl status SERVICE # service SERVICE status systemctl restart SERVICE # service SERVICE restart systemctl reload SERVICE # service SERVICE reload list systemctl list-units --type=service --state=running --all # service --status-all logs journalctl --follow --since=today # tail --follow /var/log/{messages,syslog} journalctl --dmesg journalctl --unit SERVICE journalctl --list-boots journalctl --boot BOOT_ID</description></item><item><title>what is this site</title><link>https://hellupline.dev/articles/what-is-this-site/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/articles/what-is-this-site/</guid><description>This site is my tooltips collection, it is a way to save commands, scripts and config files in a structured way.</description></item><item><title>cached-proxy</title><link>https://hellupline.dev/configurations/nginx/cached-proxy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/configurations/nginx/cached-proxy/</guid><description>Download proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=app_cache:10m; proxy_cache_key &amp;#34;$scheme$request_method$host$request_uri&amp;#34;; server { listen [::]:80 default_server; listen 80 default_server; server_name _; location / { add_header X-Cache-Status $upstream_cache_status; proxy_pass http://localhost:9001; proxy_cache app_cache; proxy_cache_bypass $http_no_cache; } } # server 01 server { listen [::]:9001; listen 9001; server_name _; # nginx will use Cache-Control and expires to manage cache add_header Cache-Control &amp;#34;public&amp;#34;; expires 30d; add_header Content-Type &amp;#34;text/plain&amp;#34;; return 200 &amp;#34;hello world: server 01&amp;#34;; } docker run --detach --name nginx-cached-proxy \ --volume &amp;#34;${PWD}/cached-proxy.</description></item><item><title>deployment</title><link>https://hellupline.dev/configurations/kubernetes/deployment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/configurations/kubernetes/deployment/</guid><description> Download --- apiVersion: apps/v1 kind: Deployment metadata: labels: {app: my-app} name: my-app namespace: my-namespace spec: replicas: 3 minReadySeconds: 30 strategy: type: RollingUpdate rollingUpdate: maxUnavailable: 0 maxSurge: 1 selector: {matchLabels: {app: my-app}} template: metadata: {labels: {app: my-app}} spec: containers: - name: my-app image: nginx</description></item><item><title>food</title><link>https://hellupline.dev/scripts/toys/food/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/toys/food/</guid><description>Download #!/bin/sh # food: {ascii/ansi} art food in your terminal # # ████ ██ # ░██░ ░██ # ██████ ██████ ██████ ░██ # ░░░██░ ██░░░░██ ██░░░░██ ██████ # ░██ ░██ ░██░██ ░██ ██░░░██ # ░██ ░██ ░██░██ ░██░██ ░██ # ░██ ░░██████ ░░██████ ░░██████ # ░░ ░░░░░░ ░░░░░░ ░░░░░░ # # ▓▓▓▓▓▓▓▓▓▓ # ░▓ author ▓ xero &amp;lt;x@xero.nu&amp;gt; # ░▓ code ▓ http://code.xero.nu/dotfiles # ░▓ mirror ▓ http://git.io/.files # ░▓▓▓▓▓▓▓▓▓▓ # ░░░░░░░░░░ usage() { printf &amp;#34;usage: `basename $0` \n\ [--burger burger] curl -L git.</description></item><item><title>ftpython</title><link>https://hellupline.dev/scripts/python/ftpython/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/python/ftpython/</guid><description>Download #!/usr/bin/env python3 # FLASK_APP=ftpython flask run \ # --reload --no-debugger --eager-loading --with-threads \ # --host=127.0.0.1 --port=8080 # python3 -m pip install --user flask # python3 ftpython # from OpenSSL import SSL import os from flask import Flask, flash, request, redirect, url_for from werkzeug.middleware.shared_data import SharedDataMiddleware from werkzeug.utils import secure_filename UPLOAD_FOLDER = os.getcwd() ALLOWED_EXTENSIONS = {&amp;#34;txt&amp;#34;, &amp;#34;pdf&amp;#34;, &amp;#34;png&amp;#34;, &amp;#34;jpg&amp;#34;, &amp;#34;jpeg&amp;#34;, &amp;#34;gif&amp;#34;} FORM_TEMPLATE = &amp;#34;&amp;#34;&amp;#34;&amp;lt;!doctype html&amp;gt;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;Upload new File&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;Upload new File&amp;lt;/h1&amp;gt;&amp;lt;form method=post enctype=multipart/form-data&amp;gt;&amp;lt;input type=file name=file&amp;gt;&amp;lt;input type=submit value=Upload&amp;gt;&amp;lt;/form&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;#34;&amp;#34;&amp;#34; # context = SSL.</description></item><item><title>kubectl-context-set</title><link>https://hellupline.dev/scripts/kubernetes/kubectl-context-set/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/kubernetes/kubectl-context-set/</guid><description> Download #!/bin/sh # Usage: # $ kubectl context set &amp;#34;my-context&amp;#34; # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist die () { echo &amp;gt;&amp;amp;2 &amp;#34;$@&amp;#34; exit 1 } [ &amp;#34;$#&amp;#34; -eq 1 ] || die &amp;#34;1 argument required, $#provided&amp;#34; NAME=&amp;#34;${1}&amp;#34; kubectl config use-context &amp;#34;${NAME}&amp;#34;</description></item><item><title>kubernetes</title><link>https://hellupline.dev/cheatsheet/applications/kubernetes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/cheatsheet/applications/kubernetes/</guid><description>kubernetes plugins Dashboard Repository
Metrics Server Repository
Local Path Provisioner Repository
Proxied Dashboard
Official Cheatsheet
# Dashboard kubectl apply --filename https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-beta3/aio/deploy/recommended.yaml # Metrics Server kubectl apply \ --filename https://raw.githubusercontent.com/kubernetes-incubator/metrics-server/v0.3.3/deploy/1.8%2B/aggregated-metrics-reader.yaml \ --filename https://raw.githubusercontent.com/kubernetes-incubator/metrics-server/v0.3.3/deploy/1.8%2B/auth-delegator.yaml \ --filename https://raw.githubusercontent.com/kubernetes-incubator/metrics-server/v0.3.3/deploy/1.8%2B/auth-reader.yaml \ --filename https://raw.githubusercontent.com/kubernetes-incubator/metrics-server/v0.3.3/deploy/1.8%2B/metrics-apiservice.yaml \ --filename https://raw.githubusercontent.com/kubernetes-incubator/metrics-server/v0.3.3/deploy/1.8%2B/metrics-server-deployment.yaml \ --filename https://raw.githubusercontent.com/kubernetes-incubator/metrics-server/v0.3.3/deploy/1.8%2B/metrics-server-service.yaml \ --filename https://raw.githubusercontent.com/kubernetes-incubator/metrics-server/v0.3.3/deploy/1.8%2B/resource-reader.yaml kubectl get --output jsonpath=&amp;#39;{.status.conditions[*].message}&amp;#39; apiservice v1beta1.metrics.k8s.io # Local Path Provisioner kubectl apply --filename https://raw.githubusercontent.com/rancher/local-path-provisioner/v0.0.9/deploy/local-path-storage.yaml # ServiceAccount Token kubectl -n kube-system get -o json secret \ | jq --raw-output &amp;#39;.</description></item><item><title>make-selfsign-certificate</title><link>https://hellupline.dev/scripts/utils/make-selfsign-certificate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/utils/make-selfsign-certificate/</guid><description> Download #!/bin/bash # Usage: # make-selfsign-certificate &amp;#34;hellupline.dev&amp;#34; # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist DOMAIN=${1:-localhost} mkdir -p tls-certs openssl req -nodes -x509 -sha256 -days 3650 \ -newkey rsa:4096 \ -keyout tls-certs/service.key \ -out tls-certs/service.pem \ -addext &amp;#34;subjectAltName = DNS:${DOMAIN},IP:::1,IP:127.0.0.1&amp;#34; \ -subj &amp;#34;/O=${DOMAIN}/CN=${DOMAIN}&amp;#34;</description></item><item><title>utils</title><link>https://hellupline.dev/cheatsheet/commands/utils/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/cheatsheet/commands/utils/</guid><description>fuck you and everyone around you alarm&amp;hellip; { [ -s ~/.fuckyou.m4a ] || wget -O ~/.fuckyou.m4a https://hellupline.dev/uploads/alarms/c5Ul18ZmBao.m4a; } &amp;amp;&amp;amp; { # play alarm if fail curl -Ss https://if-someone-buys-this-i-will-be-really-pissed || mpv --no-video --loop ~/.fuckyou.m4a ; } math in shell echo &amp;#39;scale=2; days=15; hours=24; minutes=60; seconds=60; result = days * hours * minutes * seconds; result&amp;#39; | bc last exit status echo ${?} prettify json python -m json.tool simple smtp debug server sudo python -m smtpd -n -c DebuggingServer localhost:25 simple http server python -m http.</description></item><item><title>aws</title><link>https://hellupline.dev/cheatsheet/commands/aws/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/cheatsheet/commands/aws/</guid><description>describe ec2 as csv, filter by env==prod beanstalk:environment-name==my-app aws ec2 describe-instances | jq --raw-output &amp;#39; [ .Reservations[].Instances[] | select(.State.Name == &amp;#34;running&amp;#34;) | select((first(.Tags[] | select(.Key == &amp;#34;elasticbeanstalk:environment-name&amp;#34;)).Value ) == &amp;#34;my-app&amp;#34;) | select((first(.Tags[] | select(.Key == &amp;#34;env&amp;#34;)).Value ) == &amp;#34;prod&amp;#34;) | { &amp;#34;Name&amp;#34;: (first(.Tags[]? | select(.Key == &amp;#34;Name&amp;#34;)).Value // &amp;#34;NoName&amp;#34;), &amp;#34;InstanceId&amp;#34;: .InstanceId, &amp;#34;InstanceType&amp;#34;: .InstanceType, &amp;#34;State&amp;#34;: .State.Name, &amp;#34;LaunchTime&amp;#34;: .LaunchTime, &amp;#34;ImageId&amp;#34;: .ImageId, &amp;#34;AvailabilityZone&amp;#34;: .Placement.AvailabilityZone, &amp;#34;IamInstanceProfile&amp;#34;: .IamInstanceProfile.Arn, &amp;#34;SecurityGroupNames&amp;#34;: ([.SecurityGroups[].GroupName] | sort | join(&amp;#34;,&amp;#34;)), &amp;#34;SecurityGroupIds&amp;#34;: ([.</description></item><item><title>colors</title><link>https://hellupline.dev/scripts/toys/colors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/toys/colors/</guid><description> Download #!/bin/bash xdef=&amp;#34;$HOME/.Xdefaults&amp;#34; colors=( $( sed -re &amp;#39;/^!/d; /^$/d; /^#/d; s/(\*color)([0-9]):/\10\2:/g;&amp;#39; $xdef | grep &amp;#39;color[01][0-9]:&amp;#39; | sort | sed &amp;#39;s/^.*: *//g&amp;#39; ) ) echo -e &amp;#34;\e[1;37m Black Red Green Yellow Blue Magenta Cyan White ──────────────────────────────────────────────────────────────────────\e[0m&amp;#34; for i in {0..7}; do echo -en &amp;#34;\e[$((30+$i))m ${colors[i]}\e[0m&amp;#34;; done echo for i in {8..15}; do echo -en &amp;#34;\e[1;$((22+$i))m ${colors[i]}\e[0m&amp;#34;; done echo -e &amp;#34;\n&amp;#34;</description></item><item><title>docker</title><link>https://hellupline.dev/cheatsheet/applications/docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/cheatsheet/applications/docker/</guid><description>run container docker container run --rm --interactive --tty --name=stuff \ --volume=&amp;#34;${PWD}:/data&amp;#34; \ --network=&amp;#34;my_net&amp;#34; \ --publish=&amp;#34;8080:80&amp;#34; \ --env=&amp;#34;CONFIG_VALUE=my-app&amp;#34; \ --env-file=&amp;#34;prod.env&amp;#34; \ --workdir=&amp;#34;/data&amp;#34; \ alpine build docker build --tag my_registry/my_app:my_version --file ./Dockerfile ./ docker push my_registry/my_app:my_version docker tag my_registry/my_app:my_version my_registry/my_app:latest docker push my_registry/my_app:latest multi-stage dockerfile FROMgolang:1.13 as buildWORKDIR/appCOPY ./ ./RUN go build -o my_appFROMalpine:latestRUN apk --no-cache add ca-certificatesWORKDIR/appCOPY --from=builder /app/my_app ./CMD [&amp;#34;./my_app&amp;#34;]volumes docker volume create my_volume docker volume ls docker volume rm my_volume network docker network create my_net docker network ls docker network rm my_net running containers docker container ls docker container logs my_container docker container exec -it my_container my_command docker container attach my_container system docker system events docker system info docker system prune --volumes --all login to aws ecr $(aws ecr get-login --no-include-email)</description></item><item><title>https</title><link>https://hellupline.dev/configurations/nginx/https/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/configurations/nginx/https/</guid><description> Download server { listen [::]:443 default_server ssl http2; listen 443 default_server ssl http2; server_name localhost; ssl_certificate /etc/letsencrypt/live/localhost/fullchain.pem; ssl_certificate_key /etc/letsencrypt/live/localhost/privkey.pem; return 200 &amp;#34;hello world: server 01&amp;#34;; } make-cacert org.local make-cacert-certificate localhost docker run --detach --name nginx-https \ --volume &amp;#34;${PWD}/https.conf:/etc/nginx/conf.d/default.conf&amp;#34; \ --volume &amp;#34;${PWD}/tls-certs/service.pem:/etc/letsencrypt/live/localhost/fullchain.pem&amp;#34; \ --volume &amp;#34;${PWD}/tls-certs/service.pem:/etc/letsencrypt/live/localhost/chain.pem&amp;#34; \ --volume &amp;#34;${PWD}/tls-certs/service.key:/etc/letsencrypt/live/localhost/privkey.pem&amp;#34; \ --publish &amp;#34;4443:443&amp;#34; \ --workdir &amp;#34;/usr/share/nginx/html/&amp;#34; \ nginx curl -SsD- --cacert tls-certs/rootca.cert https://localhost:4443/ docker stop nginx-https docker rm nginx-https</description></item><item><title>kubectl-namespace-list</title><link>https://hellupline.dev/scripts/kubernetes/kubectl-namespace-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/kubernetes/kubectl-namespace-list/</guid><description> Download #!/bin/sh # Usage: # $ kubectl namespace set &amp;#34;my-namespace&amp;#34; # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist kubectl get namespaces</description></item><item><title>make-cacert</title><link>https://hellupline.dev/scripts/utils/make-cacert/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/utils/make-cacert/</guid><description>Download #!/bin/bash # Usage: # make-cacert &amp;#34;hellupline.dev&amp;#34; # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist DOMAIN=${1:-localhost} mkdir -p tls-certs # create rootca certs openssl genrsa -out tls-certs/rootca.key 4096 openssl req -x509 \ -new -nodes -sha256 -days 3650 \ -key tls-certs/rootca.key \ -out tls-certs/rootca.cert \ -subj &amp;#34;/CN=${DOMAIN}/O=${DOMAIN}/OU=${DOMAIN}&amp;#34; # certutil -d sql:$HOME/.</description></item><item><title>pod</title><link>https://hellupline.dev/configurations/kubernetes/pod/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/configurations/kubernetes/pod/</guid><description>Download --- apiVersion: v1 kind: Pod metadata: labels: {app: my-app} name: my-app namespace: my-namespace spec: affinity: # repel same pods in node podAntiAffinity: preferredDuringSchedulingIgnoredDuringExecution: - topologyKey: kubernetes.io/hostname labelSelector: matchExpressions: - {key: app, operator: In, values: [my-app]} # attract cache pods podAffinity: preferredDuringSchedulingIgnoredDuringExecution: - topologyKey: kubernetes.io/hostname labelSelector: matchExpressions: - {key: app, operator: In, values: [my-app-cache]} # resist node taint tags tolerations: - {key: role, operator: Equal, value: worker, effect: NoSchedule} - {key: role, operator: Equal, value: worker, effect: NoExecute} restartPolicy: Always containers: - name: my-app imagePullPolicy: Always image: nginx cmd: [&amp;#34;sh&amp;#34;, &amp;#34;-c&amp;#34;] args: [&amp;#34;echo&amp;#34;, &amp;#34;123&amp;#34;] # pod environment lifecycle: postStart: {exec: {command: [&amp;#34;/bin/sh&amp;#34;, &amp;#34;-c&amp;#34;, &amp;#34;touch /tmp/hello&amp;#34;]}} preStop: {exec: {command: [&amp;#34;/bin/sh&amp;#34;, &amp;#34;-c&amp;#34;, &amp;#34;echo Hello from the preSop handler &amp;gt; /tmp/hello&amp;#34;]}} volumeMounts: - {name: secret-files, mountPath: &amp;#34;/my-app/secret/&amp;#34;, readOnly: true} - {name: config-files, mountPath: &amp;#34;/my-app/config/&amp;#34;, readOnly: true} - {name: volume-files, mountPath: &amp;#34;/my-app/volume/&amp;#34;, readOnly: false} - {name: cached-files, mountPath: &amp;#34;/my-app/cached/&amp;#34;, readOnly: false} ports: - {name: http, containerPort: 80, hostPort: 80} resources: requests: {memory: &amp;#34;32Mi&amp;#34;, cpu: &amp;#34;50m&amp;#34;} limits: {memory: &amp;#34;256Mi&amp;#34;, cpu: &amp;#34;200m&amp;#34;} envFrom: - secretRef: {name: my-app-secret} - configMapRef: {name: my-app-config} env: - {name: SECRET_ENV, valueFrom: {secretKeyRef: {name: my-app-secret, key: SECRET_ENV}}} - {name: CONFIG_ENV, valueFrom: {configMapKeyRef: {name: my-app-config, key: CONFIG_ENV}}} - {name: ENV_NAME, value: &amp;#34;ENV_VALUE&amp;#34;} - {name: POD_NAMESPACE, valueFrom: {fieldRef: {fieldPath: metadata.</description></item><item><title>simple-https</title><link>https://hellupline.dev/scripts/python/simple-https/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/python/simple-https/</guid><description> Download #! /usr/bin/env python3 import http.server import functools import ssl CERT_FILE = &amp;#34;tls-certs/service.pem&amp;#34; KEY_FILE = &amp;#34;tls-certs/service.key&amp;#34; DIRECTORY = &amp;#34;./&amp;#34; handler = functools.partial(http.server.SimpleHTTPRequestHandler, directory=DIRECTORY) httpd = http.server.HTTPServer((&amp;#34;localhost&amp;#34;, 4443), handler) httpd.socket = ssl.wrap_socket(httpd.socket, certfile=CERT_FILE, keyfile=KEY_FILE, server_side=True) httpd.serve_forever()</description></item><item><title>cronjob</title><link>https://hellupline.dev/configurations/kubernetes/cronjob/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/configurations/kubernetes/cronjob/</guid><description> Download --- apiVersion: batch/v1beta1 kind: CronJob metadata: labels: {app: my-cronjob} name: my-cronjob namespace: my-namespace spec: schedule: &amp;#34;* * * * *&amp;#34; concurrencyPolicy: Forbid jobTemplate: spec: template: metadata: {labels: {app: my-cronjob}} spec: restartPolicy: Never containers: - name: my-cronjob image: alpine imagePullPolicy: Always command: [&amp;#34;echo&amp;#34;, &amp;#34;hello&amp;#34;, &amp;#34;nurse&amp;#34;]</description></item><item><title>curl</title><link>https://hellupline.dev/cheatsheet/commands/curl/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/cheatsheet/commands/curl/</guid><description>curl debug requests curl \ --silent --show-error \ --fail --fail-early \ --compressed --location \ --create-dirs \ --dump-header - --output /dev/null \ --write-out &amp;#39;============= HOST: ========== local_ip: %{local_ip} local_port: %{local_port} remote_ip: %{remote_ip} remote_port: %{remote_port} ======= CONNECTION: ========== http_version: %{http_version} http_code: %{http_code} http_connect: %{http_connect} num_connects: %{num_connects} num_redirects: %{num_redirects} redirect_url: %{redirect_url} ============= FILE: ========== content_type: %{content_type} filename_effective: %{filename_effective} ftp_entry_path: %{ftp_entry_path} size_download: %{size_download} size_header: %{size_header} size_request: %{size_request} size_upload: %{size_upload} speed_download: %{speed_download} speed_upload: %{speed_upload} ssl_verify_result: %{ssl_verify_result} url_effective: %{url_effective} === TIME BREAKDOWN: ========== time_appconnect: %{time_appconnect} time_connect: %{time_connect} time_namelookup: %{time_namelookup} time_pretransfer: %{time_pretransfer} time_redirect: %{time_redirect} time_starttransfer: %{time_starttransfer} ---------- time_total: %{time_total} &amp;#39; \ --request GET --url https://example.</description></item><item><title>dna</title><link>https://hellupline.dev/scripts/toys/dna/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/toys/dna/</guid><description> Download #!/bin/bash # # ANSI color scheme script by pfh # # Initializing mod by lolilolicon from Archlinux # f=3 b=4 for j in f b; do for i in {0..7}; do printf -v $j$i %b &amp;#34;\e[${!j}${i}m&amp;#34; done done bld=$&amp;#39;\e[1m&amp;#39; rst=$&amp;#39;\e[0m&amp;#39; inv=$&amp;#39;\e[7m&amp;#39; cat &amp;lt;&amp;lt; EOF ${f1} █-----${bld}█ ${rst}${f2} █-----${bld}█${rst} ${f3} █-----${bld}█${rst} ${f4} █-----${bld}█${rst} ${f5} █-----${bld}█${rst} ${f6} █-----${bld}█${rst} ${f1} █---${bld}█${rst} ${f2} █---${bld}█${rst} ${f3} █---${bld}█${rst} ${f4} █---${bld}█${rst} ${f5} █---${bld}█${rst} ${f6} █---${bld}█${rst} ${f1} █-${bld}█${rst} ${f2} █-${bld}█${rst} ${f3} █-${bld}█${rst} ${f4} █-${bld}█${rst} ${f5} █-${bld}█${rst} ${f6} █-${bld}█${rst} ${f1} █${rst} ${f2} █${rst} ${f3} █${rst} ${f4} █${rst} ${f5} █${rst} ${f6} █${rst} ${f1}${bld} █-${rst}${f1}█${rst} ${f2}${bld} █_${rst}${f2}█${rst} ${f3}${bld} █-${rst}${f3}█${rst} ${f4}${bld} █-${rst}${f4}█${rst} ${f5}${bld} █-${rst}${f5}█${rst} ${f6}${bld} █-${rst}${f6}█${rst} ${f1}${bld} █---${rst}${f1}█${rst} ${f2}${bld} █---${rst}${f2}█${rst} ${f3}${bld} █---${rst}${f3}█${rst} ${f4}${bld} █---${rst}${f4}█${rst} ${f5}${bld} █---${rst}${f5}█${rst} ${f6}${bld} █---${rst}${f6}█${rst} ${f1}${bld} █-----${rst}${f1}█${rst} ${f2}${bld} █-----${rst}${f2}█${rst} ${f3}${bld} █-----${rst}${f3}█${rst} ${f4}${bld} █-----${rst}${f4}█${rst} ${f5}${bld} █-----${rst}${f5}█${rst} ${f6}${bld} █-----${rst}${f6}█${rst} ${f1}${bld} █---${rst}${f1}█${rst} ${f2}${bld} █---${rst}${f2}█${rst} ${f3}${bld} █---${rst}${f3}█${rst} ${f4}${bld} █---${rst}${f4}█${rst} ${f5}${bld} █---${rst}${f5}█${rst} ${f6}${bld} █---${rst}${f6}█${rst} ${f1}${bld} █-${rst}${f1}█${rst} ${f2}${bld} █-${rst}${f2}█${rst} ${f3}${bld} █-${rst}${f3}█${rst} ${f4}${bld} █-${rst}${f4}█${rst} ${f5}${bld} █-${rst}${f5}█${rst} ${f6}${bld} █-${rst}${f6}█${rst} ${f1}${bld} █${rst} ${f2}${bld} █${rst} ${f3}${bld}█${rst} ${f4}${bld} █${rst} ${f5}${bld} █${rst} ${f6}${bld} █${rst} ${f1} █-${bld}█${rst} ${f2} █-${bld}█${rst} ${f3} █-${bld}█${rst} ${f4} █-${bld}█${rst} ${f5} █-${bld}█${rst} ${f6} █-${bld}█${rst} ${f1} █---${bld}█${rst} ${f2} █---${bld}█${rst} ${f3} █---${bld}█${rst} ${f4} █---${bld}█${rst} ${f5} █---${bld}█${rst} ${f6} █---${bld}█${rst} ${f1} █-----${bld}█ ${rst}${f2} █-----${bld}█${rst} ${f3} █-----${bld}█${rst} ${f4} █-----${bld}█${rst} ${f5} █-----${bld}█${rst} ${f6} █-----${bld}█${rst} ${f1} █---${bld}█${rst} ${f2} █---${bld}█${rst} ${f3} █---${bld}█${rst} ${f4} █---${bld}█${rst} ${f5} █---${bld}█${rst} ${f6} █---${bld}█${rst} ${f1} █-${bld}█${rst} ${f2} █-${bld}█${rst} ${f3} █-${bld}█${rst} ${f4} █-${bld}█${rst} ${f5} █-${bld}█${rst} ${f6} █-${bld}█${rst} ${f1} █${rst} ${f2}█${rst} ${f3} █${rst} ${f4} █${rst} ${f5} █${rst} ${f6} █${rst} ${f1}${bld} █-${rst}${f1}█${rst} ${f2}${bld} █_${rst}${f2}█${rst} ${f3}${bld} █-${rst}${f3}█${rst} ${f4}${bld} █-${rst}${f4}█${rst} ${f5}${bld} █-${rst}${f5}█${rst} ${f6}${bld} █-${rst}${f6}█${rst} ${f1}${bld} █---${rst}${f1}█${rst} ${f2}${bld} █---${rst}${f2}█${rst} ${f3}${bld} █---${rst}${f3}█${rst} ${f4}${bld} █---${rst}${f4}█${rst} ${f5}${bld} █---${rst}${f5}█${rst} ${f6}${bld} █---${rst}${f6}█${rst} ${f1}${bld} █-----${rst}${f1}█${rst} ${f2}${bld} █-----${rst}${f2}█${rst} ${f3}${bld} █-----${rst}${f3}█${rst} ${f4}${bld} █-----${rst}${f4}█${rst} ${f5}${bld} █-----${rst}${f5}█${rst} ${f6}${bld} █-----${rst}${f6}█${rst} ${f1}${bld} █---${rst}${f1}█${rst} ${f2}${bld} █---${rst}${f2}█${rst} ${f3}${bld} █---${rst}${f3}█${rst} ${f4}${bld} █---${rst}${f4}█${rst} ${f5}${bld} █---${rst}${f5}█${rst} ${f6}${bld} █---${rst}${f6}█${rst} ${f1}${bld} █-${rst}${f1}█${rst} ${f2}${bld} █-${rst}${f2}█${rst} ${f3}${bld} █-${rst}${f3}█${rst} ${f4}${bld} █-${rst}${f4}█${rst} ${f5}${bld} █-${rst}${f5}█${rst} ${f6}${bld} █-${rst}${f6}█${rst} ${f1}${bld} █${rst} ${f2}${bld} █${rst} ${f3}${bld} █${rst} ${f4}${bld} █${rst} ${f5}${bld} █${rst} ${f6}${bld} █${rst} ${f1} █-${bld}█${rst} ${f2} █-${bld}█${rst} ${f3} █-${bld}█${rst} ${f4} █-${bld}█${rst} ${f5} █-${bld}█${rst} ${f6} █-${bld}█${rst} ${f1} █---${bld}█${rst} ${f2} █---${bld}█${rst} ${f3} █---${bld}█${rst} ${f4} █---${bld}█${rst} ${f5} █---${bld}█${rst} ${f6} █---${bld}█${rst} ${f1} █-----${bld}█ ${rst}${f2} █-----${bld}█${rst} ${f3} █-----${bld}█${rst} ${f4} █-----${bld}█${rst} ${f5} █-----${bld}█${rst} ${f6} █-----${bld}█${rst} EOF</description></item><item><title>kubectl-namespace-set</title><link>https://hellupline.dev/scripts/kubernetes/kubectl-namespace-set/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/kubernetes/kubectl-namespace-set/</guid><description> Download #!/bin/sh # Usage: # $ kubectl namespace set &amp;#34;my-namespace&amp;#34; # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist die () { echo &amp;gt;&amp;amp;2 &amp;#34;$@&amp;#34; exit 1 } [ &amp;#34;$#&amp;#34; -eq 1 ] || die &amp;#34;1 argument required, $#provided&amp;#34; NAME=&amp;#34;${1}&amp;#34; kubectl config set-context &amp;#34;$(kubectl config current-context)&amp;#34; --namespace=&amp;#34;${NAME}&amp;#34;</description></item><item><title>load-balancer</title><link>https://hellupline.dev/configurations/nginx/load-balancer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/configurations/nginx/load-balancer/</guid><description>Download upstream app01 { least_conn; server localhost:9001 weight=5; server localhost:9002; server localhost:9003 backup; } upstream app02 { ip_hash; server localhost:9004 weight=5; server localhost:9005; server localhost:9006 down; } server { listen [::]:80 default_server; listen 80 default_server; server_name _; location /app01 { proxy_pass http://app01; } location /app02 { proxy_pass http://app02; } } # server 01 server { listen [::]:9001; listen 9001; server_name _; add_header Content-Type &amp;#34;text/plain&amp;#34;; return 200 &amp;#34;hello world: server 01&amp;#34;; } # server 02 server { listen [::]:9002; listen 9002; server_name _; add_header Content-Type &amp;#34;text/plain&amp;#34;; return 200 &amp;#34;hello world: server 02&amp;#34;; } # server 03 server { listen [::]:9003; listen 9003; server_name _; add_header Content-Type &amp;#34;text/plain&amp;#34;; return 200 &amp;#34;hello world: server 03&amp;#34;; } # server 04 server { listen [::]:9004; listen 9004; server_name _; add_header Content-Type &amp;#34;text/plain&amp;#34;; return 200 &amp;#34;hello world: server 04&amp;#34;; } # server 05 server { listen [::]:9005; listen 9005; server_name _; add_header Content-Type &amp;#34;text/plain&amp;#34;; return 200 &amp;#34;hello world: server 05&amp;#34;; } # server 06 server { listen [::]:9006; listen 9006; server_name _; add_header Content-Type &amp;#34;text/plain&amp;#34;; return 200 &amp;#34;hello world: server 06&amp;#34;; } docker run --detach --name nginx-load-balancer \ --volume &amp;#34;${PWD}/load-balancer.</description></item><item><title>make-cacert-certificate</title><link>https://hellupline.dev/scripts/utils/make-cacert-certificate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/utils/make-cacert-certificate/</guid><description>Download #!/bin/bash # Usage: # make-cacert-certificate &amp;#34;hellupline.dev&amp;#34; # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist DOMAIN=${1:-localhost} # create application certs openssl genrsa -out tls-certs/service.key 4096 openssl req \ -new -nodes -sha256 -days 3650 \ -key tls-certs/service.key \ -out tls-certs/service.csr \ -subj &amp;#34;/CN=${DOMAIN}/O=${DOMAIN}/OU=${DOMAIN}&amp;#34; \ -addext &amp;#34;subjectAltName = DNS:${DOMAIN},IP:::1,IP:127.</description></item><item><title>nginx</title><link>https://hellupline.dev/cheatsheet/applications/nginx/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/cheatsheet/applications/nginx/</guid><description>run a simple static site with nginx and docker docker run --rm -it --name=static-site \ --volume &amp;#34;${PWD}/public:/usr/share/nginx/html&amp;#34; \ --publish 8080:80 \ --workdir /usr/share/nginx/html \ nginx run with configuration files docker run --rm -it --name=static-site \ --volume &amp;#34;${PWD}/conf.d:/etc/nginx/conf.d/&amp;#34; \ --volume &amp;#34;${PWD}/public:/usr/share/nginx/html&amp;#34; \ --publish 8080:80 \ --workdir /usr/share/nginx/html \ nginx</description></item><item><title>gpg</title><link>https://hellupline.dev/cheatsheet/commands/gpg/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/cheatsheet/commands/gpg/</guid><description>list output format # sec rsa4096/xxxxxxxxxxxxxxxx 0000-00-00 [SC] # yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy # uid [ultimate] My Name &amp;lt;me@mail.com&amp;gt; # ssb rsa4096/zzzzzzzzzzzzzzzz 0000-00-00 [E] generate key gpg --full-generate-key encrypt gpg \ --output file.txt.enc \ --encrypt \ --local-user user@example.com \ --recipient another@example.com \ file.txt encrypt with passphrase gpg --output file.txt.enc --symmetric file.txt decrypt gpg --output file.txt --decrypt file.txt.enc sign file gpg --sign --armor file.txt clear sign file gpg --clear-sign file.</description></item><item><title>job</title><link>https://hellupline.dev/configurations/kubernetes/job/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/configurations/kubernetes/job/</guid><description> Download --- apiVersion: batch/v1 kind: Job metadata: labels: {app: my-job} name: my-job namespace: my-namespace spec: template: metadata: {labels: {app: my-job}} spec: restartPolicy: Never containers: - name: my-job image: alpine args: [&amp;#34;echo&amp;#34;, &amp;#34;hello nurse&amp;#34;]</description></item><item><title>kubectl-pods-failed</title><link>https://hellupline.dev/scripts/kubernetes/kubectl-pods-failed/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/kubernetes/kubectl-pods-failed/</guid><description> Download #!/bin/sh # Usage: # $ kubectl pods failed # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist kubectl get --all-namespaces pods --field-selector=&amp;#39;status.phase=Failed&amp;#39;</description></item><item><title>mysql</title><link>https://hellupline.dev/cheatsheet/applications/mysql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/cheatsheet/applications/mysql/</guid><description>inspect bad queries SELECT CONCAT(&amp;#34;CALL mysql.rds_kill_query(&amp;#39;&amp;#34; , ID, &amp;#34;&amp;#39;);&amp;#34;) as run_to_kill, ID, USER, DB, STATE, TIME, INFO FROM information_schema.processlist WHERE COMMAND NOT IN (&amp;#39;Sleep&amp;#39;, &amp;#39;Connect&amp;#39;, &amp;#39;Binlog Dump&amp;#39;) AND USER NOT IN (&amp;#39;system user&amp;#39;) AND SUBSTR(USER, 1, 4) != &amp;#39;app_&amp;#39; ORDER BY TIME DESC; create user CREATE USER &amp;#39;user&amp;#39;@&amp;#39;%&amp;#39; IDENTIFIED BY &amp;#39;PASSWORD&amp;#39;; GRANT SELECT on DATABASE.* TO &amp;#39;user&amp;#39;@&amp;#39;%&amp;#39;; inspect user permissions SHOW GRANTS FOR &amp;#39;user&amp;#39;@&amp;#39;%&amp;#39;; SELECT * FROM information_schema.user_privileges WHERE PRIVILEGE_TYPE NOT IN ( &amp;#39;USAGE&amp;#39;, &amp;#39;SELECT&amp;#39; ) AND GRANTEE NOT IN ( &amp;#34;&amp;#39;rdsadmin&amp;#39;@&amp;#39;localhost&amp;#39;&amp;#34;, &amp;#34;&amp;#39;rdsrepladmin&amp;#39;@&amp;#39;%&amp;#39;&amp;#34; ) allow kill process on rds GRANT EXECUTE ON PROCEDURE `mysql`.</description></item><item><title>password</title><link>https://hellupline.dev/configurations/nginx/password/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/configurations/nginx/password/</guid><description>Download server { listen [::]:80 default_server; listen 80 default_server; server_name _; auth_basic_user_file /etc/nginx/server.htpasswd; auth_basic &amp;#34;Administrator’s Area&amp;#34;; location /public { auth_basic off; proxy_pass http://localhost:9002; } location / { proxy_pass http://localhost:9001; } } # server 01 server { listen [::]:9001; listen 9001; server_name _; add_header Content-Type &amp;#34;text/plain&amp;#34;; return 200 &amp;#34;hello world: server 01&amp;#34;; } # server 02 server { listen [::]:9002; listen 9002; server_name _; add_header Content-Type &amp;#34;text/plain&amp;#34;; return 200 &amp;#34;hello world: server 02&amp;#34;; } # generate your passwod # htpasswd -c .</description></item><item><title>pipes</title><link>https://hellupline.dev/scripts/toys/pipes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/toys/pipes/</guid><description>Download #!/usr/bin/env bash # pipes.sh: Animated pipes terminal screensaver. # # This modified version is maintained at: # # https://github.com/livibetter/pipes.sh # options: # s = straight [5-15] # f = rate [20-100] # t = style [0-5] # r = ttl VERSION=0.1.0 M=32768 p=1 f=75 s=13 r=2000 t=0 w=$(tput cols) h=$(tput lines) # ab -&amp;gt; idx = a*4 + b # 0: up, 1: right, 2: down, 3: left # 00 means going up , then going up -&amp;gt; ┃ # 12 means going right, then going down -&amp;gt; ┓ sets=( &amp;#34;┃┏ ┓┛━┓ ┗┃┛┗ ┏━&amp;#34; &amp;#34;│╭ ╮╯─╮ ╰│╯╰ ╭─&amp;#34; &amp;#34;│┌ ┐┘─┐ └│┘└ ┌─&amp;#34; &amp;#34;║╔ ╗╝═╗ ╚║╝╚ ╔═&amp;#34; &amp;#34;|+ ++-+ +|++ +-&amp;#34; &amp;#34;|/ \/-\ \|/\ /-&amp;#34; ) v=() RNDSTART=0 NOCOLOR=0 OPTIND=1 while getopts &amp;#34;p:t:f:s:r:RChv&amp;#34; arg; do case $arg in p) ((p=(OPTARG&amp;gt;0)?</description></item><item><title>show-certs</title><link>https://hellupline.dev/scripts/utils/show-certs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/utils/show-certs/</guid><description> Download #!/bin/sh # Usage: # show-certs &amp;#34;hellupline.dev&amp;#34; &amp;#34;360&amp;#34; # show-certs &amp;#34;hellupline.dev&amp;#34; set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist die () { echo &amp;gt;&amp;amp;2 &amp;#34;$@&amp;#34; exit 1 } [ &amp;#34;$#&amp;#34; -ge 1 ] || die &amp;#34;1 argument required, $#provided&amp;#34; DOMAIN=&amp;#34;${1}&amp;#34; DAYS=&amp;#34;${2:-30}&amp;#34; SECONDS=&amp;#34;$((${DAYS} * 24 * 60 * 60))&amp;#34; openssl s_client -servername &amp;#34;${DOMAIN}&amp;#34; -connect &amp;#34;${DOMAIN}&amp;#34;:443 -showcerts &amp;lt; /dev/null | openssl x509 -noout -text -subject -issuer -dates -checkend &amp;#34;${SECONDS}&amp;#34;</description></item><item><title>kubectl-shell</title><link>https://hellupline.dev/scripts/kubernetes/kubectl-shell/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/kubernetes/kubectl-shell/</guid><description> Download #!/bin/sh # Usage: # $ kubectl shell # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist IMAGE=${1:-bash} kubectl run --rm -it shell --generator=run-pod/v1 --image=&amp;#34;${IMAGE}&amp;#34;</description></item><item><title>lets-encrypt-cname</title><link>https://hellupline.dev/scripts/utils/lets-encrypt-cname/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/utils/lets-encrypt-cname/</guid><description> Download #!/bin/bash # Usage: # lets-encrypt-cname &amp;#34;hellupline.dev&amp;#34; &amp;#34;root@hellupline.dev&amp;#34; # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist die () { echo &amp;gt;&amp;amp;2 &amp;#34;$@&amp;#34; exit 1 } [ &amp;#34;$#&amp;#34; -eq 2 ] || die &amp;#34;2 argument required, $#provided&amp;#34; DOMAIN=&amp;#34;${1}&amp;#34; EMAIL=&amp;#34;${2}&amp;#34; docker run --rm -it --name certbot \ --volume &amp;#34;${PWD}/var-lib-letsencrypt:/var/lib/letsencrypt&amp;#34; \ --volume &amp;#34;${PWD}/etc-letsencrypt:/etc/letsencrypt&amp;#34; \ certbot/certbot \ certonly --dry-run \ --manual-public-ip-logging-ok --agree-tos --email=&amp;#34;${EMAIL}&amp;#34; \ --manual \ --preferred-challenges=dns \ --domains=&amp;#34;${DOMAIN}&amp;#34;</description></item><item><title>pipesx</title><link>https://hellupline.dev/scripts/toys/pipesx/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/toys/pipesx/</guid><description>Download #!/bin/bash # Animated pipes.sh terminal screensaver at an angle. # Copyright (C) 2013, 2014 by Yu-Jie Lin # # Permission is hereby granted, free of charge, to any person obtaining a copy # of this software and associated documentation files (the &amp;#34;Software&amp;#34;), to deal # in the Software without restriction, including without limitation the rights # to use, copy, modify, merge, publish, distribute, sublicense, and/or sell # copies of the Software, and to permit persons to whom the Software is # furnished to do so, subject to the following conditions: # # The above copyright notice and this permission notice shall be included in # all copies or substantial portions of the Software.</description></item><item><title>postgresql</title><link>https://hellupline.dev/cheatsheet/applications/postgresql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/cheatsheet/applications/postgresql/</guid><description>Check long running transactions SELECT FORMAT(&amp;#39;SELECTR pg_terminate_backend(%s)&amp;#39;, pid) AS &amp;#34;run to kill&amp;#34;, pid AS &amp;#34;process ID&amp;#34;, usename AS &amp;#34;username&amp;#34;, client_addr AS &amp;#34;source ip&amp;#34;, EXTRACT(EPOCH FROM (DATE_TRUNC(&amp;#39;second&amp;#39;, now() - pg_stat_activity.query_start))) AS &amp;#34;duration&amp;#34;, state as &amp;#34;state&amp;#34;, TRIM(LEADING E&amp;#39;\n&amp;#39; FROM query) AS &amp;#34;query&amp;#34; -- Adjusts query visualization in some softwares FROM pg_stat_activity WHERE state != &amp;#39;idle&amp;#39; ORDER BY duration DESC; show where a user has permissions WITH tables AS ( SELECT catalog_name AS &amp;#34;catalog_name&amp;#34;, schema_name AS &amp;#34;schema_name&amp;#34;, tablename AS &amp;#34;table_name&amp;#34; FROM information_schema.</description></item><item><title>redirect</title><link>https://hellupline.dev/configurations/nginx/redirect/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/configurations/nginx/redirect/</guid><description>Download map $request_uri $new_uri { # fix published urls /wrong-path &amp;#34;https://${host}/correct-path&amp;#34;; # force https for others default &amp;#34;https://${host}${request_uri}&amp;#34;; } server { listen [::]:80 default_server; listen 80 default_server; server_name _; return 301 $new_uri; } docker run --detach --name nginx-redirect \ --volume &amp;#34;${PWD}/redirect.conf:/etc/nginx/conf.d/default.conf&amp;#34; \ --publish &amp;#34;8080:80&amp;#34; \ --workdir &amp;#34;/usr/share/nginx/html/&amp;#34; \ nginx curl -SsD- http://localhost:8080/ curl -SsD- -H &amp;#34;Host: www.example.com&amp;#34; http://localhost:8080/wrong-path curl -SsD- -H &amp;#34;Host: www.</description></item><item><title>ssh</title><link>https://hellupline.dev/cheatsheet/commands/ssh/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/cheatsheet/commands/ssh/</guid><description>generate key ssh-keygen -t rsa -b 4096 -C &amp;#34;me@mail.com&amp;#34; reach server behind bastion ssh -Nnf -L localhost:8080:remote.example.com:5000 me@example.com # cancel forward ssh -O cancel -L localhost:8080:remote.example.com:5000 me@example.com # close opportunistic master ssh -O exit me@example.com reach localhost from bastion ssh -Nnf -R localhost:8080:remote.example.com:5000 me@example.com # cancel forward ssh -O cancel -R localhost:8080:remote.example.com:5000 me@example.com # close opportunistic master ssh -O exit me@example.com create a socks proxy ssh -Nnf -D 8080 me@example.com # cancel forward ssh -O cancel -D 8080 me@example.</description></item><item><title>statefulset</title><link>https://hellupline.dev/configurations/kubernetes/statefulset/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/configurations/kubernetes/statefulset/</guid><description> Download --- apiVersion: apps/v1 kind: StatefulSet metadata: labels: {app: my-app} name: my-app namespace: my-namespace spec: selector: {matchLabels: {app: my-app}} replicas: 3 serviceName: my-app template: metadata: {labels: {app: my-app}} spec: containers: - name: my-app image: nginx volumeMounts: - {name: my-app-data, mountPath: &amp;#34;/usr/share/nginx/html&amp;#34;} volumeClaimTemplates: - metadata: {name: my-app-data} spec: selector: {matchLabels: {app: my-app}} resources: {requests: {storage: 1Gi}} accessModes: [ReadWriteOnce]</description></item><item><title>colorbars</title><link>https://hellupline.dev/scripts/toys/colorbars/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/toys/colorbars/</guid><description> Download #!/bin/sh # # colorbars - smpte color bars in sh # http://git.io/colorbars echo for y in $(seq 0 13); do printf %s &amp;#39; &amp;#39; for color in 7 3 6 2 5 1 4; do tput setab ${color} printf %s &amp;#39; &amp;#39; done tput sgr0 echo done for y in 0 1; do printf %s &amp;#39; &amp;#39; for color in 4 0 5 0 6 0 7; do tput setab ${color} printf %s &amp;#39; &amp;#39; done tput sgr0 echo done for y in $(seq 0 4); do printf %s &amp;#39; &amp;#39; for color in 4 4 4 4 4 7 7 7 7 7 5 5 5 5 5 0 0 0 0 0 0 0 0 0 0 0 0 0; do tput setab ${color} printf %s &amp;#39; &amp;#39; done tput sgr0 echo done echo</description></item><item><title>daemonset</title><link>https://hellupline.dev/configurations/kubernetes/daemonset/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/configurations/kubernetes/daemonset/</guid><description> Download --- apiVersion: apps/v1 kind: DaemonSet metadata: labels: {app: my-app} name: my-app namespace: my-namespace spec: selector: {matchLabels: {app: my-app}} template: metadata: {labels: {app: my-app}} spec: containers: - name: my-app image: nginx</description></item><item><title>kubectl-ingress-health</title><link>https://hellupline.dev/scripts/kubernetes/kubectl-ingress-health/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/kubernetes/kubectl-ingress-health/</guid><description> Download #!/bin/sh # Usage: # $ kubectl ingress health &amp;#34;my-ingress&amp;#34; # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist die () { echo &amp;gt;&amp;amp;2 &amp;#34;$@&amp;#34; exit 1 } [ &amp;#34;$#&amp;#34; -eq 1 ] || die &amp;#34;No argument supplied&amp;#34; NAME=&amp;#34;${1}&amp;#34; kubectl get --output json ingresses &amp;#34;${NAME}&amp;#34; | jq &amp;#39;.metadata.annotations.&amp;#34;ingress.kubernetes.io/backends&amp;#34; | fromjson&amp;#39;</description></item><item><title>lets-encrypt-cloudflare</title><link>https://hellupline.dev/scripts/utils/lets-encrypt-cloudflare/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/utils/lets-encrypt-cloudflare/</guid><description>Download #!/bin/bash # Usage: # lets-encrypt-cloudflare &amp;#34;CLOUDFLARE_API_KEY&amp;#34; &amp;#34;hellupline.dev&amp;#34; &amp;#34;root@hellupline.dev&amp;#34; # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist die () { echo &amp;gt;&amp;amp;2 &amp;#34;$@&amp;#34; exit 1 } [ &amp;#34;$#&amp;#34; -eq 3 ] || die &amp;#34;3 argument required, $#provided&amp;#34; CLOUDFLARE_API_KEY=&amp;#34;${1}&amp;#34; DOMAIN=&amp;#34;${2}&amp;#34; EMAIL=&amp;#34;${3}&amp;#34; echo &amp;#34;dns_cloudflare_api_key=${CLOUDFLARE_API_KEY}\ndns_cloudflare_email=${EMAIL}&amp;#34; &amp;gt; dns-cloudflare.ini chmod 400 dns-cloudflare.ini docker run --rm -it --name certbot \ --volume &amp;#34;${PWD}/var-lib-letsencrypt:/var/lib/letsencrypt&amp;#34; \ --volume &amp;#34;${PWD}/etc-letsencrypt:/etc/letsencrypt&amp;#34; \ --volume &amp;#34;${PWD}/dns-cloudflare.</description></item><item><title>network</title><link>https://hellupline.dev/cheatsheet/commands/network/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/cheatsheet/commands/network/</guid><description>dns query all records dig @1.1.1.1 example.com ANY query records dig @1.1.1.1 +short example.com AAAA trace records tld dig @1.1.1.1 +trace example.com AAAA curl debug requests curl \ --silent --show-error \ --fail --fail-early \ --compressed --location \ --create-dirs \ --dump-header - --output - \ --write-out &amp;#39; time_namelookup: %{time_namelookup} time_connect: %{time_connect} time_appconnect: %{time_appconnect} time_pretransfer: %{time_pretransfer} time_redirect: %{time_redirect} time_starttransfer: %{time_starttransfer} ---------- time_total: %{time_total} &amp;#39; \ --request GET --url https://example.</description></item><item><title>redshift</title><link>https://hellupline.dev/cheatsheet/applications/redshift/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/cheatsheet/applications/redshift/</guid><description>create user CREATE USER &amp;#34;example_user&amp;#34; WITH PASSWORD &amp;#39;mysecretpassword&amp;#39;; create readonly group and add user CREATE GROUP &amp;#34;example_group_ro&amp;#34;; GRANT USAGE ON SCHEMA &amp;#34;example_schema&amp;#34; TO GROUP &amp;#34;example_group_ro&amp;#34;; ALTER DEFAULT PRIVILEGES IN SCHEMA &amp;#34;example_schema&amp;#34; GRANT SELECT ON TABLES TO GROUP &amp;#34;example_group_ro&amp;#34;; GRANT SELECT ON ALL TABLES IN SCHEMA &amp;#34;example_schema&amp;#34; TO GROUP &amp;#34;example_group_ro&amp;#34;; ALTER GROUP &amp;#34;example_group_ro&amp;#34; ADD USER &amp;#34;my_user&amp;#34; locate schemas without _ro group SELECT n.nspname FROM pg_namespace AS n WHERE n.nspname NOT IN ( &amp;#39;pg_internal&amp;#39;, &amp;#39;pg_toast&amp;#39;, &amp;#39;pg_catalog&amp;#39;, &amp;#39;admin&amp;#39; ) AND n.</description></item><item><title>static-files</title><link>https://hellupline.dev/configurations/nginx/static-files/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/configurations/nginx/static-files/</guid><description>Download server { listen [::]:80 default_server; listen 80 default_server; server_name _; root /var/www/static-files; # gzip gzip_disable &amp;#34;msie6&amp;#34;; gzip on; gzip_vary on; gzip_proxied any; gzip_comp_level 6; gzip_types text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml; # allow safe files location ~* \.(?:css(\.map)?|js(\.map)?|ttf|ttc|otf|eot|woff2?|svgz?|jpe?g|png|gif|ico|cur|heic|webp|tiff?|mp3|m4a|aac|ogg|midi?|wav|mp4|mov|webm|mpe?g|avi|ogv|flv|wmv|pdf|docx?|dotx?|docm|dotm|xlsx?|xltx?|xlsm|xltm|pptx?|potx?|pptm|potm|ppsx?)$ { add_header Access-Control-Allow-Origin &amp;#34;*&amp;#34;; add_header Cache-Control &amp;#34;public&amp;#34;; expires 30d; access_log off; } # single page application location / { try_files $uri $uri/ /index.html; } } curl -Ss --create-dirs -o files/Helmet1.</description></item><item><title>configmap</title><link>https://hellupline.dev/configurations/kubernetes/configmap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/configurations/kubernetes/configmap/</guid><description> Download --- apiVersion: v1 kind: ConfigMap metadata: labels: {app: my-app} name: my-app-config namespace: my-namespace data: CONFIG_ENV: my-config-env-value CONFIG_FILE: | { &amp;#34;key_01&amp;#34;: &amp;#34;value_02&amp;#34;, &amp;#34;key_02&amp;#34;: &amp;#34;value_02&amp;#34;, }</description></item><item><title>python</title><link>https://hellupline.dev/cheatsheet/commands/python/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/cheatsheet/commands/python/</guid><description>pipenv install and use python3 -m pip install --upgrade --user pipenv pipenv install boto3 pipenv shell lock and lambda-layer &amp;gt; requirements.txt pipenv lock --requirements python3 -m pip install \ --force-reinstall --no-compile --no-deps \ --target ./layer/python/lib/python3.8/site-packages \ --requirement requirements.txt pip docker &amp;gt; requirements.txt pipenv lock --requirements docker run --rm -it -w /deps -v &amp;#34;${PWD}:/deps&amp;#34; python:3.8 \ python3 -m pip install \ --force-reinstall --no-compile --no-deps \ --target /deps \ --requirement /deps/requirements.</description></item><item><title>rain</title><link>https://hellupline.dev/scripts/toys/rain/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/toys/rain/</guid><description>Download #!/bin/bash RAINS=(&amp;#34;|&amp;#34; &amp;#34;│&amp;#34; &amp;#34;┃&amp;#34; &amp;#34;┆&amp;#34; &amp;#34;┇&amp;#34; &amp;#34;┊&amp;#34; &amp;#34;┋&amp;#34; &amp;#34;╽&amp;#34; &amp;#34;╿&amp;#34;) COLORS=(&amp;#34;\e[37m&amp;#34; &amp;#34;\e[37;1m&amp;#34;) # More from 256 color mode for i in {244..255}; do COLORS=(&amp;#34;${COLORS[@]}&amp;#34; &amp;#34;\e[38;5;${i}m&amp;#34;) done NRAINS=${#RAINS[@]} NCOLORS=${#COLORS[@]} NUM_RAIN_METADATA=5 sigwinch() { TERM_WIDTH=$(tput cols) TERM_HEIGHT=$(tput lines) STEP_DURATION=0.025 ((MAX_RAINS = TERM_WIDTH * TERM_HEIGHT / 4)) ((MAX_RAIN_LENGTH = TERM_HEIGHT &amp;lt; 10 ? 1 : TERM_HEIGHT / 10)) # In percentage ((NEW_RAIN_ODD = TERM_HEIGHT &amp;gt; 50 ? 100 : TERM_HEIGHT * 2)) ((NEW_RAIN_ODD = NEW_RAIN_ODD * 75 / 100)) ((FALLING_ODD = TERM_HEIGHT &amp;gt; 25 ?</description></item><item><title>screenshot</title><link>https://hellupline.dev/scripts/utils/screenshot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/utils/screenshot/</guid><description>Download #!/bin/sh # Usage: # $ screenshot [selection|window|all] [&amp;#34;~/pictures/screenshots&amp;#34;] # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist UTCNOW=$(date &amp;#39;+%Y-%m-%dT%T%z&amp;#39;) TYPE=&amp;#34;${1:-selection}&amp;#34; DIRECTORY=&amp;#34;${2:-${HOME}/pictures/screenshots/}&amp;#34; FILENAME=&amp;#34;${DIRECTORY}/${UTCNOW}.png&amp;#34; case &amp;#34;${TYPE}&amp;#34; in &amp;#34;selection&amp;#34;) maim --highlight --color=1.0,1.0,1.0,0.5 --hidecursor \ --select &amp;#34;${FILENAME}&amp;#34; ;; &amp;#34;window&amp;#34;) maim --highlight --color=&amp;#39;1.0,1.0,1.0,0.5&amp;#39; --hidecursor \ --window &amp;#34;$(xdotool getactivewindow)&amp;#34; &amp;#34;${FILENAME}&amp;#34; ;; &amp;#34;all&amp;#34;) maim --highlight --color=1.</description></item><item><title>clipboard-watch</title><link>https://hellupline.dev/scripts/utils/clipboard-watch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/utils/clipboard-watch/</guid><description> Download #!/bin/sh # Usage: # show-certs &amp;#34;hellupline.dev&amp;#34; # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist LAST=&amp;#34;&amp;#34; while :; do CURRENT=$(xclip -selection primary -out) if [ &amp;#34;${CURRENT}&amp;#34; != &amp;#34;${LAST}&amp;#34; ]; then notify-send -- &amp;#34;Added ${CURRENT}&amp;#34; LAST=&amp;#34;${CURRENT}&amp;#34; echo &amp;#34;${CURRENT}&amp;#34; fi sleep .1 done</description></item><item><title>pacman-colors</title><link>https://hellupline.dev/scripts/toys/pacman-colors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/toys/pacman-colors/</guid><description> Download #!/bin/bash # # ANSI color scheme script featuring PACMAN # by pfh # # Initializing procedure by lolilolicon # f=3 b=4 for j in f b; do for i in {0..7}; do printf -v $j$i %b &amp;#34;\e[${!j}${i}m&amp;#34; done done bld=$&amp;#39;\e[1m&amp;#39; rst=$&amp;#39;\e[0m&amp;#39; inv=$&amp;#39;\e[7m&amp;#39; cat &amp;lt;&amp;lt; EOF $rst $f3 ▄███████▄ $f1 ▄██████▄ $f2 ▄██████▄ $f4 ▄██████▄ $f5 ▄██████▄ $f6 ▄██████▄ $f3▄█████████▀▀ $f1▄$f7█▀█$f1██$f7█▀█$f1██▄ $f2▄█$f7███$f2██$f7███$f2█▄ $f4▄█$f7███$f4██$f7███$f4█▄ $f5▄█$f7███$f5██$f7███$f5█▄ $f6▄██$f7█▀█$f6██$f7█▀█$f6▄ $f3███████▀ $f7▄▄ ▄▄ ▄▄ $f1█$f7▄▄█$f1██$f7▄▄█$f1███ $f2██$f7█ █$f2██$f7█ █$f2██ $f4██$f7█ █$f4██$f7█ █$f4██ $f5██$f7█ █$f5██$f7█ █$f5██ $f6███$f7█▄▄$f6██$f7█▄▄$f6█ $f3███████▄ $f7▀▀ ▀▀ ▀▀ $f1████████████ $f2████████████ $f4████████████ $f5████████████ $f6████████████ $f3▀█████████▄▄ $f1██▀██▀▀██▀██ $f2██▀██▀▀██▀██ $f4██▀██▀▀██▀██ $f5██▀██▀▀██▀██ $f6██▀██▀▀██▀██ $f3 ▀███████▀ $f1▀ ▀ ▀ ▀ $f2▀ ▀ ▀ ▀ $f4▀ ▀ ▀ ▀ $f5▀ ▀ ▀ ▀ $f6▀ ▀ ▀ ▀ $bld $f3 ▄███████▄ $f1 ▄██████▄ $f2 ▄██████▄ $f4 ▄██████▄ $f5 ▄██████▄ $f6 ▄██████▄ $f3▄█████████▀▀ $f1▄$f7█▀█$f1██$f7█▀█$f1██▄ $f2▄█$f7█ █$f2██$f7█ █$f2█▄ $f4▄█$f7█ █$f4██$f7█ █$f4█▄ $f5▄█$f7█ █$f5██$f7█ █$f5█▄ $f6▄██$f7█▀█$f6██$f7█▀█$f6▄ $f3███████▀ $f7▄▄ ▄▄ ▄▄ $f1█$f7▄▄█$f1██$f7▄▄█$f1███ $f2██$f7███$f2██$f7███$f2██ $f4██$f7███$f4██$f7███$f4██ $f5██$f7███$f5██$f7███$f5██ $f6███$f7█▄▄$f6██$f7█▄▄$f6█ $f3███████▄ $f7▀▀ ▀▀ ▀▀ $f1████████████ $f2████████████ $f4████████████ $f5████████████ $f6████████████ $f3▀█████████▄▄ $f1██▀██▀▀██▀██ $f2██▀██▀▀██▀██ $f4██▀██▀▀██▀██ $f5██▀██▀▀██▀██ $f6██▀██▀▀██▀██ $f3 ▀███████▀ $f1▀ ▀ ▀ ▀ $f2▀ ▀ ▀ ▀ $f4▀ ▀ ▀ ▀ $f5▀ ▀ ▀ ▀ $f6▀ ▀ ▀ ▀ $rst EOF</description></item><item><title>secret</title><link>https://hellupline.dev/configurations/kubernetes/secret/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/configurations/kubernetes/secret/</guid><description> Download --- apiVersion: v1 kind: Secret metadata: labels: {app: my-app} name: my-app-secret namespace: my-namespace type: Opaque stringData: SECRET_ENV: my-secret-env-value SECRET_FILE: | { &amp;#34;key_01&amp;#34;: &amp;#34;value_02&amp;#34;, &amp;#34;key_02&amp;#34;: &amp;#34;value_02&amp;#34;, }</description></item><item><title>cached</title><link>https://hellupline.dev/scripts/utils/cached/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/utils/cached/</guid><description> Download #!/bin/sh # Usage: # $ cached &amp;#34;cache-file&amp;#34; &amp;#34;command&amp;#34; # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist die () { echo &amp;gt;&amp;amp;2 &amp;#34;$@&amp;#34; exit 1 } [ &amp;#34;$#&amp;#34; -eq 2 ] || die &amp;#34;2 argument required, $#provided&amp;#34; FILENAME=&amp;#34;${1}&amp;#34; COMMAND=&amp;#34;${2}&amp;#34; if [ -f &amp;#34;${FILENAME}&amp;#34; ]; then cat &amp;#34;${FILENAME}&amp;#34; else sh -c &amp;#34;${COMMAND}&amp;#34; | tee &amp;#34;${FILENAME}&amp;#34; fi</description></item><item><title>ghosts</title><link>https://hellupline.dev/scripts/toys/ghosts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/toys/ghosts/</guid><description> Download #!/bin/bash # # ANSI color scheme script by pfh # # Initializing mod by lolilolicon from Archlinux # f=3 b=4 for j in f b; do for i in {0..7}; do printf -v $j$i %b &amp;#34;\e[${!j}${i}m&amp;#34; done done bld=$&amp;#39;\e[1m&amp;#39; rst=$&amp;#39;\e[0m&amp;#39; inv=$&amp;#39;\e[7m&amp;#39; cat &amp;lt;&amp;lt; EOF $f1 ▄▄▄ $f2 ▄▄▄ $f3 ▄▄▄ $f4 ▄▄▄ $f5 ▄▄▄ $f6 ▄▄▄ $f1 ▀█▀██ ▄ $f2 ▀█▀██ ▄ $f3 ▀█▀██ ▄ $f4 ▀█▀██ ▄ $f5 ▀█▀██ ▄ $f6 ▀█▀██ ▄ $f1 ▀▄██████▀ $f2 ▀▄██████▀ $f3 ▀▄██████▀ $f4 ▀▄██████▀ $f5 ▀▄██████▀ $f6 ▀▄██████▀ $f1 ▀█████ $f2 ▀█████ $f3 ▀█████ $f4 ▀█████ $f5 ▀█████ $f6 ▀█████ $f1 ▀▀▀▀▄ $f2 ▀▀▀▀▄ $f3 ▀▀▀▀▄ $f4 ▀▀▀▀▄ $f5 ▀▀▀▀▄ $f6 ▀▀▀▀▄ $bld $f1 ▄▄▄ $f2 ▄▄▄ $f3 ▄▄▄ $f4 ▄▄▄ $f5 ▄▄▄ $f6 ▄▄▄ $f1 ▀█▀██ ▄ $f2 ▀█▀██ ▄ $f3 ▀█▀██ ▄ $f4 ▀█▀██ ▄ $f5 ▀█▀██ ▄ $f6 ▀█▀██ ▄ $f1 ▀▄██████▀ $f2 ▀▄██████▀ $f3 ▀▄██████▀ $f4 ▀▄██████▀ $f5 ▀▄██████▀ $f6 ▀▄██████▀ $f1 ▀█████ $f2 ▀█████ $f3 ▀█████ $f4 ▀█████ $f5 ▀█████ $f6 ▀█████ $f1 ▀▀▀▀▄ $f2 ▀▀▀▀▄ $f3 ▀▀▀▀▄ $f4 ▀▀▀▀▄ $f5 ▀▀▀▀▄ $f6 ▀▀▀▀▄ $rst EOF</description></item><item><title>service</title><link>https://hellupline.dev/configurations/kubernetes/service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/configurations/kubernetes/service/</guid><description> Download --- apiVersion: v1 kind: Service metadata: labels: {app: my-app} name: my-app-service namespace: my-namespace spec: type: ClusterIP externalTrafficPolicy: Local selector: {app: my-app} ports: - {name: http, protocol: TCP, port: 80, targetPort: 80}</description></item><item><title>ryu</title><link>https://hellupline.dev/scripts/toys/ryu/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/toys/ryu/</guid><description>Download #!/bin/bash # s y n t a x . s a m u r a i # p r e s e n t s # # ███████ ██ ██ ██ ██ # ░██░░░░██ ░░██ ██ ░██ ░██ # ░██ ░██ ░░████ ░██ ░██ # ░███████ ░░██ ░██ ░██ # ░██░░░██ ░██ ░██ ░██ # ░██ ░░██ ░██ ░██ ░██ # ░██ ░░██ ░██ ░░███████ # ░░ ░░ ░░ ░░░░░░░ # # ansi art of ryu hayabusa from ninja gaiden # # ▓▓▓▓▓▓▓▓▓▓ # ░▓ author ▓ xero &amp;lt;x@xero.</description></item><item><title>service-endpoint</title><link>https://hellupline.dev/configurations/kubernetes/service-endpoint/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/configurations/kubernetes/service-endpoint/</guid><description> Download --- apiVersion: v1 kind: Service metadata: labels: {app: my-app} name: my-app-service namespace: my-namespace spec: ports: - {name: http, protocol: TCP, port: 80, targetPort: 80} --- apiVersion: v1 kind: Endpoints metadata: labels: {app: my-app} name: my-app-service namespace: my-namespace subsets: - addresses: - ip: 192.0.2.42 ports: - port: 9376</description></item><item><title>tabular</title><link>https://hellupline.dev/scripts/utils/tabular/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/utils/tabular/</guid><description> Download #!/bin/sh # Usage: # $ cat data.tsv | tabular &amp;#34;|&amp;#34; # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist SEPARATOR=&amp;#34;${1:-|}&amp;#34; column -t -s &amp;#34;${SEPARATOR}&amp;#34; | less</description></item><item><title>invaders</title><link>https://hellupline.dev/scripts/toys/invaders/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/toys/invaders/</guid><description>Download #!/bin/sh # ANSI Color -- use these variables to easily have different color # and format output. Make sure to output the reset sequence after # colors (f = foreground, b = background), and use the &amp;#39;off&amp;#39; # feature for anything you turn on. initializeANSI() { esc=&amp;#34;&amp;#34; blackf=&amp;#34;${esc}[30m&amp;#34;; redf=&amp;#34;${esc}[31m&amp;#34;; greenf=&amp;#34;${esc}[32m&amp;#34; yellowf=&amp;#34;${esc}[33m&amp;#34; bluef=&amp;#34;${esc}[34m&amp;#34;; purplef=&amp;#34;${esc}[35m&amp;#34; cyanf=&amp;#34;${esc}[36m&amp;#34;; whitef=&amp;#34;${esc}[37m&amp;#34; blackb=&amp;#34;${esc}[40m&amp;#34;; redb=&amp;#34;${esc}[41m&amp;#34;; greenb=&amp;#34;${esc}[42m&amp;#34; yellowb=&amp;#34;${esc}[43m&amp;#34; blueb=&amp;#34;${esc}[44m&amp;#34;; purpleb=&amp;#34;${esc}[45m&amp;#34; cyanb=&amp;#34;${esc}[46m&amp;#34;; whiteb=&amp;#34;${esc}[47m&amp;#34; boldon=&amp;#34;${esc}[1m&amp;#34;; boldoff=&amp;#34;${esc}[22m&amp;#34; italicson=&amp;#34;${esc}[3m&amp;#34;; italicsoff=&amp;#34;${esc}[23m&amp;#34; ulon=&amp;#34;${esc}[4m&amp;#34;; uloff=&amp;#34;${esc}[24m&amp;#34; invon=&amp;#34;${esc}[7m&amp;#34;; invoff=&amp;#34;${esc}[27m&amp;#34; reset=&amp;#34;${esc}[0m&amp;#34; } # note in this first use that switching colors doesn&amp;#39;t require a reset # first - the new color overrides the old one.</description></item><item><title>service-dns</title><link>https://hellupline.dev/configurations/kubernetes/service-dns/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/configurations/kubernetes/service-dns/</guid><description> Download --- apiVersion: v1 kind: Service metadata: labels: {app: my-app} name: my-app-service namespace: my-namespace spec: type: ExternalName externalName: my.database.example.com</description></item><item><title>utcnow</title><link>https://hellupline.dev/scripts/utils/utcnow/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/utils/utcnow/</guid><description> Download #!/bin/sh # Usage: # $ utcnow # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist date --iso-8601=seconds --utc</description></item><item><title>git-cleanup</title><link>https://hellupline.dev/scripts/utils/git-cleanup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/utils/git-cleanup/</guid><description> Download #!/bin/sh # Usage: # $ git-cleanup # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist git checkout master git pull git remote prune origin git branch --merged | grep --extended-regexp --invert-match &amp;#34;(^\*|master|dev)&amp;#34; | xargs git branch --delete</description></item><item><title>ingress</title><link>https://hellupline.dev/configurations/kubernetes/ingress/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/configurations/kubernetes/ingress/</guid><description>Download --- apiVersion: extensions/v1beta1 kind: Ingress metadata: labels: {app: my-app} name: my-app namespace: production spec: tls: - secretName: my-domain-com-tls hosts: - my-domain.com rules: - host: my-domain.com http: paths: - {backend: {serviceName: my-other-app, servicePort: 80}, path: /my-other-app} - {backend: {serviceName: my-app, servicePort: 80}} # handle other domains, but without tls - http: paths: - {backend: {serviceName: my-other-app, servicePort: 80}, path: /my-other-app} - {backend: {serviceName: my-app, servicePort: 80}} --- apiVersion: v1 kind: Secret metadata: annotations: kubernetes.</description></item><item><title>skull</title><link>https://hellupline.dev/scripts/toys/skull/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/toys/skull/</guid><description>Download #!/bin/bash f=3 b=4 for j in f b; do for i in {0..7}; do printf -v $j$i %b &amp;#34;\e[${!j}${i}m&amp;#34; done done bld=$&amp;#39;\e[1m&amp;#39; rst=$&amp;#39;\e[0m&amp;#39; inv=$&amp;#39;\e[7m&amp;#39; cat &amp;lt;&amp;lt; EOF $f4 ...----.... $f4 ..-:&amp;#34;&amp;#39;&amp;#39; &amp;#39;&amp;#39;&amp;#34;-.. $f4 .-&amp;#39; &amp;#39;-. $f4 .&amp;#39; . . &amp;#39;. $f4 .&amp;#39; . . . . .&amp;#39;&amp;#39;. $f4 .&amp;#39; . . . . . . . ..:. $f4 .&amp;#39; . . . . . . .. .</description></item><item><title>blurlock</title><link>https://hellupline.dev/scripts/utils/blurlock/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/utils/blurlock/</guid><description> Download #!/bin/sh # Usage: # $ blurlock # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist SCREENSHOT=$(mktemp --suffix=.png) BLUR=$(mktemp --suffix=.png) # take screenshot gm import -window root ${SCREENSHOT} # blur it gm convert ${SCREENSHOT} -blur 0x5 ${BLUR} rm ${SCREENSHOT} # lock the screen i3lock -i ${BLUR} # sleep 1 adds a small delay to prevent possible race conditions with suspend sleep 1</description></item><item><title>hpa</title><link>https://hellupline.dev/configurations/kubernetes/hpa/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/configurations/kubernetes/hpa/</guid><description> Download --- apiVersion: autoscaling/v2beta2 kind: HorizontalPodAutoscaler metadata: labels: {app: my-app} name: my-app namespace: my-namespace spec: scaleTargetRef: {apiVersion: apps/v1, kind: Deployment, name: my-app} minReplicas: 2 maxReplicas: 10 metrics: - type: Resource resource: name: cpu target: {type: Utilization, averageUtilization: 50} - type: Object object: describedObject: {apiVersion: networking.k8s.io/v1beta1, kind: Ingress, name: my-app} metric: {name: requests-per-second} target: {kind: Value, value: 60} - type: Pods pods: metric: {name: packets-per-second} target: {type: AverageValue, averageValue: 1k}</description></item><item><title>slendy</title><link>https://hellupline.dev/scripts/toys/slendy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/toys/slendy/</guid><description> Download #!/bin/sh initializeANSI() { esc=&amp;#34;&amp;#34; blackf=&amp;#34;${esc}[30m&amp;#34;; redf=&amp;#34;${esc}[31m&amp;#34;; greenf=&amp;#34;${esc}[32m&amp;#34; yellowf=&amp;#34;${esc}[33m&amp;#34; bluef=&amp;#34;${esc}[34m&amp;#34;; purplef=&amp;#34;${esc}[35m&amp;#34; cyanf=&amp;#34;${esc}[36m&amp;#34;; whitef=&amp;#34;${esc}[37m&amp;#34; blackb=&amp;#34;${esc}[40m&amp;#34;; redb=&amp;#34;${esc}[41m&amp;#34;; greenb=&amp;#34;${esc}[42m&amp;#34; yellowb=&amp;#34;${esc}[43m&amp;#34; blueb=&amp;#34;${esc}[44m&amp;#34;; purpleb=&amp;#34;${esc}[45m&amp;#34; cyanb=&amp;#34;${esc}[46m&amp;#34;; whiteb=&amp;#34;${esc}[47m&amp;#34; boldon=&amp;#34;${esc}[1m&amp;#34;; boldoff=&amp;#34;${esc}[22m&amp;#34; italicson=&amp;#34;${esc}[3m&amp;#34;; italicsoff=&amp;#34;${esc}[23m&amp;#34; ulon=&amp;#34;${esc}[4m&amp;#34;; uloff=&amp;#34;${esc}[24m&amp;#34; invon=&amp;#34;${esc}[7m&amp;#34;; invoff=&amp;#34;${esc}[27m&amp;#34; reset=&amp;#34;${esc}[0m&amp;#34; } initializeANSI cat &amp;lt;&amp;lt; EOF ${reset}${blackf}| | | | |${reset} ${redf}█ █${reset} ${blackf}|${reset} ${greenf}█ █${reset} ${blackf}|${reset} ${yellowf}█ █${reset} ${blackf}|${reset} ${bluef}█ █${reset} ${blackf}|${reset} ${purplef}█ █${reset} ${blackf}|${reset} ${cyanf}█ █${reset} ${redf}███████${reset} ${blackf}|${reset} ${greenf}███████${reset} ${blackf}|${reset} ${yellowf}███████${reset} ${blackf}|${reset} ${bluef}███████${reset} ${blackf}|${reset} ${purplef}███████${reset} ${blackf}|${reset} ${cyanf}███████${reset} ${redf}███${boldon}${redb}██${reset}${redf}█${boldon}${redb}██${reset}${redf}███${reset} ${blackf}|${reset} ${greenf}███${boldon}${greenb}██${reset}${greenf}█${boldon}${greenb}██${reset}${greenf}███${reset} ${blackf}|${reset} ${yellowf}███${boldon}${yellowb}██${reset}${yellowf}█${boldon}${yellowb}██${reset}${yellowf}███${reset} ${blackf}|${reset} ${bluef}███${boldon}${blueb}██${reset}${bluef}█${boldon}${blueb}██${reset}${bluef}███${reset} ${blackf}|${reset} ${purplef}███${boldon}${purpleb}██${reset}${purplef}█${boldon}${purpleb}██${reset}${purplef}███${reset} ${blackf}|${reset} ${cyanf}███${boldon}${cyanb}██${reset}${cyanf}█${boldon}${cyanb}██${reset}${cyanf}███${reset} ${redf}████${boldon}${redb}█${reset}${redf}████${reset} ${blackf}|${reset} ${greenf}████${boldon}${greenb}█${reset}${greenf}████${reset} ${blackf}|${reset} ${yellowf}████${boldon}${yellowb}█${reset}${yellowf}████${reset} ${blackf}|${reset} ${bluef}████${boldon}${blueb}█${reset}${bluef}████${reset} ${blackf}|${reset} ${purplef}████${boldon}${purpleb}█${reset}${purplef}████${reset} ${blackf}|${reset} ${cyanf}████${boldon}${cyanb}█${reset}${cyanf}████${reset} ${redf}█ █ ${boldon}█${reset} ${redf}█ █${reset} ${blackf}|${reset} ${greenf}█ █ ${boldon}█${reset} ${greenf}█ █${reset} ${blackf}|${reset} ${yellowf}█ █ ${boldon}█${reset} ${yellowf}█ █${reset} ${blackf}|${reset} ${bluef}█ █ ${boldon}█${reset} ${bluef}█ █${reset} ${blackf}|${reset} ${purplef}█ █ ${boldon}█${reset} ${purplef}█ █${reset} ${blackf}|${reset} ${cyanf}█ █ ${boldon}█${reset} ${cyanf}█ █${reset} ${redf}█ █${reset} ${blackf}|${reset} ${greenf}█ █${reset} ${blackf}|${reset} ${yellowf}█ █${reset} ${blackf}|${reset} ${bluef}█ █${reset} ${blackf}|${reset} ${purplef}█ █${reset} ${blackf}|${reset} ${cyanf}█ █${reset} ${blackf}| | | | |${reset} EOF</description></item><item><title>play-old</title><link>https://hellupline.dev/scripts/utils/play-old/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/utils/play-old/</guid><description> Download #!/bin/sh # Usage: # $ play-random ./ # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist find &amp;#34;${@}&amp;#34; -type f \ -regextype posix-egrep \ -regex &amp;#39;.*\.(avi|mkv|mp4|wmv|flv|webm)$&amp;#39; \ -printf &amp;#39;%T@ %p\n&amp;#39; \ | sort -k1nr \ | cut -d&amp;#39; &amp;#39; -f2- \ | xargs -d&amp;#39;\n&amp;#39; mpv -quiet</description></item><item><title>volume-local-disk</title><link>https://hellupline.dev/configurations/kubernetes/volume-local-disk/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/configurations/kubernetes/volume-local-disk/</guid><description> Download --- apiVersion: v1 kind: PersistentVolume metadata: labels: {app: my-app} name: my-pv namespace: my-namespace spec: storageClassName: manual hostPath: {path: &amp;#34;/opt/volumes/my-pv&amp;#34;} capacity: {storage: 10Gi} accessModes: [ReadWriteOnce] --- apiVersion: v1 kind: PersistentVolumeClaim metadata: labels: {app: my-app} name: my-pvc namespace: my-namespace spec: storageClassName: manual selector: {matchLabels: {type: my-app}} resources: requests: {storage: 10Gi} accessModes: [ReadWriteOnce]</description></item><item><title>play-random</title><link>https://hellupline.dev/scripts/utils/play-random/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/utils/play-random/</guid><description> Download #!/bin/sh # Usage: # $ play-random ./ # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist find &amp;#34;${@}&amp;#34; -type f \ -regextype posix-egrep \ -regex &amp;#39;.*\.(avi|mkv|mp4|wmv|flv|webm)$&amp;#39; \ -printf &amp;#39;%T@ %p\n&amp;#39; \ | sort -R \ | cut -d&amp;#39; &amp;#39; -f2- \ | xargs -d&amp;#39;\n&amp;#39; mpv -quiet</description></item><item><title>volume-cloud</title><link>https://hellupline.dev/configurations/kubernetes/volume-cloud/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/configurations/kubernetes/volume-cloud/</guid><description> Download --- apiVersion: v1 kind: PersistentVolumeClaim metadata: name: my-pvc spec: resources: {requests: {storage: 3Gi}} accessModes: [ReadWriteOnce]</description></item><item><title>namespace</title><link>https://hellupline.dev/configurations/kubernetes/namespace/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/configurations/kubernetes/namespace/</guid><description> Download --- apiVersion: v1 kind: Namespace metadata: name: my-namespace labels: name: my-namespace</description></item><item><title>spotifyctl</title><link>https://hellupline.dev/scripts/utils/spotifyctl/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/utils/spotifyctl/</guid><description>Download #!/bin/sh # Usage: # $ spotifyctl # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist die () { echo &amp;gt;&amp;amp;2 &amp;#34;$@&amp;#34; exit 1 } [ &amp;#34;$#&amp;#34; -eq 1 ] || die &amp;#34;1 argument required, $#provided&amp;#34; COMMAND=&amp;#34;${1}&amp;#34; [ &amp;#34;$(pidof spotify)&amp;#34; != &amp;#34;&amp;#34; ] || die &amp;#34;Spotify not running!&amp;#34; case &amp;#34;${COMMAND}&amp;#34; in &amp;#34;play&amp;#34;|&amp;#34;pause&amp;#34;|&amp;#34;playpause&amp;#34;) dbus-send --print-reply --dest=org.</description></item><item><title>private-registry-credentials</title><link>https://hellupline.dev/configurations/kubernetes/private-registry-credentials/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/configurations/kubernetes/private-registry-credentials/</guid><description> Download --- apiVersion: v1 kind: Secret metadata: name: gitlab-registry-secrets namespace: my-namespace type: kubernetes.io/dockerconfigjson stringData: .dockerconfigjson: &amp;#39;{&amp;#34;auths&amp;#34;:{&amp;#34;https://registry.gitlab.com&amp;#34;:{&amp;#34;username&amp;#34;:&amp;#34;&amp;#34;,&amp;#34;password&amp;#34;:&amp;#34;&amp;#34;}}}&amp;#39; --- apiVersion: v1 kind: ServiceAccount metadata: name: default namespace: my-namespace imagePullSecrets: - name: gitlab-registry-secrets</description></item><item><title>wallpapers</title><link>https://hellupline.dev/scripts/utils/wallpapers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/scripts/utils/wallpapers/</guid><description> Download #!/bin/sh # Usage: # $ SLEEP=60 wallpapers ~/wallpapers # set -x # verbose set -o pipefail # exit on pipeline error set -e # exit on error set -u # variable must exist die () { echo &amp;gt;&amp;amp;2 &amp;#34;$@&amp;#34; exit 1 } [ &amp;#34;$#&amp;#34; -gt 0 ] || die &amp;#34;1 argument required, $#provided&amp;#34; SOURCES=${@} while true; do feh --recursive --randomize --bg-max --no-fehbg ${SOURCES[@]} sleep &amp;#34;${SLEEP:-60}&amp;#34; done</description></item><item><title>rbac-cluster-full-access</title><link>https://hellupline.dev/configurations/kubernetes/rbac-cluster-full-access/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/configurations/kubernetes/rbac-cluster-full-access/</guid><description> Download --- apiVersion: rbac.authorization.k8s.io/v1beta1 kind: ClusterRole metadata: name: my-cluster-role--full-access rules: - apiGroups: [&amp;#34;&amp;#34;, &amp;#34;extensions&amp;#34;, &amp;#34;apps&amp;#34;, &amp;#34;batch&amp;#34;] resources: [&amp;#34;*&amp;#34;] verbs: [&amp;#34;*&amp;#34;] --- apiVersion: v1 kind: ServiceAccount metadata: name: my-service-account namespace: my-namespace --- apiVersion: rbac.authorization.k8s.io/v1beta1 kind: ClusterRoleBinding metadata: name: my-cluster-role-binding--full-access roleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: my-cluster-role--full-access subjects: - apiGroup: rbac.authorization.k8s.io kind: ServiceAccount name: my-service-account namespace: my-namespace - apiGroup: rbac.authorization.k8s.io kind: User name: my-user - apiGroup: rbac.authorization.k8s.io kind: Group name: my-group</description></item><item><title>rbac-cluster-read-only</title><link>https://hellupline.dev/configurations/kubernetes/rbac-cluster-read-only/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/configurations/kubernetes/rbac-cluster-read-only/</guid><description> Download --- kind: ClusterRole apiVersion: rbac.authorization.k8s.io/v1beta1 metadata: name: my-cluster-role--read-only rules: - apiGroups: [&amp;#34;&amp;#34;, &amp;#34;extensions&amp;#34;, &amp;#34;apps&amp;#34;, &amp;#34;batch&amp;#34;] resources: [&amp;#34;*&amp;#34;] verbs: [&amp;#34;get&amp;#34;, &amp;#34;list&amp;#34;, &amp;#34;watch&amp;#34;] --- apiVersion: v1 kind: ServiceAccount metadata: name: my-service-account namespace: my-namespace --- kind: ClusterRoleBinding apiVersion: rbac.authorization.k8s.io/v1beta1 metadata: name: my-cluster-role-binding--read-only roleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: my-cluster-role--read-only subjects: - apiGroup: rbac.authorization.k8s.io kind: ServiceAccount name: my-service-account namespace: my-namespace - apiGroup: rbac.authorization.k8s.io kind: User name: my-user - apiGroup: rbac.authorization.k8s.io kind: Group name: my-group</description></item><item><title>rbac-namespace-full-access</title><link>https://hellupline.dev/configurations/kubernetes/rbac-namespace-full-access/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/configurations/kubernetes/rbac-namespace-full-access/</guid><description>Download --- kind: Role apiVersion: rbac.authorization.k8s.io/v1beta1 metadata: name: my-namespace-role--full-access namespace: my-namespace rules: - apiGroups: [&amp;#34;&amp;#34;, &amp;#34;extensions&amp;#34;, &amp;#34;apps&amp;#34;, &amp;#34;batch&amp;#34;] resources: [&amp;#34;*&amp;#34;] verbs: [&amp;#34;*&amp;#34;] --- apiVersion: v1 kind: ServiceAccount metadata: name: my-service-account namespace: my-namespace --- kind: RoleBinding apiVersion: rbac.authorization.k8s.io/v1beta1 metadata: name: my-namespace-role-binding--full-access namespace: my-namespace roleRef: apiGroup: rbac.authorization.k8s.io kind: Role name: my-namespace-role--full-access subjects: - apiGroup: rbac.authorization.k8s.io kind: ServiceAccount name: my-service-account namespace: my-namespace - apiGroup: rbac.authorization.k8s.io kind: User name: my-user - apiGroup: rbac.</description></item><item><title>rbac-namespace-read-only</title><link>https://hellupline.dev/configurations/kubernetes/rbac-namespace-read-only/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/configurations/kubernetes/rbac-namespace-read-only/</guid><description>Download --- kind: Role apiVersion: rbac.authorization.k8s.io/v1beta1 metadata: name: my-namespace-role--read-only namespace: my-namespace rules: - apiGroups: [&amp;#34;&amp;#34;, &amp;#34;extensions&amp;#34;, &amp;#34;apps&amp;#34;, &amp;#34;batch&amp;#34;] resources: [&amp;#34;*&amp;#34;] verbs: [&amp;#34;get&amp;#34;, &amp;#34;list&amp;#34;, &amp;#34;watch&amp;#34;] --- apiVersion: v1 kind: ServiceAccount metadata: name: my-service-account namespace: my-namespace --- kind: RoleBinding apiVersion: rbac.authorization.k8s.io/v1beta1 metadata: name: my-namespace-role-binding--read-only namespace: my-namespace roleRef: apiGroup: rbac.authorization.k8s.io kind: Role name: my-namespace-role--read-only subjects: - apiGroup: rbac.authorization.k8s.io kind: ServiceAccount name: my-service-account namespace: my-namespace - apiGroup: rbac.authorization.k8s.io kind: User name: my-user - apiGroup: rbac.</description></item><item><title>rbac-aggregated-maintenance</title><link>https://hellupline.dev/configurations/kubernetes/rbac-aggregated-maintenance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/configurations/kubernetes/rbac-aggregated-maintenance/</guid><description>Download --- apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRole metadata: name: deployment--maintenance aggregationRule: clusterRoleSelectors: - matchLabels: deployment.rbac.example.com/aggregate-to-create: &amp;#34;true&amp;#34; deployment.rbac.example.com/aggregate-to-read: &amp;#34;true&amp;#34; deployment.rbac.example.com/aggregate-to-update: &amp;#34;true&amp;#34; rules: [] # Rules are automatically filled in by the controller manager. --- apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRole metadata: name: deployment--create labels: deployment.rbac.example.com/aggregate-to-create: &amp;#34;true&amp;#34; # These rules will be added to the &amp;#34;monitoring&amp;#34; role. rules: - apiGroups: [&amp;#34;&amp;#34;] resources: [&amp;#34;services&amp;#34;, &amp;#34;endpoints&amp;#34;, &amp;#34;pods&amp;#34;] verbs: [&amp;#34;create&amp;#34;] - apiGroups: [&amp;#34;apps&amp;#34;, &amp;#34;extensions&amp;#34;] resources: [&amp;#34;deployments&amp;#34;] verbs: [&amp;#34;create&amp;#34;] --- apiVersion: rbac.</description></item><item><title>todo</title><link>https://hellupline.dev/articles/todo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/articles/todo/</guid><description> cheatsheets commands git graphicsmagick ffmpeg jq sftp</description></item><item><title>desktop-linux</title><link>https://hellupline.dev/cheatsheet/commands/desktop-linux/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/cheatsheet/commands/desktop-linux/</guid><description>notifications notify-send --urgency=critical --app-name=hello-nurse TITLE &amp;#34;BODY&amp;#34; clipboard xclip -out -selection clipboard &amp;gt; output.txt xclip -in -selection clipboard &amp;lt; input.txt</description></item><item><title>desktop-osx</title><link>https://hellupline.dev/cheatsheet/commands/desktop-osx/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/cheatsheet/commands/desktop-osx/</guid><description>homebrew install homebrew /usr/bin/ruby -e &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;#34; install packages HOMEBREW_NO_AUTO_UPDATE=1 brew install ... HOMEBREW_NO_AUTO_UPDATE=1 brew cask install ... notifications osascript -e &amp;#39;display notification &amp;#34;Body&amp;#34; with title &amp;#34;Title&amp;#34;&amp;#39; text to voice say &amp;#34;Hello World&amp;#34; clipboard pbpaste &amp;gt; output.txt pbcopy &amp;lt; input.txt</description></item><item><title>gallery</title><link>https://hellupline.dev/articles/gallery/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/articles/gallery/</guid><description/></item><item><title>install guide lazy mode</title><link>https://hellupline.dev/btw-archlinux/install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/btw-archlinux/install/</guid><description>ArchLinux Install Guide Lazy Mode Disks Partitions /boot/efi/ -&amp;gt; fat32 - 500mb / -&amp;gt; ext4 - 40gb swap -&amp;gt; swap - 8gb /home -&amp;gt; ext4 - space left Configuration ### Disk Partitions `sfdisk --label gpt --list-types` PARTITIONS=&amp;#39; label: gpt size=500M, type=C12A7328-F81F-11D2-BA4B-00A0C93EC93B, name=&amp;#34;EFI System&amp;#34;, bootable size= 40G, type=44479540-F297-41B2-9AF7-D131D5F0458A, name=&amp;#34;Linux x86-64 root (/)&amp;#34; size= 8G, type=0657FD6D-A4AB-43C4-84E5-0933C84B4F4F, name=&amp;#34;Linux swap&amp;#34; type=933AC7E1-2EB4-4F13-B844-0E14E2AEF915, name=&amp;#34;Linux /home&amp;#34; &amp;#39; ### Install Config KEYMAP=&amp;#34;br-abnt2&amp;#34; MIRROR=&amp;#34;BR&amp;#34; ### System Configuration TIMEZONE=&amp;#34;America/Sao_Paulo&amp;#34; LOCALE=&amp;#34;pt_BR.</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>nginx on HellUpLine Stuffs</title><link>https://hellupline.dev/cloud/nginx/</link><description>Recent content in nginx on HellUpLine Stuffs</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://hellupline.dev/cloud/nginx/index.xml" rel="self" type="application/rss+xml"/><item><title>http-to-https</title><link>https://hellupline.dev/cloud/nginx/http-to-https/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/cloud/nginx/http-to-https/</guid><description>Download # application server { server_name my-app.com; listen [::]:443 ssl http2 default_server ipv6only=on; listen 443 ssl http2 default_server; ssl_certificate /etc/letsencrypt/live/my-app.com/fullchain.pem; ssl_certificate_key /etc/letsencrypt/live/my-app.com/privkey.pem; access_log /var/log/nginx/access.log main; return 200 &amp;#34;hello world&amp;#34;; } # www-to-naked server { server_name www.my-app.com; listen [::]:443 ssl http2 default_server ipv6only=on; listen 443 ssl http2 default_server; ssl_certificate /etc/letsencrypt/live/my-app.com/fullchain.pem; ssl_certificate_key /etc/letsencrypt/live/my-app.com/privkey.pem; access_log /var/log/nginx/access.log main; return 301 https://my-app.com$request_uri; } # https only website server { server_name my-app.com www.my-app.com; listen [::]:80 default_server ipv6only=on; listen 80 default_server; access_log /var/log/nginx/access.</description></item><item><title>redirect</title><link>https://hellupline.dev/cloud/nginx/redirect/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/cloud/nginx/redirect/</guid><description> Download map $request_uri $new_uri { /my-app/ &amp;#34;https://my-app.com&amp;#34;; /my-app &amp;#34;https://my-app.com&amp;#34;; default &amp;#34;https://github.com/hellupline&amp;#34;; } server { server_name _; listen [::]:80 default_server ipv6only=on; listen 80 default_server; access_log /var/log/nginx/access.log main; return 301 $new_uri; }</description></item><item><title>static-site</title><link>https://hellupline.dev/cloud/nginx/static-site/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/cloud/nginx/static-site/</guid><description> Download server { server_name _; listen [::]:80 default_server ipv6only=on; listen 80 default_server; access_log /var/log/nginx/access.log main; sendfile on; sendfile_max_chunk 1m; tcp_nopush on; gzip on; gzip_min_length 1; gzip_types application/xml text/plain; root /usr/share/nginx/html; location / { try_files $uri $uri/ $uri.html =404; index index.html index.htm; } location /public/ { autoindex on; } error_page 404 /404.html; location = /404.html { internal; } error_page 500 502 503 504 /50x.html; location = /50x.html { internal; } }</description></item><item><title>cached-proxy</title><link>https://hellupline.dev/cloud/nginx/cached-proxy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/cloud/nginx/cached-proxy/</guid><description>Download proxy_cache_path /data/nginx/cache levels=1:2 keys_zone=mycache:10m purger=on; proxy_cache_key &amp;#34;$scheme$request_method$host$request_uri&amp;#34;; geo $purge_allowed { 192.168.0.0/24 1; 127.0.0.1 1; default 0; } map $request_method $purge_method { PURGE $purge_allowed; default 0; } upstream my-app-01 { least_conn; server my-app-01-1.example.com weight=5; server my-app-01-2.example.com; server 192.0.0.1 backup; } upstream my-app-02 { ip_hash; server my-app-02-1.example.com weight=5; server my-app-02-2.example.com; server my-app-02-3.example.com down; server 192.0.0.1 backup; } server { server_name _; listen [::]:80 default_server ipv6only=on; listen 80 default_server; access_log /var/log/nginx/access.</description></item></channel></rss>
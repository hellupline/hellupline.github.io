<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>commands on HellUpLine Stuffs</title><link>https://hellupline.dev/cheatsheet/commands/</link><description>Recent content in commands on HellUpLine Stuffs</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://hellupline.dev/cheatsheet/commands/index.xml" rel="self" type="application/rss+xml"/><item><title>linux</title><link>https://hellupline.dev/cheatsheet/commands/linux/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/cheatsheet/commands/linux/</guid><description>process management resident memory in megabytes for pid ps - o pid, rss, % mem, command ax | awk &amp;#39;/ ^\s * PID\s / { d = &amp;#34;date --utc +%Y-%m-%dT%T%z&amp;#34; d | getline curtime close(d) print curtime&amp;#34;,&amp;#34;$1&amp;#34;&amp;#34;, &amp;#34;$2/1024,&amp;#34;$3&amp;#34;,&amp;#34;$4 }&amp;#39; services management list running systemctl list-units --type=service --state=running --all # service --status-all services systemctl enable --now SERVICE # chkconfig SERVICE on systemctl disable --now SERVICE # chkconfig SERVICE off systemctl is-enabled SERVICE # chkconfig SERVICE systemctl daemon-reload # chkconfig SERVICE --add systemctl start SERVICE # service SERVICE start systemctl stop SERVICE # service SERVICE stop systemctl status SERVICE # service SERVICE status systemctl restart SERVICE # service SERVICE restart systemctl reload SERVICE # service SERVICE reload inspect journalctl --follow --since=today # tail --follow /var/log/{messages,syslog} journalctl --dmesg journalctl --unit SERVICE journalctl --list-boots journalctl --boot BOOT_ID</description></item><item><title>aws</title><link>https://hellupline.dev/cheatsheet/commands/aws/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/cheatsheet/commands/aws/</guid><description>list instance and private ips, filter by beanstalk environment aws --profile=default --region=us-east-1 ec2 describe-instances --filter &amp;#34;Name=tag:elasticbeanstalk:environment-name,Values=my-app&amp;#34; | \ jq --raw-output &amp;#39; .Reservations[].Instances[] | [.InstanceId, .PrivateIpAddress] | @csv&amp;#39; list elastic ips aws --profile=default --region=us-east-1 ec2 describe-addresses \ --public-ips \ --filter &amp;#34;Name=public-ip,Values=[10.0.0.1]&amp;#34; | jq --raw-output &amp;#39; .Addresses[] | [.PublicIp] | @csv&amp;#39; describe rds, filter by cacertificate version for PROFILE_NAME in &amp;#34;staging&amp;#34; &amp;#34;production&amp;#34;; do aws --profile=&amp;#34;${PROFILE_NAME}&amp;#34; ec2 describe-regions | jq --raw-output &amp;#39;.</description></item><item><title>curl</title><link>https://hellupline.dev/cheatsheet/commands/curl/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/cheatsheet/commands/curl/</guid><description>curl debug requests curl \ --silent --show-error \ --fail --fail-early \ --compress --location \ --create-dirs \ --dump-header - --output - \ --write-out &amp;#39; time_namelookup: %{time_namelookup} time_connect: %{time_connect} time_appconnect: %{time_appconnect} time_pretransfer: %{time_pretransfer} time_redirect: %{time_redirect} time_starttransfer: %{time_starttransfer} ---------- time_total: %{time_total} &amp;#39; \ --request GET --url https://example.com ip address curl https://ifconfig.co/ qr code echo &amp;#34;my text&amp;#34; | curl --form &amp;#39;data=&amp;lt;-&amp;#39; https://qrenco.de/ weather curl https://wttr.in/curitiba</description></item><item><title>gpg</title><link>https://hellupline.dev/cheatsheet/commands/gpg/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/cheatsheet/commands/gpg/</guid><description>list output format # sec rsa4096/xxxxxxxxxxxxxxxx 0000-00-00 [SC] # yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy # uid [ultimate] My Name &amp;lt;me@mail.com&amp;gt; # ssb rsa4096/zzzzzzzzzzzzzzzz 0000-00-00 [E] generate key gpg --full-generate-key encrypt gpg \ --output file.txt.enc \ --encrypt \ --local-user user@example.com \ --recipient another@example.com \ file.txt encrypt with passphrase gpg --output file.txt.enc --symmetric file.txt decrypt gpg --output file.txt --decrypt file.txt.enc sign file gpg --sign --armor file.txt clear sign file gpg --clear-sign file.</description></item><item><title>ssh</title><link>https://hellupline.dev/cheatsheet/commands/ssh/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/cheatsheet/commands/ssh/</guid><description>generate key ssh-keygen -t rsa -b 4096 -C &amp;#34;me@mail.com&amp;#34; reach server behind bastion ssh -Nnf -L localhost:8080:remote.example.com:5000 me@example.com # cancel forward ssh -O cancel -L localhost:8080:remote.example.com:5000 me@example.com # close opportunistic master ssh -O exit me@example.com reach localhost from bastion ssh -Nnf -R localhost:8080:remote.example.com:5000 me@example.com # cancel forward ssh -O cancel -R localhost:8080:remote.example.com:5000 me@example.com # close opportunistic master ssh -O exit me@example.com create a socks proxy ssh -Nnf -D 8080 me@example.com # cancel forward ssh -O cancel -D 8080 me@example.</description></item><item><title>network</title><link>https://hellupline.dev/cheatsheet/commands/network/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/cheatsheet/commands/network/</guid><description>dns query all records dig @1.1.1.1 example.com ANY query records dig @1.1.1.1 +short example.com AAAA trace records tld dig @1.1.1.1 +trace example.com AAAA curl debug requests curl \ --silent --show-error \ --fail --fail-early \ --compress --location \ --create-dirs \ --dump-header - --output - \ --write-out &amp;#39; time_namelookup: %{time_namelookup} time_connect: %{time_connect} time_appconnect: %{time_appconnect} time_pretransfer: %{time_pretransfer} time_redirect: %{time_redirect} time_starttransfer: %{time_starttransfer} ---------- time_total: %{time_total} &amp;#39; \ --request GET --url https://example.</description></item><item><title>utils</title><link>https://hellupline.dev/cheatsheet/commands/utils/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/cheatsheet/commands/utils/</guid><description>prettify json python -m json.tool simple smtp debug server sudo python -m smtpd -n -c DebuggingServer localhost:25 simple http server python -m http.server rsync rsync --verbose --human-readable --progress --stats --partial --archive \ --exclude &amp;#39;stuff/_data&amp;#39; \ -- &amp;#39;SOURCE_OBJECT_1&amp;#39; &amp;#39;SOURCE_OBJECT_2&amp;#39; &amp;#39;SOURCE_OBJECT_3&amp;#39; &amp;#39;TARGET&amp;#39; random password openssl rand -base64 33 date # RFC-3339 date --date=&amp;#39;1991-01-22 19:00:00 +300&amp;#39; date --rfc-3339=seconds # Timestamp date --date=&amp;#39;@664581600&amp;#39; date &amp;#39;+%s&amp;#39; # Relative date --date=&amp;#34;next Friday&amp;#34; date --date=&amp;#34;2 days ago&amp;#34; download audio from video youtube-dl \ --audio-format mp3 \ --audio-quality 320k \ --extract-audio stream desktop to address ffmpeg -f x11grab -s 1600x900 -framerate 15 -i :0.</description></item><item><title>desktop-linux</title><link>https://hellupline.dev/cheatsheet/commands/desktop-linux/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/cheatsheet/commands/desktop-linux/</guid><description>notifications notify-send --urgency=critical --app-name=hello-nurse TITLE &amp;#34;BODY&amp;#34; clipboard xclip -out -selection Clipboard &amp;gt; output.txt xclip -in -selection Clipboard &amp;lt; input.txt</description></item><item><title>desktop-osx</title><link>https://hellupline.dev/cheatsheet/commands/desktop-osx/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hellupline.dev/cheatsheet/commands/desktop-osx/</guid><description>homebrew install homebrew /usr/bin/ruby -e &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;#34; install packages HOMEBREW_NO_AUTO_UPDATE=1 brew install ... HOMEBREW_NO_AUTO_UPDATE=1 brew cask install ... notifications osascript -e &amp;#39;display notification &amp;#34;Body&amp;#34; with title &amp;#34;Title&amp;#34;&amp;#39; text to voice say &amp;#34;Hello World&amp;#34; clipboard pbpaste &amp;gt; output.txt pbcopy &amp;lt; input.txt</description></item></channel></rss>